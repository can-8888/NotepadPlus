{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\pages\\\\NotesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NoteList from '../components/NoteList';\nimport { api } from '../services/api';\nimport './NotesPage.css';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from '../components/Modal';\nimport NoteEditor from '../components/NoteEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesPage = ({\n  viewType = 'my-notes',\n  isCreating = false\n}) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [isNoteModalOpen, setIsNoteModalOpen] = useState(isCreating);\n  const navigate = useNavigate();\n  const handleNoteSelect = note => {\n    setSelectedNote(note);\n    setIsNoteModalOpen(true);\n  };\n  const handleDeleteNote = async id => {\n    try {\n      await api.deleteNote(id);\n      setNotes(notes.filter(note => note.id !== id));\n    } catch (err) {\n      console.error('Error deleting note:', err);\n    }\n  };\n  const handleMakePublic = async id => {\n    try {\n      await api.makeNotePublic(id);\n      // Refresh notes after making public\n      const updatedNotes = await api.getNotes();\n      setNotes(updatedNotes);\n    } catch (err) {\n      console.error('Error making note public:', err);\n    }\n  };\n  const handleShare = async id => {\n    try {\n      // For now, we'll show an alert to get the collaborator ID\n      const collaboratorId = prompt('Enter collaborator ID:');\n      if (!collaboratorId) return;\n      await api.shareNote(id, parseInt(collaboratorId, 10));\n      // Refresh notes after sharing\n      const updatedNotes = await api.getNotes();\n      setNotes(updatedNotes);\n    } catch (err) {\n      console.error('Error sharing note:', err);\n    }\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      if (selectedNote) {\n        // Editing existing note\n        const updatedNote = await api.updateNote(selectedNote.id, noteData);\n        setNotes(prevNotes => prevNotes.map(note => note.id === updatedNote.id ? updatedNote : note));\n      } else {\n        // Creating new note\n        const createdNote = await api.createNote(noteData);\n        setNotes(prevNotes => [...prevNotes, createdNote]);\n      }\n      setIsNoteModalOpen(false);\n      setSelectedNote(null);\n      navigate('/notes', {\n        replace: true\n      }); // Use replace to prevent back button issues\n    } catch (err) {\n      console.error('Error saving note:', err);\n      setError(err instanceof Error ? err.message : 'Failed to save note');\n    }\n  };\n  const handleCloseModal = () => {\n    setIsNoteModalOpen(false);\n    setSelectedNote(null);\n    navigate('/notes', {\n      replace: true\n    });\n  };\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        setIsLoading(true);\n        let fetchedNotes;\n        switch (viewType) {\n          case 'shared':\n            fetchedNotes = await api.getSharedNotes();\n            break;\n          case 'public':\n            fetchedNotes = await api.getPublicNotes();\n            break;\n          default:\n            fetchedNotes = await api.getNotes();\n        }\n        setNotes(fetchedNotes);\n      } catch (err) {\n        setError('Failed to fetch notes');\n        console.error('Error fetching notes:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchNotes();\n  }, [viewType]);\n\n  // Get unique categories using Object.keys and reduce\n  const categories = notes.reduce((acc, note) => {\n    if (note.category) {\n      acc[note.category] = true;\n    }\n    return acc;\n  }, {});\n  const uniqueCategories = Object.keys(categories);\n\n  // Filter and sort notes\n  const filteredNotes = notes.filter(note => {\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !selectedCategory || note.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: viewType === 'shared' ? 'Shared Notes' : viewType === 'public' ? 'Public Notes' : 'My Notes'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), isNoteModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isNoteModalOpen,\n      title: selectedNote ? \"Edit Note\" : \"Create New Note\",\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(NoteEditor, {\n        note: selectedNote || undefined,\n        onSave: handleSaveNote,\n        onCancel: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search notes...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"category-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), uniqueCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        className: \"sort-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date-desc\",\n          children: \"Newest First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date-asc\",\n          children: \"Oldest First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"category\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: filteredNotes,\n        isLoading: isLoading,\n        error: error,\n        onNoteSelect: handleNoteSelect,\n        onDeleteNote: handleDeleteNote,\n        onMakePublic: handleMakePublic,\n        onShare: handleShare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(NotesPage, \"cOXFfXwqoBzp/+BQ+hjL+SB/ftc=\", false, function () {\n  return [useNavigate];\n});\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useEffect","useState","NoteList","api","useNavigate","Modal","NoteEditor","jsxDEV","_jsxDEV","NotesPage","viewType","isCreating","_s","notes","setNotes","isLoading","setIsLoading","error","setError","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","selectedNote","setSelectedNote","isNoteModalOpen","setIsNoteModalOpen","navigate","handleNoteSelect","note","handleDeleteNote","id","deleteNote","filter","err","console","handleMakePublic","makeNotePublic","updatedNotes","getNotes","handleShare","collaboratorId","prompt","shareNote","parseInt","handleSaveNote","noteData","updatedNote","updateNote","prevNotes","map","createdNote","createNote","replace","Error","message","handleCloseModal","fetchNotes","fetchedNotes","getSharedNotes","getPublicNotes","categories","reduce","acc","category","uniqueCategories","Object","keys","filteredNotes","matchesSearch","title","toLowerCase","includes","content","matchesCategory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","undefined","onSave","onCancel","type","placeholder","value","onChange","e","target","onNoteSelect","onDeleteNote","onMakePublic","onShare","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/pages/NotesPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NoteList from '../components/NoteList';\r\nimport { Note } from '../types/Note';\r\nimport { api } from '../services/api';\r\nimport './NotesPage.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from '../components/Modal';\r\nimport NoteEditor from '../components/NoteEditor';\r\n\r\ninterface NotesPageProps {\r\n    viewType?: 'my-notes' | 'shared' | 'public';\r\n    isCreating?: boolean;\r\n}\r\n\r\nconst NotesPage: React.FC<NotesPageProps> = ({ viewType = 'my-notes', isCreating = false }) => {\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [sortBy, setSortBy] = useState('date-desc');\r\n    const [selectedNote, setSelectedNote] = useState<Note | null>(null);\r\n    const [isNoteModalOpen, setIsNoteModalOpen] = useState(isCreating);\r\n    const navigate = useNavigate();\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        setSelectedNote(note);\r\n        setIsNoteModalOpen(true);\r\n    };\r\n\r\n    const handleDeleteNote = async (id: number) => {\r\n        try {\r\n            await api.deleteNote(id);\r\n            setNotes(notes.filter(note => note.id !== id));\r\n        } catch (err) {\r\n            console.error('Error deleting note:', err);\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (id: number) => {\r\n        try {\r\n            await api.makeNotePublic(id);\r\n            // Refresh notes after making public\r\n            const updatedNotes = await api.getNotes();\r\n            setNotes(updatedNotes);\r\n        } catch (err) {\r\n            console.error('Error making note public:', err);\r\n        }\r\n    };\r\n\r\n    const handleShare = async (id: number) => {\r\n        try {\r\n            // For now, we'll show an alert to get the collaborator ID\r\n            const collaboratorId = prompt('Enter collaborator ID:');\r\n            if (!collaboratorId) return;\r\n\r\n            await api.shareNote(id, parseInt(collaboratorId, 10));\r\n            // Refresh notes after sharing\r\n            const updatedNotes = await api.getNotes();\r\n            setNotes(updatedNotes);\r\n        } catch (err) {\r\n            console.error('Error sharing note:', err);\r\n        }\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            if (selectedNote) {\r\n                // Editing existing note\r\n                const updatedNote = await api.updateNote(selectedNote.id, noteData);\r\n                setNotes(prevNotes => \r\n                    prevNotes.map(note => \r\n                        note.id === updatedNote.id ? updatedNote : note\r\n                    )\r\n                );\r\n            } else {\r\n                // Creating new note\r\n                const createdNote = await api.createNote(noteData);\r\n                setNotes(prevNotes => [...prevNotes, createdNote]);\r\n            }\r\n            \r\n            setIsNoteModalOpen(false);\r\n            setSelectedNote(null);\r\n            navigate('/notes', { replace: true }); // Use replace to prevent back button issues\r\n        } catch (err) {\r\n            console.error('Error saving note:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setIsNoteModalOpen(false);\r\n        setSelectedNote(null);\r\n        navigate('/notes', { replace: true });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchNotes = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                let fetchedNotes;\r\n                switch (viewType) {\r\n                    case 'shared':\r\n                        fetchedNotes = await api.getSharedNotes();\r\n                        break;\r\n                    case 'public':\r\n                        fetchedNotes = await api.getPublicNotes();\r\n                        break;\r\n                    default:\r\n                        fetchedNotes = await api.getNotes();\r\n                }\r\n                setNotes(fetchedNotes);\r\n            } catch (err) {\r\n                setError('Failed to fetch notes');\r\n                console.error('Error fetching notes:', err);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchNotes();\r\n    }, [viewType]);\r\n\r\n    // Get unique categories using Object.keys and reduce\r\n    const categories = notes\r\n        .reduce((acc: { [key: string]: boolean }, note) => {\r\n            if (note.category) {\r\n                acc[note.category] = true;\r\n            }\r\n            return acc;\r\n        }, {});\r\n    const uniqueCategories = Object.keys(categories);\r\n\r\n    // Filter and sort notes\r\n    const filteredNotes = notes.filter(note => {\r\n        const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                            note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n        const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n        return matchesSearch && matchesCategory;\r\n    });\r\n\r\n    return (\r\n        <div className=\"notes-page\">\r\n            <h1>{viewType === 'shared' ? 'Shared Notes' : viewType === 'public' ? 'Public Notes' : 'My Notes'}</h1>\r\n            {isNoteModalOpen && (\r\n                <Modal \r\n                    isOpen={isNoteModalOpen}\r\n                    title={selectedNote ? \"Edit Note\" : \"Create New Note\"}\r\n                    onClose={handleCloseModal}\r\n                >\r\n                    <NoteEditor\r\n                        note={selectedNote || undefined}\r\n                        onSave={handleSaveNote}\r\n                        onCancel={handleCloseModal}\r\n                    />\r\n                </Modal>\r\n            )}\r\n            <div className=\"search-filters\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search notes...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-input\"\r\n                />\r\n                <select\r\n                    value={selectedCategory}\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                    className=\"category-filter\"\r\n                >\r\n                    <option value=\"\">All Categories</option>\r\n                    {uniqueCategories.map(category => (\r\n                        <option key={category} value={category}>\r\n                            {category}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select\r\n                    value={sortBy}\r\n                    onChange={(e) => setSortBy(e.target.value)}\r\n                    className=\"sort-select\"\r\n                >\r\n                    <option value=\"date-desc\">Newest First</option>\r\n                    <option value=\"date-asc\">Oldest First</option>\r\n                    <option value=\"title\">Title</option>\r\n                    <option value=\"category\">Category</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"notes-container\">\r\n                <NoteList \r\n                    notes={filteredNotes}\r\n                    isLoading={isLoading}\r\n                    error={error}\r\n                    onNoteSelect={handleNoteSelect}\r\n                    onDeleteNote={handleDeleteNote}\r\n                    onMakePublic={handleMakePublic}\r\n                    onShare={handleShare}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}