{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n\n  // Initialize auth state once on mount\n  useEffect(() => {\n    const initializeAuth = () => {\n      try {\n        const storedToken = localStorage.getItem('token');\n        const storedUser = localStorage.getItem('user');\n        if (storedToken && storedUser) {\n          const parsedUser = JSON.parse(storedUser);\n          setToken(storedToken);\n          setUser(parsedUser);\n        }\n      } catch (error) {\n        console.error('Error initializing auth state:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      } finally {\n        setIsInitialized(true);\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Set up axios interceptor\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      if (token && config.headers) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [token]);\n\n  // Sync user to localStorage\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n  }, [user]);\n\n  // Don't render anything until we've initialized\n  if (!isInitialized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  }\n  const login = async (username, password) => {\n    try {\n      const response = await api.login({\n        username,\n        password\n      });\n      console.log('Login response:', response);\n      if (!response.user || !response.token) {\n        throw new Error('Invalid response format');\n      }\n      setUser(response.user);\n      setToken(response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      localStorage.setItem('token', response.token);\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async (username, email, password, name) => {\n    try {\n      const userData = await api.register({\n        username,\n        email,\n        password,\n        name\n      });\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      console.error('Register error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      isInitialized,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"ov3qRn7W0Fs1rA432AFJ2hRBoHQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isInitialized","setIsInitialized","user","setUser","token","setToken","initializeAuth","storedToken","localStorage","getItem","storedUser","parsedUser","JSON","parse","error","console","removeItem","interceptor","interceptors","request","use","config","headers","Promise","reject","eject","setItem","stringify","fileName","_jsxFileName","lineNumber","columnNumber","login","username","password","response","log","Error","register","email","name","userData","logout","Provider","value","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User, LoginResponse } from '../types/Auth';\r\nimport { api } from '../services/api';\r\nimport axios from 'axios';\r\n\r\ninterface AuthContextType {\r\n    user: User | null;\r\n    token: string | null;\r\n    isInitialized: boolean;\r\n    login: (username: string, password: string) => Promise<void>;\r\n    logout: () => void;\r\n    register: (username: string, email: string, password: string, name?: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [isInitialized, setIsInitialized] = useState(false);\r\n    const [user, setUser] = useState<User | null>(null);\r\n    const [token, setToken] = useState<string | null>(null);\r\n\r\n    // Initialize auth state once on mount\r\n    useEffect(() => {\r\n        const initializeAuth = () => {\r\n            try {\r\n                const storedToken = localStorage.getItem('token');\r\n                const storedUser = localStorage.getItem('user');\r\n\r\n                if (storedToken && storedUser) {\r\n                    const parsedUser = JSON.parse(storedUser);\r\n                    setToken(storedToken);\r\n                    setUser(parsedUser);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error initializing auth state:', error);\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('user');\r\n            } finally {\r\n                setIsInitialized(true);\r\n            }\r\n        };\r\n\r\n        initializeAuth();\r\n    }, []);\r\n\r\n    // Set up axios interceptor\r\n    useEffect(() => {\r\n        const interceptor = axios.interceptors.request.use(\r\n            (config) => {\r\n                if (token && config.headers) {\r\n                    config.headers['Authorization'] = `Bearer ${token}`;\r\n                }\r\n                return config;\r\n            },\r\n            (error) => {\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            axios.interceptors.request.eject(interceptor);\r\n        };\r\n    }, [token]);\r\n\r\n    // Sync user to localStorage\r\n    useEffect(() => {\r\n        if (user) {\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n        }\r\n    }, [user]);\r\n\r\n    // Don't render anything until we've initialized\r\n    if (!isInitialized) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const login = async (username: string, password: string) => {\r\n        try {\r\n            const response = await api.login({ username, password });\r\n            console.log('Login response:', response);\r\n            \r\n            if (!response.user || !response.token) {\r\n                throw new Error('Invalid response format');\r\n            }\r\n\r\n            setUser(response.user);\r\n            setToken(response.token);\r\n            localStorage.setItem('user', JSON.stringify(response.user));\r\n            localStorage.setItem('token', response.token);\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (username: string, email: string, password: string, name?: string) => {\r\n        try {\r\n            const userData = await api.register({ username, email, password, name });\r\n            setUser(userData);\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n        } catch (error) {\r\n            console.error('Register error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        setToken(null);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, isInitialized, login, logout, register }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}