{"ast":null,"code":"import React,{useState,useEffect}from'react';import{api}from'../services/api';import'./ShareNoteDialog.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ShareNoteDialog=_ref=>{let{noteId,onClose,onShare}=_ref;const[searchTerm,setSearchTerm]=useState('');const[users,setUsers]=useState([]);const[selectedUserId,setSelectedUserId]=useState(null);const[error,setError]=useState(null);const[isSearching,setIsSearching]=useState(false);useEffect(()=>{const searchUsers=async()=>{if(searchTerm.length<2){setUsers([]);return;}try{setIsSearching(true);setError(null);console.log('Starting search for term:',searchTerm);const response=await api.searchUsers(searchTerm);console.log('Search completed, response:',response);if(Array.isArray(response)){setUsers(response);}else{console.error('Invalid response format:',response);setError('Invalid response from server');setUsers([]);}}catch(err){console.error('Search error:',err);setError(err instanceof Error?err.message:'Failed to search users');setUsers([]);}finally{setIsSearching(false);}};const timeoutId=setTimeout(searchUsers,300);return()=>clearTimeout(timeoutId);},[searchTerm]);const handleShare=async()=>{if(!selectedUserId){setError('Please select a user');return;}try{setError(null);await api.shareNote(noteId,selectedUserId);onShare();onClose();}catch(err){setError(err instanceof Error?err.message:'Failed to share note');}};return/*#__PURE__*/_jsx(\"div\",{className:\"share-dialog-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"share-dialog\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Share Note\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"search-section\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search users by username or email...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),autoFocus:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"users-list\",children:isSearching?/*#__PURE__*/_jsx(\"div\",{className:\"searching-message\",children:\"Searching...\"}):users.length>0?users.map(user=>/*#__PURE__*/_jsxs(\"div\",{className:\"user-item \".concat(selectedUserId===user.id?'selected':''),onClick:()=>setSelectedUserId(user.id),children:[/*#__PURE__*/_jsx(\"span\",{className:\"username\",children:user.username}),/*#__PURE__*/_jsx(\"span\",{className:\"user-email\",children:user.email})]},user.id)):searchTerm.length>=2?/*#__PURE__*/_jsx(\"div\",{className:\"no-results\",children:\"No users found\"}):/*#__PURE__*/_jsx(\"div\",{className:\"search-hint\",children:\"Type at least 2 characters to search\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dialog-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleShare,disabled:!selectedUserId||isSearching,children:\"Share\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,children:\"Cancel\"})]})]})});};","map":{"version":3,"names":["React","useState","useEffect","api","jsx","_jsx","jsxs","_jsxs","ShareNoteDialog","_ref","noteId","onClose","onShare","searchTerm","setSearchTerm","users","setUsers","selectedUserId","setSelectedUserId","error","setError","isSearching","setIsSearching","searchUsers","length","console","log","response","Array","isArray","err","Error","message","timeoutId","setTimeout","clearTimeout","handleShare","shareNote","className","children","type","placeholder","value","onChange","e","target","autoFocus","map","user","concat","id","onClick","username","email","disabled"],"sources":["D:/_master/v5/notepad-plus/src/components/ShareNoteDialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { api } from '../services/api';\r\nimport { User } from '../types/Note';\r\nimport './ShareNoteDialog.css';\r\n\r\ninterface ShareNoteDialogProps {\r\n    noteId: number;\r\n    onClose: () => void;\r\n    onShare: () => void;\r\n}\r\n\r\nexport const ShareNoteDialog: React.FC<ShareNoteDialogProps> = ({ noteId, onClose, onShare }) => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [users, setUsers] = useState<User[]>([]);\r\n    const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [isSearching, setIsSearching] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const searchUsers = async () => {\r\n            if (searchTerm.length < 2) {\r\n                setUsers([]);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                setIsSearching(true);\r\n                setError(null);\r\n                console.log('Starting search for term:', searchTerm);\r\n                \r\n                const response = await api.searchUsers(searchTerm);\r\n                console.log('Search completed, response:', response);\r\n                \r\n                if (Array.isArray(response)) {\r\n                    setUsers(response);\r\n                } else {\r\n                    console.error('Invalid response format:', response);\r\n                    setError('Invalid response from server');\r\n                    setUsers([]);\r\n                }\r\n            } catch (err) {\r\n                console.error('Search error:', err);\r\n                setError(err instanceof Error ? err.message : 'Failed to search users');\r\n                setUsers([]);\r\n            } finally {\r\n                setIsSearching(false);\r\n            }\r\n        };\r\n\r\n        const timeoutId = setTimeout(searchUsers, 300);\r\n        return () => clearTimeout(timeoutId);\r\n    }, [searchTerm]);\r\n\r\n    const handleShare = async () => {\r\n        if (!selectedUserId) {\r\n            setError('Please select a user');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setError(null);\r\n            await api.shareNote(noteId, selectedUserId);\r\n            onShare();\r\n            onClose();\r\n        } catch (err) {\r\n            setError(err instanceof Error ? err.message : 'Failed to share note');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"share-dialog-overlay\">\r\n            <div className=\"share-dialog\">\r\n                <h2>Share Note</h2>\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                \r\n                <div className=\"search-section\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search users by username or email...\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"users-list\">\r\n                    {isSearching ? (\r\n                        <div className=\"searching-message\">Searching...</div>\r\n                    ) : users.length > 0 ? (\r\n                        users.map(user => (\r\n                            <div\r\n                                key={user.id}\r\n                                className={`user-item ${selectedUserId === user.id ? 'selected' : ''}`}\r\n                                onClick={() => setSelectedUserId(user.id)}\r\n                            >\r\n                                <span className=\"username\">{user.username}</span>\r\n                                <span className=\"user-email\">{user.email}</span>\r\n                            </div>\r\n                        ))\r\n                    ) : searchTerm.length >= 2 ? (\r\n                        <div className=\"no-results\">No users found</div>\r\n                    ) : (\r\n                        <div className=\"search-hint\">Type at least 2 characters to search</div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"dialog-actions\">\r\n                    <button \r\n                        onClick={handleShare} \r\n                        disabled={!selectedUserId || isSearching}\r\n                    >\r\n                        Share\r\n                    </button>\r\n                    <button onClick={onClose}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}