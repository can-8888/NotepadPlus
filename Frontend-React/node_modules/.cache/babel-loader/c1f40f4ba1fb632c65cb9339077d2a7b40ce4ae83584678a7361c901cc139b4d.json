{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteEditor from './components/NoteEditor';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { useAuth } from './contexts/AuthContext';\nimport { api } from './services/api';\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\nimport { signalRService } from './services/signalR';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [showRegister, setShowRegister] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [sharedNotes, setSharedNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [shareDialogNoteId, setShareDialogNoteId] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  useEffect(() => {\n    if (user) {\n      console.log('User logged in, loading notes...'); // Debug log\n      loadAllNotes();\n    }\n  }, [user]); // Only depend on user\n\n  // Initialize SignalR connection\n  useEffect(() => {\n    if (user) {\n      signalRService.startConnection().catch(console.error);\n    }\n  }, [user]);\n  const loadAllNotes = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      console.log('Loading notes for user:', user);\n      const [myNotesResponse, shared] = await Promise.all([api.getNotes(), api.getSharedNotes()]);\n      console.log('API Response - myNotes:', myNotesResponse);\n      console.log('API Response - shared:', shared);\n\n      // Convert API response to Note format\n      const formattedMyNotes = myNotesResponse.map(note => {\n        var _ref, _note$id, _ref2, _note$title, _ref3, _note$content, _ref4, _note$category, _ref5, _note$createdAt, _ref6, _note$updatedAt, _ref7, _note$userId, _ref8, _note$isPublic, _note$user;\n        return {\n          id: (_ref = (_note$id = note.id) !== null && _note$id !== void 0 ? _note$id : note.Id) !== null && _ref !== void 0 ? _ref : 0,\n          title: (_ref2 = (_note$title = note.title) !== null && _note$title !== void 0 ? _note$title : note.Title) !== null && _ref2 !== void 0 ? _ref2 : '',\n          content: (_ref3 = (_note$content = note.content) !== null && _note$content !== void 0 ? _note$content : note.Content) !== null && _ref3 !== void 0 ? _ref3 : '',\n          category: (_ref4 = (_note$category = note.category) !== null && _note$category !== void 0 ? _note$category : note.Category) !== null && _ref4 !== void 0 ? _ref4 : '',\n          createdAt: new Date((_ref5 = (_note$createdAt = note.createdAt) !== null && _note$createdAt !== void 0 ? _note$createdAt : note.CreatedAt) !== null && _ref5 !== void 0 ? _ref5 : ''),\n          updatedAt: new Date((_ref6 = (_note$updatedAt = note.updatedAt) !== null && _note$updatedAt !== void 0 ? _note$updatedAt : note.UpdatedAt) !== null && _ref6 !== void 0 ? _ref6 : ''),\n          userId: (_ref7 = (_note$userId = note.userId) !== null && _note$userId !== void 0 ? _note$userId : note.UserId) !== null && _ref7 !== void 0 ? _ref7 : 0,\n          isPublic: (_ref8 = (_note$isPublic = note.isPublic) !== null && _note$isPublic !== void 0 ? _note$isPublic : note.IsPublic) !== null && _ref8 !== void 0 ? _ref8 : false,\n          user: (_note$user = note.user) !== null && _note$user !== void 0 ? _note$user : note.User\n        };\n      });\n      console.log('Setting notes state with:', formattedMyNotes);\n      setNotes(formattedMyNotes);\n      setSharedNotes(Array.isArray(shared) ? shared : []);\n    } catch (err) {\n      console.error('Error loading notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteNote = async noteId => {\n    try {\n      setError(null);\n      await api.deleteNote(noteId);\n      setNotes(notes.filter(note => note.id !== noteId));\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        setSelectedNote(undefined);\n      }\n    } catch (err) {\n      setError('Failed to delete note');\n      console.error(err);\n    }\n  };\n  const handleCreateNote = () => {\n    setSelectedNote(undefined);\n    setIsCreating(true);\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      if (noteData.id) {\n        // Updating existing note\n        await api.updateNote(noteData.id, noteData);\n      } else {\n        // Creating new note\n        await api.createNote(noteData);\n      }\n      await loadAllNotes();\n      setSelectedNote(undefined);\n      setIsCreating(false);\n    } catch (err) {\n      setError('Failed to save note');\n      console.error(err);\n    }\n  };\n  const handleMakePublic = async noteId => {\n    try {\n      setError(null);\n      await api.makeNotePublic(noteId);\n\n      // Reload both regular and shared notes\n      await loadAllNotes();\n\n      // Update the selected note if it was made public\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        const apiNote = await api.getNotes().then(notes => notes.find(n => n.id === noteId || n.Id === noteId));\n        if (apiNote) {\n          var _ref9, _apiNote$id, _ref10, _apiNote$title, _ref11, _apiNote$content, _ref12, _apiNote$category, _ref13, _apiNote$createdAt, _ref14, _apiNote$updatedAt, _ref15, _apiNote$userId, _ref16, _apiNote$isPublic, _apiNote$user;\n          // Convert API response to Note format\n          const updatedNote = {\n            id: (_ref9 = (_apiNote$id = apiNote.id) !== null && _apiNote$id !== void 0 ? _apiNote$id : apiNote.Id) !== null && _ref9 !== void 0 ? _ref9 : 0,\n            title: (_ref10 = (_apiNote$title = apiNote.title) !== null && _apiNote$title !== void 0 ? _apiNote$title : apiNote.Title) !== null && _ref10 !== void 0 ? _ref10 : '',\n            content: (_ref11 = (_apiNote$content = apiNote.content) !== null && _apiNote$content !== void 0 ? _apiNote$content : apiNote.Content) !== null && _ref11 !== void 0 ? _ref11 : '',\n            category: (_ref12 = (_apiNote$category = apiNote.category) !== null && _apiNote$category !== void 0 ? _apiNote$category : apiNote.Category) !== null && _ref12 !== void 0 ? _ref12 : '',\n            createdAt: new Date((_ref13 = (_apiNote$createdAt = apiNote.createdAt) !== null && _apiNote$createdAt !== void 0 ? _apiNote$createdAt : apiNote.CreatedAt) !== null && _ref13 !== void 0 ? _ref13 : ''),\n            updatedAt: new Date((_ref14 = (_apiNote$updatedAt = apiNote.updatedAt) !== null && _apiNote$updatedAt !== void 0 ? _apiNote$updatedAt : apiNote.UpdatedAt) !== null && _ref14 !== void 0 ? _ref14 : ''),\n            userId: (_ref15 = (_apiNote$userId = apiNote.userId) !== null && _apiNote$userId !== void 0 ? _apiNote$userId : apiNote.UserId) !== null && _ref15 !== void 0 ? _ref15 : 0,\n            isPublic: (_ref16 = (_apiNote$isPublic = apiNote.isPublic) !== null && _apiNote$isPublic !== void 0 ? _apiNote$isPublic : apiNote.IsPublic) !== null && _ref16 !== void 0 ? _ref16 : false,\n            user: (_apiNote$user = apiNote.user) !== null && _apiNote$user !== void 0 ? _apiNote$user : apiNote.User\n          };\n          setSelectedNote(updatedNote);\n        }\n      }\n    } catch (err) {\n      setError('Failed to make note public');\n      console.error(err);\n    }\n  };\n  const sortNotes = notesToSort => {\n    return [...notesToSort].sort((a, b) => {\n      switch (sortBy) {\n        case 'date-desc':\n          return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\n        case 'date-asc':\n          return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          return a.category.localeCompare(b.category);\n        default:\n          return 0;\n      }\n    });\n  };\n  const filteredAndSortedNotes = sortNotes(notes.filter(note => {\n    var _ref17, _user$id;\n    // First filter by user\n    if (!user) return false;\n    const userId = (_ref17 = (_user$id = user.id) !== null && _user$id !== void 0 ? _user$id : user.Id) !== null && _ref17 !== void 0 ? _ref17 : 0;\n    const noteUserId = note.userId;\n    if (userId !== noteUserId) return false;\n\n    // Then filter by search and category\n    if (!(note !== null && note !== void 0 && note.title)) return false;\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !selectedCategory || note.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  }));\n  const renderSortOptions = () => {\n    const options = [{\n      value: 'date-desc',\n      label: 'Newest First'\n    }, {\n      value: 'date-asc',\n      label: 'Oldest First'\n    }, {\n      value: 'title',\n      label: 'Title'\n    }, {\n      value: 'category',\n      label: 'Category'\n    }];\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this));\n  };\n  const renderCategoryOptions = () => {\n    const categories = Array.from(new Set(notes.map(note => note.category))).filter(category => category);\n    return [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All Categories\"\n    }, \"all\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), ...categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }, this))];\n  };\n\n  // Add debug logging for filtered notes\n  useEffect(() => {\n    console.log('Current notes:', notes);\n    console.log('Filtered notes:', filteredAndSortedNotes);\n  }, [notes, filteredAndSortedNotes]);\n  useEffect(() => {\n    console.log('Notes state updated:', notes);\n  }, [notes]);\n\n  // Add useEffect to monitor sharedNotes changes\n  useEffect(() => {\n    console.log('Shared notes updated:', sharedNotes);\n  }, [sharedNotes]);\n  const handleLogout = () => {\n    // Clear UI state\n    setSelectedNote(undefined);\n    setSearchTerm('');\n    setSelectedCategory('');\n    setSortBy('date-desc');\n    // Don't clear notes here, they'll be reloaded on next login\n    logout();\n  };\n  const handleShare = noteId => {\n    setShareDialogNoteId(noteId);\n  };\n  const handleShareComplete = async () => {\n    await loadAllNotes(); // Reload notes to update the UI\n    setShareDialogNoteId(null);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notepad+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"auth-container\",\n        children: showRegister ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRegister(false),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRegister(true),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notepad+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : user.Username), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search notes...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"category-filter\",\n        children: renderCategoryOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        className: \"sort-select\",\n        children: renderSortOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"left-panel\",\n          children: isCreating || selectedNote ? /*#__PURE__*/_jsxDEV(NoteEditor, {\n            note: selectedNote,\n            onSave: handleSaveNote,\n            onCancel: () => {\n              setSelectedNote(undefined);\n              setIsCreating(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-note-button\",\n            onClick: handleCreateNote,\n            children: \"Create New Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-panel\",\n          children: /*#__PURE__*/_jsxDEV(NoteList, {\n            notes: filteredAndSortedNotes,\n            sharedNotes: sharedNotes,\n            selectedNote: selectedNote,\n            onNoteSelect: setSelectedNote,\n            onDeleteNote: handleDeleteNote,\n            onMakePublic: handleMakePublic,\n            onShare: handleShare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this), shareDialogNoteId && /*#__PURE__*/_jsxDEV(ShareNoteDialog, {\n      noteId: shareDialogNoteId,\n      onClose: () => setShareDialogNoteId(null),\n      onShare: handleShareComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"sHUFdb1XYrn28ecMFZJGEUdvD+E=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NoteList","NoteEditor","Login","Register","useAuth","api","ShareNoteDialog","signalRService","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","logout","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","shareDialogNoteId","setShareDialogNoteId","isCreating","setIsCreating","console","log","loadAllNotes","startConnection","catch","myNotesResponse","shared","Promise","all","getNotes","getSharedNotes","formattedMyNotes","map","note","_ref","_note$id","_ref2","_note$title","_ref3","_note$content","_ref4","_note$category","_ref5","_note$createdAt","_ref6","_note$updatedAt","_ref7","_note$userId","_ref8","_note$isPublic","_note$user","id","Id","title","Title","content","Content","category","Category","createdAt","Date","CreatedAt","updatedAt","UpdatedAt","userId","UserId","isPublic","IsPublic","User","Array","isArray","err","Error","message","handleDeleteNote","noteId","deleteNote","filter","handleCreateNote","handleSaveNote","noteData","updateNote","createNote","handleMakePublic","makeNotePublic","apiNote","then","find","n","_ref9","_apiNote$id","_ref10","_apiNote$title","_ref11","_apiNote$content","_ref12","_apiNote$category","_ref13","_apiNote$createdAt","_ref14","_apiNote$updatedAt","_ref15","_apiNote$userId","_ref16","_apiNote$isPublic","_apiNote$user","updatedNote","sortNotes","notesToSort","sort","a","b","getTime","localeCompare","filteredAndSortedNotes","_ref17","_user$id","noteUserId","matchesSearch","toLowerCase","includes","matchesCategory","renderSortOptions","options","value","label","option","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCategoryOptions","categories","from","Set","handleLogout","handleShare","handleShareComplete","className","onClick","username","Username","type","placeholder","onChange","e","target","onSave","onCancel","onNoteSelect","onDeleteNote","onMakePublic","onShare","onClose","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note, NoteApiResponse } from './types/Note';\r\nimport { api } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\nimport { signalRService } from './services/signalR';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title' | 'category';\r\n\r\nfunction App() {\r\n    const { user, logout } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [shareDialogNoteId, setShareDialogNoteId] = useState<number | null>(null);\r\n    const [isCreating, setIsCreating] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    // Initialize SignalR connection\r\n    useEffect(() => {\r\n        if (user) {\r\n            signalRService.startConnection().catch(console.error);\r\n        }\r\n    }, [user]);\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            \r\n            console.log('Loading notes for user:', user);\r\n            \r\n            const [myNotesResponse, shared] = await Promise.all([\r\n                api.getNotes(),\r\n                api.getSharedNotes()\r\n            ]) as [NoteApiResponse[], Note[]];\r\n            \r\n            console.log('API Response - myNotes:', myNotesResponse);\r\n            console.log('API Response - shared:', shared);\r\n            \r\n            // Convert API response to Note format\r\n            const formattedMyNotes: Note[] = myNotesResponse.map(note => ({\r\n                id: note.id ?? note.Id ?? 0,\r\n                title: note.title ?? note.Title ?? '',\r\n                content: note.content ?? note.Content ?? '',\r\n                category: note.category ?? note.Category ?? '',\r\n                createdAt: new Date(note.createdAt ?? note.CreatedAt ?? ''),\r\n                updatedAt: new Date(note.updatedAt ?? note.UpdatedAt ?? ''),\r\n                userId: note.userId ?? note.UserId ?? 0,\r\n                isPublic: note.isPublic ?? note.IsPublic ?? false,\r\n                user: note.user ?? note.User\r\n            }));\r\n\r\n            console.log('Setting notes state with:', formattedMyNotes);\r\n            setNotes(formattedMyNotes);\r\n            setSharedNotes(Array.isArray(shared) ? shared : []);\r\n\r\n        } catch (err) {\r\n            console.error('Error loading notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCreateNote = () => {\r\n        setSelectedNote(undefined);\r\n        setIsCreating(true);\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            if (noteData.id) {\r\n                // Updating existing note\r\n                await api.updateNote(noteData.id, noteData);\r\n            } else {\r\n                // Creating new note\r\n                await api.createNote(noteData);\r\n            }\r\n            await loadAllNotes();\r\n            setSelectedNote(undefined);\r\n            setIsCreating(false);\r\n        } catch (err) {\r\n            setError('Failed to save note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.makeNotePublic(noteId);\r\n            \r\n            // Reload both regular and shared notes\r\n            await loadAllNotes();\r\n            \r\n            // Update the selected note if it was made public\r\n            if (selectedNote?.id === noteId) {\r\n                const apiNote = await api.getNotes().then(notes => \r\n                    notes.find(n => n.id === noteId || n.Id === noteId)\r\n                );\r\n\r\n                if (apiNote) {\r\n                    // Convert API response to Note format\r\n                    const updatedNote: Note = {\r\n                        id: apiNote.id ?? apiNote.Id ?? 0,\r\n                        title: apiNote.title ?? apiNote.Title ?? '',\r\n                        content: apiNote.content ?? apiNote.Content ?? '',\r\n                        category: apiNote.category ?? apiNote.Category ?? '',\r\n                        createdAt: new Date(apiNote.createdAt ?? apiNote.CreatedAt ?? ''),\r\n                        updatedAt: new Date(apiNote.updatedAt ?? apiNote.UpdatedAt ?? ''),\r\n                        userId: apiNote.userId ?? apiNote.UserId ?? 0,\r\n                        isPublic: apiNote.isPublic ?? apiNote.IsPublic ?? false,\r\n                        user: apiNote.user ?? apiNote.User\r\n                    };\r\n                    setSelectedNote(updatedNote);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to make note public');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notesToSort: Note[]): Note[] => {\r\n        return [...notesToSort].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    return a.category.localeCompare(b.category);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filteredAndSortedNotes = sortNotes(\r\n        notes.filter(note => {\r\n            // First filter by user\r\n            if (!user) return false;\r\n            const userId = user.id ?? user.Id ?? 0;\r\n            const noteUserId = note.userId;\r\n            if (userId !== noteUserId) return false;\r\n            \r\n            // Then filter by search and category\r\n            if (!note?.title) return false;\r\n            \r\n            const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n            const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n            return matchesSearch && matchesCategory;\r\n        })\r\n    );\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredAndSortedNotes);\r\n    }, [notes, filteredAndSortedNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    // Add useEffect to monitor sharedNotes changes\r\n    useEffect(() => {\r\n        console.log('Shared notes updated:', sharedNotes);\r\n    }, [sharedNotes]);\r\n\r\n    const handleLogout = () => {\r\n        // Clear UI state\r\n        setSelectedNote(undefined);\r\n        setSearchTerm('');\r\n        setSelectedCategory('');\r\n        setSortBy('date-desc');\r\n        // Don't clear notes here, they'll be reloaded on next login\r\n        logout();\r\n    };\r\n\r\n    const handleShare = (noteId: number) => {\r\n        setShareDialogNoteId(noteId);\r\n    };\r\n\r\n    const handleShareComplete = async () => {\r\n        await loadAllNotes(); // Reload notes to update the UI\r\n        setShareDialogNoteId(null);\r\n    };\r\n\r\n    if (!user) {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1>Notepad+</h1>\r\n                </header>\r\n                <main className=\"auth-container\">\r\n                    {showRegister ? (\r\n                        <>\r\n                            <Register />\r\n                            <p>\r\n                                Already have an account?{' '}\r\n                                <button onClick={() => setShowRegister(false)}>\r\n                                    Login\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Login />\r\n                            <p>\r\n                                Don't have an account?{' '}\r\n                                <button onClick={() => setShowRegister(true)}>\r\n                                    Register\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Notepad+</h1>\r\n                <div className=\"user-info\">\r\n                    <span>Welcome, {user?.username || user?.Username}!</span>\r\n                    <button className=\"logout-button\" onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            \r\n            <div className=\"search-filters\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search notes...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-input\"\r\n                />\r\n                <select\r\n                    value={selectedCategory}\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                    className=\"category-filter\"\r\n                >\r\n                    {renderCategoryOptions()}\r\n                </select>\r\n                <select\r\n                    value={sortBy}\r\n                    onChange={(e) => setSortBy(e.target.value as SortOption)}\r\n                    className=\"sort-select\"\r\n                >\r\n                    {renderSortOptions()}\r\n                </select>\r\n            </div>\r\n\r\n            <main className=\"App-main\">\r\n                {isLoading ? (\r\n                    <div className=\"loading\">Loading...</div>\r\n                ) : (\r\n                    <>\r\n                        <aside className=\"left-panel\">\r\n                            {isCreating || selectedNote ? (\r\n                                <NoteEditor \r\n                                    note={selectedNote}\r\n                                    onSave={handleSaveNote}\r\n                                    onCancel={() => {\r\n                                        setSelectedNote(undefined);\r\n                                        setIsCreating(false);\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n                                <button \r\n                                    className=\"create-note-button\"\r\n                                    onClick={handleCreateNote}\r\n                                >\r\n                                    Create New Note\r\n                                </button>\r\n                            )}\r\n                        </aside>\r\n                        <div className=\"right-panel\">\r\n                            <NoteList \r\n                                notes={filteredAndSortedNotes}\r\n                                sharedNotes={sharedNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={setSelectedNote}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </main>\r\n\r\n            {shareDialogNoteId && (\r\n                <ShareNoteDialog\r\n                    noteId={shareDialogNoteId}\r\n                    onClose={() => setShareDialogNoteId(null)}\r\n                    onShare={handleShareComplete}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}