{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\components\\\\NotificationBell.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { notificationService } from '../services/notificationService';\nimport { signalRService } from '../services/signalRService';\nimport './NotificationBell.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationBell = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const navigate = useNavigate();\n  const loadNotifications = useCallback(async () => {\n    try {\n      console.log('Loading notifications...');\n      const data = await notificationService.getNotifications();\n      console.log('Loaded notifications:', data);\n      setNotifications(data);\n    } catch (error) {\n      console.error('Failed to load notifications:', error);\n    }\n  }, []);\n  useEffect(() => {\n    console.log('Setting up notification listeners');\n    loadNotifications();\n\n    // Set up real-time notification handling\n    signalRService.onNotification(notification => {\n      console.log('NotificationBell received notification:', notification);\n      setNotifications(prev => {\n        console.log('Current notifications:', prev);\n        return [notification, ...prev];\n      });\n    });\n\n    // Poll for new notifications every minute as backup\n    const interval = setInterval(loadNotifications, 60000);\n    return () => {\n      console.log('Cleaning up notification listeners');\n      clearInterval(interval);\n      signalRService.offNotification();\n    };\n  }, [loadNotifications]);\n  const handleNotificationClick = async notification => {\n    await notificationService.markAsRead(notification.id);\n    if (notification.noteId) {\n      navigate(`/notes/${notification.noteId}`);\n    }\n    setShowDropdown(false);\n    loadNotifications();\n  };\n  const handleMarkAllAsRead = async () => {\n    await notificationService.markAllAsRead();\n    loadNotifications();\n  };\n  const unreadCount = notifications.filter(n => !n.isRead).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-bell\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bell-button\",\n      onClick: () => setShowDropdown(!showDropdown),\n      children: [\"\\uD83D\\uDD14\", unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-read\",\n          onClick: handleMarkAllAsRead,\n          children: \"Mark all as read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-notifications\",\n          children: \"No notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.isRead ? 'unread' : ''}`,\n          onClick: () => handleNotificationClick(notification),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-time\",\n              children: new Date(notification.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 37\n          }, this)\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(NotificationBell, \"VNa0a4f7CdFoZKud/ikOjRQmkiM=\", false, function () {\n  return [useNavigate];\n});\n_c = NotificationBell;\nexport default NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","notificationService","signalRService","jsxDEV","_jsxDEV","NotificationBell","_s","notifications","setNotifications","showDropdown","setShowDropdown","navigate","loadNotifications","console","log","data","getNotifications","error","onNotification","notification","prev","interval","setInterval","clearInterval","offNotification","handleNotificationClick","markAsRead","id","noteId","handleMarkAllAsRead","markAllAsRead","unreadCount","filter","n","isRead","length","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","message","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/components/NotificationBell.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Notification } from '../services/notificationService';\r\nimport { notificationService } from '../services/notificationService';\r\nimport { signalRService } from '../services/signalRService';\r\nimport './NotificationBell.css';\r\n\r\nconst NotificationBell: React.FC = () => {\r\n    const [notifications, setNotifications] = useState<Notification[]>([]);\r\n    const [showDropdown, setShowDropdown] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const loadNotifications = useCallback(async () => {\r\n        try {\r\n            console.log('Loading notifications...');\r\n            const data = await notificationService.getNotifications();\r\n            console.log('Loaded notifications:', data);\r\n            setNotifications(data);\r\n        } catch (error) {\r\n            console.error('Failed to load notifications:', error);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('Setting up notification listeners');\r\n        loadNotifications();\r\n        \r\n        // Set up real-time notification handling\r\n        signalRService.onNotification((notification: Notification) => {\r\n            console.log('NotificationBell received notification:', notification);\r\n            setNotifications(prev => {\r\n                console.log('Current notifications:', prev);\r\n                return [notification, ...prev];\r\n            });\r\n        });\r\n\r\n        // Poll for new notifications every minute as backup\r\n        const interval = setInterval(loadNotifications, 60000);\r\n        \r\n        return () => {\r\n            console.log('Cleaning up notification listeners');\r\n            clearInterval(interval);\r\n            signalRService.offNotification();\r\n        };\r\n    }, [loadNotifications]);\r\n\r\n    const handleNotificationClick = async (notification: Notification) => {\r\n        await notificationService.markAsRead(notification.id);\r\n        if (notification.noteId) {\r\n            navigate(`/notes/${notification.noteId}`);\r\n        }\r\n        setShowDropdown(false);\r\n        loadNotifications();\r\n    };\r\n\r\n    const handleMarkAllAsRead = async () => {\r\n        await notificationService.markAllAsRead();\r\n        loadNotifications();\r\n    };\r\n\r\n    const unreadCount = notifications.filter(n => !n.isRead).length;\r\n\r\n    return (\r\n        <div className=\"notification-bell\">\r\n            <button \r\n                className=\"bell-button\" \r\n                onClick={() => setShowDropdown(!showDropdown)}\r\n            >\r\n                ðŸ””\r\n                {unreadCount > 0 && (\r\n                    <span className=\"notification-badge\">{unreadCount}</span>\r\n                )}\r\n            </button>\r\n\r\n            {showDropdown && (\r\n                <div className=\"notification-dropdown\">\r\n                    <div className=\"notification-header\">\r\n                        <h3>Notifications</h3>\r\n                        {unreadCount > 0 && (\r\n                            <button \r\n                                className=\"mark-all-read\"\r\n                                onClick={handleMarkAllAsRead}\r\n                            >\r\n                                Mark all as read\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"notification-list\">\r\n                        {notifications.length === 0 ? (\r\n                            <div className=\"no-notifications\">\r\n                                No notifications\r\n                            </div>\r\n                        ) : (\r\n                            notifications.map(notification => (\r\n                                <div\r\n                                    key={notification.id}\r\n                                    className={`notification-item ${!notification.isRead ? 'unread' : ''}`}\r\n                                    onClick={() => handleNotificationClick(notification)}\r\n                                >\r\n                                    <div className=\"notification-content\">\r\n                                        <p>{notification.message}</p>\r\n                                        <span className=\"notification-time\">\r\n                                            {new Date(notification.createdAt).toLocaleString()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotificationBell; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}