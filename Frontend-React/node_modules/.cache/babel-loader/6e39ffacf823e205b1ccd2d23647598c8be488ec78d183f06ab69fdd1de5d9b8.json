{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { useAuth } from './contexts/AuthContext';\nimport { api } from './services/api';\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport NotesPage from './pages/NotesPage';\nimport Sidebar from './components/Sidebar';\nimport DrivePage from './pages/DrivePage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Add this new Layout component\nconst Layout = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notepad+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"welcome-text\",\n          children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-layout\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Layout, \"owExUWFylk0vVlQUKU4QcBpCg7Y=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Layout;\nfunction App() {\n  _s4();\n  var _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [showRegister, setShowRegister] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [sharedNotes, setSharedNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [shareDialogNoteId, setShareDialogNoteId] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\n  const [currentView, setCurrentView] = useState('my-notes');\n  const [publicNotes, setPublicNotes] = useState([]);\n  const [sharedWithMeNotes, setSharedWithMeNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (user) {\n      console.log('User logged in, loading notes...'); // Debug log\n      loadAllNotes();\n    }\n  }, [user]); // Only depend on user\n\n  const loadAllNotes = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const notesData = await api.getNotes();\n      setNotes(notesData || []);\n    } catch (err) {\n      var _err$response;\n      // Type as any for now\n      if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        // Handle unauthorized error\n        navigate('/login');\n      } else {\n        setError(err instanceof Error ? err.message : 'Failed to load notes');\n        console.error('Error loading notes:', err);\n      }\n      setNotes([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteNote = async noteId => {\n    try {\n      setError(null);\n      await api.deleteNote(noteId);\n      setNotes(notes.filter(note => note.id !== noteId));\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        setSelectedNote(undefined);\n      }\n    } catch (err) {\n      setError('Failed to delete note');\n      console.error(err);\n    }\n  };\n  const handleCreateNote = () => {\n    setSelectedNote(undefined);\n    setIsCreating(true);\n    setIsNoteModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    console.log('Modal close triggered');\n    setIsNoteModalOpen(false);\n    setIsCreating(false);\n    setSelectedNote(undefined);\n  };\n  const handleNoteSelect = note => {\n    console.log('Note selected:', note);\n    setSelectedNote(note);\n    setIsNoteModalOpen(true);\n    console.log('Modal opened');\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      console.log('Saving note:', noteData);\n      if (noteData.id) {\n        // Updating existing note\n        await api.updateNote(noteData.id, noteData);\n      } else {\n        // Creating new note\n        await api.createNote(noteData);\n      }\n      await loadAllNotes();\n      setSelectedNote(undefined);\n      setIsCreating(false);\n      console.log('Note saved successfully');\n      setIsNoteModalOpen(false);\n    } catch (err) {\n      console.error('Failed to save note:', err);\n      setError('Failed to save note');\n    }\n  };\n  const handleMakePublic = async noteId => {\n    try {\n      console.log('handleMakePublic called with noteId:', noteId);\n      if (!noteId) {\n        console.error('Invalid note ID:', noteId);\n        return;\n      }\n      const updatedNote = await api.makeNotePublic(noteId);\n      console.log('Note successfully made public:', updatedNote);\n\n      // Update both notes lists\n      setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n      setPublicNotes(prevPublicNotes => [...prevPublicNotes, updatedNote]);\n\n      // Show success message\n      setMessage({\n        type: 'success',\n        text: 'Note is now public'\n      });\n\n      // Refresh lists\n      await loadAllNotes();\n      await loadPublicNotes();\n    } catch (error) {\n      console.error('Error making note public:', error);\n      setError(error instanceof Error ? error.message : 'Failed to make note public');\n    }\n  };\n  const sortNotes = notes => {\n    return [...notes].sort((a, b) => {\n      switch (sortBy) {\n        case 'date-desc':\n          return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n        case 'date-asc':\n          return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          // Handle undefined categories\n          const categoryA = a.category || '';\n          const categoryB = b.category || '';\n          return categoryA.localeCompare(categoryB);\n        default:\n          return 0;\n      }\n    });\n  };\n  const filterNotes = useCallback(notesToFilter => {\n    if (!notesToFilter) return [];\n    let filtered = [...notesToFilter];\n\n    // Apply search filter\n    if (searchTerm) {\n      filtered = filtered.filter(note => note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // Apply category filter\n    if (selectedCategory) {\n      filtered = filtered.filter(note => note.category === selectedCategory);\n    }\n\n    // Apply sorting\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'date-asc':\n          return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n        case 'date-desc':\n          return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n        case 'title-asc':\n          return a.title.localeCompare(b.title);\n        case 'title-desc':\n          return b.title.localeCompare(a.title);\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          return (a.category || '').localeCompare(b.category || '');\n        default:\n          return 0;\n      }\n    });\n    return filtered;\n  }, [searchTerm, selectedCategory, sortBy]);\n  const filteredNotes = filterNotes(notes);\n  const renderSortOptions = () => {\n    const options = [{\n      value: 'date-desc',\n      label: 'Newest First'\n    }, {\n      value: 'date-asc',\n      label: 'Oldest First'\n    }, {\n      value: 'title',\n      label: 'Title'\n    }, {\n      value: 'category',\n      label: 'Category'\n    }];\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this));\n  };\n  const renderCategoryOptions = () => {\n    const categories = Array.from(new Set(notes.map(note => note.category))).filter(category => category);\n    return [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All Categories\"\n    }, \"all\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), ...categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }, this))];\n  };\n\n  // Add debug logging for filtered notes\n  useEffect(() => {\n    console.log('Current notes:', notes);\n    console.log('Filtered notes:', filteredNotes);\n  }, [notes, filteredNotes]);\n  useEffect(() => {\n    console.log('Notes state updated:', notes);\n  }, [notes]);\n\n  // Add useEffect to monitor sharedNotes changes\n  useEffect(() => {\n    console.log('Shared notes updated:', sharedNotes);\n  }, [sharedNotes]);\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  const handleShare = noteId => {\n    setShareDialogNoteId(noteId);\n  };\n  const handleShareComplete = async () => {\n    await loadAllNotes(); // Reload notes to update the UI\n    setShareDialogNoteId(null);\n  };\n  const loadPublicNotes = async () => {\n    try {\n      console.log('Loading public notes...');\n      const publicNotes = await api.getPublicNotes();\n      console.log('Public notes received:', publicNotes);\n      setPublicNotes(publicNotes);\n    } catch (err) {\n      console.error('Error loading public notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load public notes');\n    }\n  };\n  const loadSharedNotes = async () => {\n    try {\n      console.log('Loading shared notes...');\n      setIsLoading(true);\n      const shared = await api.getSharedNotes();\n      console.log('Shared notes received:', shared);\n      if (Array.isArray(shared)) {\n        setSharedWithMeNotes(shared);\n      }\n    } catch (err) {\n      console.error('Error loading shared notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load shared notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      console.log('Current view:', currentView);\n      switch (currentView) {\n        case 'my-notes':\n          loadAllNotes();\n          break;\n        case 'shared-notes':\n          loadSharedNotes();\n          break;\n        case 'public-notes':\n          loadPublicNotes();\n          break;\n      }\n    }\n  }, [currentView, user]);\n\n  // Update setCurrentView to also update the URL\n  const handleViewChange = view => {\n    setCurrentView(view);\n    switch (view) {\n      case 'my-notes':\n        navigate('/notes');\n        break;\n      case 'shared-notes':\n        navigate('/shared-notes');\n        break;\n      case 'public-notes':\n        navigate('/public-notes');\n        break;\n    }\n  };\n\n  // Add effect to sync URL with current view\n  useEffect(() => {\n    const path = location.pathname;\n    if (path === '/public-notes' && currentView !== 'public-notes') {\n      setCurrentView('public-notes');\n    } else if (path === '/shared-notes' && currentView !== 'shared-notes') {\n      setCurrentView('shared-notes');\n    } else if (path === '/notes' && currentView !== 'my-notes') {\n      setCurrentView('my-notes');\n    }\n  }, [location.pathname]);\n  const handleShareNote = async (noteId, collaboratorId) => {\n    try {\n      const updatedNote = await api.shareNote(noteId, collaboratorId);\n\n      // Update the notes list with the updated note\n      setNotes(notes.map(note => note.id === noteId ? updatedNote : note));\n\n      // Show success message\n      setMessage({\n        type: 'success',\n        text: 'Note shared successfully'\n      });\n    } catch (error) {\n      console.error('Error sharing note:', error);\n      setMessage({\n        type: 'error',\n        text: error instanceof Error ? error.message : 'Failed to share note'\n      });\n    }\n  };\n  const loadPersonalNotes = async () => {\n    try {\n      setIsLoading(true);\n      const fetchedNotes = await api.getNotes();\n      setNotes(fetchedNotes);\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Failed to load notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadPersonalNotes();\n  }, []);\n\n  // Add a protected route wrapper component\n  const ProtectedRoute = ({\n    children\n  }) => {\n    _s2();\n    const {\n      user,\n      isInitialized\n    } = useAuth();\n    const location = useLocation();\n\n    // Don't render anything while we're checking auth state\n    if (!isInitialized) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 20\n      }, this);\n    }\n\n    // If user is not authenticated, redirect to login\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        state: {\n          from: location\n        },\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 20\n      }, this);\n    }\n\n    // Otherwise, render the protected content\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  };\n\n  // Add an auth route wrapper component\n  _s2(ProtectedRoute, \"KZAdwn+/6168MBajjjCR0+LEm3c=\", false, function () {\n    return [useAuth, useLocation];\n  });\n  const AuthRoute = ({\n    children\n  }) => {\n    _s3();\n    const {\n      user,\n      isInitialized\n    } = useAuth();\n    const location = useLocation();\n    if (!isInitialized) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 20\n      }, this);\n    }\n    if (user) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/notes\",\n        state: {\n          from: location\n        },\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  };\n  _s3(AuthRoute, \"KZAdwn+/6168MBajjjCR0+LEm3c=\", false, function () {\n    return [useAuth, useLocation];\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(AuthRoute, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-container\",\n            children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(AuthRoute, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-container\",\n            children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Layout, {\n            children: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/notes\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notes\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Layout, {\n            children: /*#__PURE__*/_jsxDEV(NotesPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/shared-notes\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Layout, {\n            children: /*#__PURE__*/_jsxDEV(NotesPage, {\n              type: \"shared\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/public-notes\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Layout, {\n            children: /*#__PURE__*/_jsxDEV(NotesPage, {\n              type: \"public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/drive\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Layout, {\n            children: /*#__PURE__*/_jsxDEV(DrivePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n      notes: filteredNotes,\n      onNoteSelect: handleNoteSelect,\n      onDeleteNote: handleDeleteNote,\n      onMakePublic: async noteId => {\n        try {\n          await api.makeNotePublic(noteId);\n          await loadAllNotes(); // Refresh notes after making public\n        } catch (error) {\n          console.error('Error making note public:', error);\n          setError('Failed to make note public');\n        }\n      },\n      onShare: handleShare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 454,\n    columnNumber: 9\n  }, this);\n}\n_s4(App, \"kEWkUcSgnAZbBP67mwmfzJ+b9mY=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Layout\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","NoteList","Login","Register","useAuth","api","Routes","Route","Navigate","useNavigate","useLocation","NotesPage","Sidebar","DrivePage","jsxDEV","_jsxDEV","Fragment","_Fragment","Layout","children","_s","user","logout","navigate","handleLogout","className","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","_c","App","_s4","_s2","$RefreshSig$","_s3","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","shareDialogNoteId","setShareDialogNoteId","isCreating","setIsCreating","isNoteModalOpen","setIsNoteModalOpen","currentView","setCurrentView","publicNotes","setPublicNotes","sharedWithMeNotes","setSharedWithMeNotes","message","setMessage","location","console","log","loadAllNotes","notesData","getNotes","err","_err$response","response","status","Error","handleDeleteNote","noteId","deleteNote","filter","note","id","handleCreateNote","handleCloseModal","handleNoteSelect","handleSaveNote","noteData","updateNote","createNote","handleMakePublic","updatedNote","makeNotePublic","prevNotes","prevPublicNotes","type","text","loadPublicNotes","sortNotes","sort","a","b","Date","createdAt","getTime","title","localeCompare","categoryA","category","categoryB","filterNotes","notesToFilter","filtered","toLowerCase","includes","content","filteredNotes","renderSortOptions","options","value","label","map","option","renderCategoryOptions","categories","Array","from","Set","handleShare","handleShareComplete","getPublicNotes","loadSharedNotes","shared","getSharedNotes","isArray","handleViewChange","view","path","pathname","handleShareNote","collaboratorId","shareNote","loadPersonalNotes","fetchedNotes","ProtectedRoute","isInitialized","to","state","replace","AuthRoute","element","onNoteSelect","onDeleteNote","onMakePublic","onShare","_c2","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note, NoteApiResponse, NoteStatus } from './types/Note';\r\nimport { api, getCurrentUser } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\nimport Modal from './components/Modal';\r\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom';\r\nimport NotesPage from './pages/NotesPage';\r\nimport Sidebar from './components/Sidebar';\r\nimport DrivePage from './pages/DrivePage';\r\nimport axios from 'axios';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title-asc' | 'title-desc' | 'title' | 'category';\r\ntype ViewType = 'my-notes' | 'shared-notes' | 'public-notes';\r\n\r\n// Add this new Layout component\r\nconst Layout = ({ children }: { children: React.ReactNode }) => {\r\n    const { user, logout } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        navigate('/login');\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <header className=\"app-header\">\r\n                <h1>Notepad+</h1>\r\n                <div className=\"user-info\">\r\n                    <span className=\"welcome-text\">Welcome, {user?.username}!</span>\r\n                    <button className=\"logout-button\" onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </header>\r\n            <div className=\"app-layout\">\r\n                <Sidebar />\r\n                <main className=\"main-content\">\r\n                    {children}\r\n                </main>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction App() {\r\n    const { user, logout } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [shareDialogNoteId, setShareDialogNoteId] = useState<number | null>(null);\r\n    const [isCreating, setIsCreating] = useState(false);\r\n    const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\r\n    const [currentView, setCurrentView] = useState<ViewType>('my-notes');\r\n    const [publicNotes, setPublicNotes] = useState<Note[]>([]);\r\n    const [sharedWithMeNotes, setSharedWithMeNotes] = useState<Note[]>([]);\r\n    const [message, setMessage] = useState<{ type: string; text: string } | null>(null);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            const notesData = await api.getNotes();\r\n            setNotes(notesData || []);\r\n        } catch (err: any) { // Type as any for now\r\n            if (err?.response?.status === 401) {\r\n                // Handle unauthorized error\r\n                navigate('/login');\r\n            } else {\r\n                setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n                console.error('Error loading notes:', err);\r\n            }\r\n            setNotes([]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCreateNote = () => {\r\n        setSelectedNote(undefined);\r\n        setIsCreating(true);\r\n        setIsNoteModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        console.log('Modal close triggered');\r\n        setIsNoteModalOpen(false);\r\n        setIsCreating(false);\r\n        setSelectedNote(undefined);\r\n    };\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        console.log('Note selected:', note);\r\n        setSelectedNote(note);\r\n        setIsNoteModalOpen(true);\r\n        console.log('Modal opened');\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            console.log('Saving note:', noteData);\r\n            if (noteData.id) {\r\n                // Updating existing note\r\n                await api.updateNote(noteData.id, noteData);\r\n            } else {\r\n                // Creating new note\r\n                await api.createNote(noteData);\r\n            }\r\n            await loadAllNotes();\r\n            setSelectedNote(undefined);\r\n            setIsCreating(false);\r\n            console.log('Note saved successfully');\r\n            setIsNoteModalOpen(false);\r\n        } catch (err) {\r\n            console.error('Failed to save note:', err);\r\n            setError('Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            console.log('handleMakePublic called with noteId:', noteId);\r\n            if (!noteId) {\r\n                console.error('Invalid note ID:', noteId);\r\n                return;\r\n            }\r\n\r\n            const updatedNote: Note = await api.makeNotePublic(noteId);\r\n            console.log('Note successfully made public:', updatedNote);\r\n\r\n            // Update both notes lists\r\n            setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\r\n            setPublicNotes(prevPublicNotes => [...prevPublicNotes, updatedNote]);\r\n\r\n            // Show success message\r\n            setMessage({ type: 'success', text: 'Note is now public' });\r\n\r\n            // Refresh lists\r\n            await loadAllNotes();\r\n            await loadPublicNotes();\r\n        } catch (error) {\r\n            console.error('Error making note public:', error);\r\n            setError(error instanceof Error ? error.message : 'Failed to make note public');\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notes: Note[]): Note[] => {\r\n        return [...notes].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    // Handle undefined categories\r\n                    const categoryA = a.category || '';\r\n                    const categoryB = b.category || '';\r\n                    return categoryA.localeCompare(categoryB);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filterNotes = useCallback((notesToFilter: Note[]) => {\r\n        if (!notesToFilter) return [];\r\n        \r\n        let filtered = [...notesToFilter];\r\n\r\n        // Apply search filter\r\n        if (searchTerm) {\r\n            filtered = filtered.filter(note =>\r\n                note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                note.content.toLowerCase().includes(searchTerm.toLowerCase())\r\n            );\r\n        }\r\n\r\n        // Apply category filter\r\n        if (selectedCategory) {\r\n            filtered = filtered.filter(note => note.category === selectedCategory);\r\n        }\r\n\r\n        // Apply sorting\r\n        filtered.sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-asc':\r\n                    return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\r\n                case 'date-desc':\r\n                    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n                case 'title-asc':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'title-desc':\r\n                    return b.title.localeCompare(a.title);\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    return (a.category || '').localeCompare(b.category || '');\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n\r\n        return filtered;\r\n    }, [searchTerm, selectedCategory, sortBy]);\r\n\r\n    const filteredNotes = filterNotes(notes);\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredNotes);\r\n    }, [notes, filteredNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    // Add useEffect to monitor sharedNotes changes\r\n    useEffect(() => {\r\n        console.log('Shared notes updated:', sharedNotes);\r\n    }, [sharedNotes]);\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        navigate('/login');\r\n    };\r\n\r\n    const handleShare = (noteId: number) => {\r\n        setShareDialogNoteId(noteId);\r\n    };\r\n\r\n    const handleShareComplete = async () => {\r\n        await loadAllNotes(); // Reload notes to update the UI\r\n        setShareDialogNoteId(null);\r\n    };\r\n\r\n    const loadPublicNotes = async () => {\r\n        try {\r\n            console.log('Loading public notes...');\r\n            const publicNotes = await api.getPublicNotes();\r\n            console.log('Public notes received:', publicNotes);\r\n            setPublicNotes(publicNotes);\r\n        } catch (err) {\r\n            console.error('Error loading public notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load public notes');\r\n        }\r\n    };\r\n\r\n    const loadSharedNotes = async () => {\r\n        try {\r\n            console.log('Loading shared notes...');\r\n            setIsLoading(true);\r\n            const shared = await api.getSharedNotes();\r\n            console.log('Shared notes received:', shared);\r\n            if (Array.isArray(shared)) {\r\n                setSharedWithMeNotes(shared);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error loading shared notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load shared notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('Current view:', currentView);\r\n            switch (currentView) {\r\n                case 'my-notes':\r\n                    loadAllNotes();\r\n                    break;\r\n                case 'shared-notes':\r\n                    loadSharedNotes();\r\n                    break;\r\n                case 'public-notes':\r\n                    loadPublicNotes();\r\n                    break;\r\n            }\r\n        }\r\n    }, [currentView, user]);\r\n\r\n    // Update setCurrentView to also update the URL\r\n    const handleViewChange = (view: ViewType) => {\r\n        setCurrentView(view);\r\n        switch (view) {\r\n            case 'my-notes':\r\n                navigate('/notes');\r\n                break;\r\n            case 'shared-notes':\r\n                navigate('/shared-notes');\r\n                break;\r\n            case 'public-notes':\r\n                navigate('/public-notes');\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Add effect to sync URL with current view\r\n    useEffect(() => {\r\n        const path = location.pathname;\r\n        if (path === '/public-notes' && currentView !== 'public-notes') {\r\n            setCurrentView('public-notes');\r\n        } else if (path === '/shared-notes' && currentView !== 'shared-notes') {\r\n            setCurrentView('shared-notes');\r\n        } else if (path === '/notes' && currentView !== 'my-notes') {\r\n            setCurrentView('my-notes');\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    const handleShareNote = async (noteId: number, collaboratorId: number) => {\r\n        try {\r\n            const updatedNote = await api.shareNote(noteId, collaboratorId);\r\n            \r\n            // Update the notes list with the updated note\r\n            setNotes(notes.map(note => \r\n                note.id === noteId ? updatedNote : note\r\n            ));\r\n            \r\n            // Show success message\r\n            setMessage({ type: 'success', text: 'Note shared successfully' });\r\n        } catch (error) {\r\n            console.error('Error sharing note:', error);\r\n            setMessage({ type: 'error', text: error instanceof Error ? error.message : 'Failed to share note' });\r\n        }\r\n    };\r\n\r\n    const loadPersonalNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const fetchedNotes = await api.getNotes();\r\n            setNotes(fetchedNotes);\r\n        } catch (error) {\r\n            setError(error instanceof Error ? error.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadPersonalNotes();\r\n    }, []);\r\n\r\n    // Add a protected route wrapper component\r\n    const ProtectedRoute = ({ children }: { children: React.ReactNode }) => {\r\n        const { user, isInitialized } = useAuth();\r\n        const location = useLocation();\r\n\r\n        // Don't render anything while we're checking auth state\r\n        if (!isInitialized) {\r\n            return <div>Loading...</div>;\r\n        }\r\n\r\n        // If user is not authenticated, redirect to login\r\n        if (!user) {\r\n            return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n        }\r\n\r\n        // Otherwise, render the protected content\r\n        return <>{children}</>;\r\n    };\r\n\r\n    // Add an auth route wrapper component\r\n    const AuthRoute = ({ children }: { children: React.ReactNode }) => {\r\n        const { user, isInitialized } = useAuth();\r\n        const location = useLocation();\r\n\r\n        if (!isInitialized) {\r\n            return <div>Loading...</div>;\r\n        }\r\n\r\n        if (user) {\r\n            return <Navigate to=\"/notes\" state={{ from: location }} replace />;\r\n        }\r\n\r\n        return <>{children}</>;\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Routes>\r\n                {/* Auth routes */}\r\n                <Route path=\"/login\" element={\r\n                    <AuthRoute>\r\n                        <div className=\"auth-container\">\r\n                            <Login />\r\n                        </div>\r\n                    </AuthRoute>\r\n                } />\r\n                <Route path=\"/register\" element={\r\n                    <AuthRoute>\r\n                        <div className=\"auth-container\">\r\n                            <Register />\r\n                        </div>\r\n                    </AuthRoute>\r\n                } />\r\n\r\n                {/* Protected routes */}\r\n                <Route path=\"/\" element={\r\n                    <ProtectedRoute>\r\n                        <Layout>\r\n                            <Navigate to=\"/notes\" replace />\r\n                        </Layout>\r\n                    </ProtectedRoute>\r\n                } />\r\n                <Route path=\"/notes\" element={\r\n                    <ProtectedRoute>\r\n                        <Layout>\r\n                            <NotesPage />\r\n                        </Layout>\r\n                    </ProtectedRoute>\r\n                } />\r\n                <Route path=\"/shared-notes\" element={\r\n                    <ProtectedRoute>\r\n                        <Layout>\r\n                            <NotesPage type=\"shared\" />\r\n                        </Layout>\r\n                    </ProtectedRoute>\r\n                } />\r\n                <Route path=\"/public-notes\" element={\r\n                    <ProtectedRoute>\r\n                        <Layout>\r\n                            <NotesPage type=\"public\" />\r\n                        </Layout>\r\n                    </ProtectedRoute>\r\n                } />\r\n                <Route path=\"/drive\" element={\r\n                    <ProtectedRoute>\r\n                        <Layout>\r\n                            <DrivePage />\r\n                        </Layout>\r\n                    </ProtectedRoute>\r\n                } />\r\n            </Routes>\r\n            <NoteList \r\n                notes={filteredNotes} \r\n                onNoteSelect={handleNoteSelect}\r\n                onDeleteNote={handleDeleteNote}\r\n                onMakePublic={async (noteId) => {\r\n                    try {\r\n                        await api.makeNotePublic(noteId);\r\n                        await loadAllNotes(); // Refresh notes after making public\r\n                    } catch (error) {\r\n                        console.error('Error making note public:', error);\r\n                        setError('Failed to make note public');\r\n                    }\r\n                }}\r\n                onShare={handleShare}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}