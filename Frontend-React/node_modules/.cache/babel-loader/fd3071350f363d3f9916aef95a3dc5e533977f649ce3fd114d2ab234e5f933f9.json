{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteEditor from './components/NoteEditor';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { useAuth } from './contexts/AuthContext';\nimport { api, getCurrentUser } from './services/api';\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\nimport Modal from './components/Modal';\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AppContent() {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [showRegister, setShowRegister] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [sharedNotes, setSharedNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [shareDialogNoteId, setShareDialogNoteId] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\n  const [currentView, setCurrentView] = useState('my-notes');\n  const [publicNotes, setPublicNotes] = useState([]);\n  const [sharedWithMeNotes, setSharedWithMeNotes] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (user) {\n      console.log('User logged in, loading notes...'); // Debug log\n      loadAllNotes();\n    }\n  }, [user]); // Only depend on user\n\n  const loadAllNotes = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const user = getCurrentUser();\n      console.log('Loading notes for user:', user);\n      const [myNotes, sharedNotes] = await Promise.all([api.getNotes(), api.getSharedNotes()]);\n      console.log('API Response - myNotes:', myNotes);\n      console.log('API Response - shared:', sharedNotes);\n      setNotes(myNotes);\n      setSharedWithMeNotes(sharedNotes);\n    } catch (err) {\n      console.error('Error loading notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteNote = async noteId => {\n    try {\n      setError(null);\n      await api.deleteNote(noteId);\n      setNotes(notes.filter(note => note.id !== noteId));\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        setSelectedNote(undefined);\n      }\n    } catch (err) {\n      setError('Failed to delete note');\n      console.error(err);\n    }\n  };\n  const handleCreateNote = () => {\n    setSelectedNote(undefined);\n    setIsCreating(true);\n    setIsNoteModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    console.log('Modal close triggered');\n    setIsNoteModalOpen(false);\n    setIsCreating(false);\n    setSelectedNote(undefined);\n  };\n  const handleNoteSelect = note => {\n    console.log('Note selected:', note);\n    setSelectedNote(note);\n    setIsNoteModalOpen(true);\n    console.log('Modal opened');\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      console.log('Saving note:', noteData);\n      if (noteData.id) {\n        // Updating existing note\n        await api.updateNote(noteData.id, noteData);\n      } else {\n        // Creating new note\n        await api.createNote(noteData);\n      }\n      await loadAllNotes();\n      setSelectedNote(undefined);\n      setIsCreating(false);\n      console.log('Note saved successfully');\n      setIsNoteModalOpen(false);\n    } catch (err) {\n      console.error('Failed to save note:', err);\n      setError('Failed to save note');\n    }\n  };\n  const handleMakePublic = async noteId => {\n    try {\n      await api.makeNotePublic(noteId);\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        const notes = await api.getNotes();\n        const updatedNote = notes.find(n => n.id === noteId);\n        if (updatedNote) {\n          setSelectedNote(updatedNote);\n        }\n      }\n      await loadAllNotes();\n    } catch (err) {\n      console.error('Error making note public:', err);\n      setError(err instanceof Error ? err.message : 'Failed to make note public');\n    }\n  };\n  const sortNotes = notesToSort => {\n    return [...notesToSort].sort((a, b) => {\n      switch (sortBy) {\n        case 'date-desc':\n          return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\n        case 'date-asc':\n          return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          return a.category.localeCompare(b.category);\n        default:\n          return 0;\n      }\n    });\n  };\n  const filteredAndSortedNotes = sortNotes(notes.filter(note => {\n    var _ref, _user$id;\n    // First filter by user\n    if (!user) return false;\n    const userId = (_ref = (_user$id = user.id) !== null && _user$id !== void 0 ? _user$id : user.Id) !== null && _ref !== void 0 ? _ref : 0;\n    const noteUserId = note.userId;\n    if (userId !== noteUserId) return false;\n\n    // Then filter by search and category\n    if (!(note !== null && note !== void 0 && note.title)) return false;\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !selectedCategory || note.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  }));\n  const renderSortOptions = () => {\n    const options = [{\n      value: 'date-desc',\n      label: 'Newest First'\n    }, {\n      value: 'date-asc',\n      label: 'Oldest First'\n    }, {\n      value: 'title',\n      label: 'Title'\n    }, {\n      value: 'category',\n      label: 'Category'\n    }];\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this));\n  };\n  const renderCategoryOptions = () => {\n    const categories = Array.from(new Set(notes.map(note => note.category))).filter(category => category);\n    return [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All Categories\"\n    }, \"all\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), ...categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }, this))];\n  };\n\n  // Add debug logging for filtered notes\n  useEffect(() => {\n    console.log('Current notes:', notes);\n    console.log('Filtered notes:', filteredAndSortedNotes);\n  }, [notes, filteredAndSortedNotes]);\n  useEffect(() => {\n    console.log('Notes state updated:', notes);\n  }, [notes]);\n\n  // Add useEffect to monitor sharedNotes changes\n  useEffect(() => {\n    console.log('Shared notes updated:', sharedNotes);\n  }, [sharedNotes]);\n  const handleLogout = () => {\n    // Clear UI state\n    setSelectedNote(undefined);\n    setSearchTerm('');\n    setSelectedCategory('');\n    setSortBy('date-desc');\n    // Don't clear notes here, they'll be reloaded on next login\n    logout();\n  };\n  const handleShare = noteId => {\n    setShareDialogNoteId(noteId);\n  };\n  const handleShareComplete = async () => {\n    await loadAllNotes(); // Reload notes to update the UI\n    setShareDialogNoteId(null);\n  };\n  const loadPublicNotes = async () => {\n    try {\n      console.log('Loading public notes...');\n      const response = await api.getPublicNotes();\n      console.log('Public notes received:', response);\n      setPublicNotes(response);\n    } catch (err) {\n      console.error('Failed to load public notes:', err);\n      setError('Failed to load public notes');\n    }\n  };\n  const loadSharedWithMeNotes = async () => {\n    try {\n      console.log('Loading shared notes...');\n      setIsLoading(true);\n      const shared = await api.getSharedWithMeNotes();\n      console.log('Shared notes received:', shared);\n      if (Array.isArray(shared)) {\n        setSharedWithMeNotes(shared);\n      } else {\n        console.error('Received invalid shared notes data:', shared);\n        setError('Invalid shared notes data received');\n      }\n    } catch (err) {\n      console.error('Failed to load shared notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load shared notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      console.log('Current view:', currentView);\n      switch (currentView) {\n        case 'my-notes':\n          loadAllNotes();\n          break;\n        case 'shared-notes':\n          loadSharedWithMeNotes();\n          break;\n        case 'public-notes':\n          loadPublicNotes();\n          break;\n      }\n    }\n  }, [currentView, user]);\n\n  // Update setCurrentView to also update the URL\n  const handleViewChange = view => {\n    setCurrentView(view);\n    switch (view) {\n      case 'my-notes':\n        navigate('/notes');\n        break;\n      case 'shared-notes':\n        navigate('/notes/shared');\n        break;\n      case 'public-notes':\n        navigate('/notes/public');\n        break;\n    }\n  };\n\n  // Add effect to sync URL with current view\n  useEffect(() => {\n    const path = location.pathname;\n    if (path === '/notes/public' && currentView !== 'public-notes') {\n      setCurrentView('public-notes');\n    } else if (path === '/notes/shared' && currentView !== 'shared-notes') {\n      setCurrentView('shared-notes');\n    } else if (path === '/notes' && currentView !== 'my-notes') {\n      setCurrentView('my-notes');\n    }\n  }, [location.pathname]);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notepad+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"auth-container\",\n        children: showRegister ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRegister(false),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRegister(true),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notepad+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : user.Username), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-note-button sidebar-create\",\n          onClick: handleCreateNote,\n          children: \"Create New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `nav-item ${currentView === 'my-notes' ? 'active' : ''}`,\n            onClick: () => handleViewChange('my-notes'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"nav-icon\",\n              children: \"\\uD83D\\uDCC1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 29\n            }, this), \"My Notes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `nav-item ${currentView === 'shared-notes' ? 'active' : ''}`,\n            onClick: () => handleViewChange('shared-notes'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"nav-icon\",\n              children: \"\\uD83D\\uDD04\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 29\n            }, this), \"Notes Shared With Me\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `nav-item ${currentView === 'public-notes' ? 'active' : ''}`,\n            onClick: () => handleViewChange('public-notes'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"nav-icon\",\n              children: \"\\uD83C\\uDF10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 29\n            }, this), \"Public Notes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search notes...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory,\n            onChange: e => setSelectedCategory(e.target.value),\n            className: \"category-filter\",\n            children: renderCategoryOptions()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: sortBy,\n            onChange: e => setSortBy(e.target.value),\n            className: \"sort-select\",\n            children: renderSortOptions()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-container\",\n          children: [currentView === 'my-notes' && /*#__PURE__*/_jsxDEV(NoteList, {\n            notes: filteredAndSortedNotes,\n            selectedNote: selectedNote,\n            onNoteSelect: handleNoteSelect,\n            onDeleteNote: handleDeleteNote,\n            onMakePublic: handleMakePublic,\n            onShare: handleShare,\n            viewType: \"my-notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 29\n          }, this), currentView === 'shared-notes' && /*#__PURE__*/_jsxDEV(NoteList, {\n            notes: sharedWithMeNotes,\n            selectedNote: selectedNote,\n            onNoteSelect: handleNoteSelect,\n            onDeleteNote: handleDeleteNote,\n            onMakePublic: handleMakePublic,\n            onShare: handleShare,\n            viewType: \"shared-notes\",\n            isLoading: isLoading,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 29\n          }, this), currentView === 'public-notes' && /*#__PURE__*/_jsxDEV(NoteList, {\n            notes: publicNotes,\n            selectedNote: selectedNote,\n            onNoteSelect: handleNoteSelect,\n            onDeleteNote: handleDeleteNote,\n            onMakePublic: handleMakePublic,\n            onShare: handleShare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isNoteModalOpen,\n      onClose: handleCloseModal,\n      title: isCreating ? 'Create New Note' : 'Edit Note',\n      children: /*#__PURE__*/_jsxDEV(NoteEditor, {\n        note: selectedNote,\n        onSave: async note => {\n          console.log('Save triggered from NoteEditor');\n          await handleSaveNote(note);\n        },\n        onCancel: () => {\n          console.log('Cancel triggered from NoteEditor');\n          handleCloseModal();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }, this), shareDialogNoteId && /*#__PURE__*/_jsxDEV(ShareNoteDialog, {\n      noteId: shareDialogNoteId,\n      onClose: () => setShareDialogNoteId(null),\n      onShare: handleShareComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 9\n  }, this);\n}\n_s(AppContent, \"qrcgUjzvF1u1GtQOWXdKh8WvLpU=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/*\",\n      element: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 491,\n    columnNumber: 9\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NoteList","NoteEditor","Login","Register","useAuth","api","getCurrentUser","ShareNoteDialog","Modal","Routes","Route","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContent","_s","user","logout","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","shareDialogNoteId","setShareDialogNoteId","isCreating","setIsCreating","isNoteModalOpen","setIsNoteModalOpen","currentView","setCurrentView","publicNotes","setPublicNotes","sharedWithMeNotes","setSharedWithMeNotes","navigate","location","console","log","loadAllNotes","myNotes","Promise","all","getNotes","getSharedNotes","err","Error","message","handleDeleteNote","noteId","deleteNote","filter","note","id","handleCreateNote","handleCloseModal","handleNoteSelect","handleSaveNote","noteData","updateNote","createNote","handleMakePublic","makeNotePublic","updatedNote","find","n","sortNotes","notesToSort","sort","a","b","Date","updatedAt","getTime","title","localeCompare","category","filteredAndSortedNotes","_ref","_user$id","userId","Id","noteUserId","matchesSearch","toLowerCase","includes","content","matchesCategory","renderSortOptions","options","value","label","map","option","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCategoryOptions","categories","Array","from","Set","handleLogout","handleShare","handleShareComplete","loadPublicNotes","response","getPublicNotes","loadSharedWithMeNotes","shared","getSharedWithMeNotes","isArray","handleViewChange","view","path","pathname","className","onClick","username","Username","type","placeholder","onChange","e","target","onNoteSelect","onDeleteNote","onMakePublic","onShare","viewType","isOpen","onClose","onSave","onCancel","_c","App","element","_c2","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note, NoteApiResponse, NoteStatus } from './types/Note';\r\nimport { api, getCurrentUser } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\nimport Modal from './components/Modal';\r\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title' | 'category';\r\ntype ViewType = 'my-notes' | 'shared-notes' | 'public-notes';\r\n\r\nfunction AppContent() {\r\n    const { user, logout } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [shareDialogNoteId, setShareDialogNoteId] = useState<number | null>(null);\r\n    const [isCreating, setIsCreating] = useState(false);\r\n    const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\r\n    const [currentView, setCurrentView] = useState<ViewType>('my-notes');\r\n    const [publicNotes, setPublicNotes] = useState<Note[]>([]);\r\n    const [sharedWithMeNotes, setSharedWithMeNotes] = useState<Note[]>([]);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            const user = getCurrentUser();\r\n            console.log('Loading notes for user:', user);\r\n            \r\n            const [myNotes, sharedNotes] = await Promise.all([\r\n                api.getNotes(),\r\n                api.getSharedNotes()\r\n            ]);\r\n            \r\n            console.log('API Response - myNotes:', myNotes);\r\n            console.log('API Response - shared:', sharedNotes);\r\n            \r\n            setNotes(myNotes);\r\n            setSharedWithMeNotes(sharedNotes);\r\n        } catch (err) {\r\n            console.error('Error loading notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCreateNote = () => {\r\n        setSelectedNote(undefined);\r\n        setIsCreating(true);\r\n        setIsNoteModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        console.log('Modal close triggered');\r\n        setIsNoteModalOpen(false);\r\n        setIsCreating(false);\r\n        setSelectedNote(undefined);\r\n    };\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        console.log('Note selected:', note);\r\n        setSelectedNote(note);\r\n        setIsNoteModalOpen(true);\r\n        console.log('Modal opened');\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            console.log('Saving note:', noteData);\r\n            if (noteData.id) {\r\n                // Updating existing note\r\n                await api.updateNote(noteData.id, noteData);\r\n            } else {\r\n                // Creating new note\r\n                await api.createNote(noteData);\r\n            }\r\n            await loadAllNotes();\r\n            setSelectedNote(undefined);\r\n            setIsCreating(false);\r\n            console.log('Note saved successfully');\r\n            setIsNoteModalOpen(false);\r\n        } catch (err) {\r\n            console.error('Failed to save note:', err);\r\n            setError('Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            await api.makeNotePublic(noteId);\r\n            \r\n            if (selectedNote?.id === noteId) {\r\n                const notes = await api.getNotes();\r\n                const updatedNote = notes.find(n => n.id === noteId);\r\n                if (updatedNote) {\r\n                    setSelectedNote(updatedNote);\r\n                }\r\n            }\r\n            \r\n            await loadAllNotes();\r\n        } catch (err) {\r\n            console.error('Error making note public:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to make note public');\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notesToSort: Note[]): Note[] => {\r\n        return [...notesToSort].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    return a.category.localeCompare(b.category);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filteredAndSortedNotes = sortNotes(\r\n        notes.filter(note => {\r\n            // First filter by user\r\n            if (!user) return false;\r\n            const userId = user.id ?? user.Id ?? 0;\r\n            const noteUserId = note.userId;\r\n            if (userId !== noteUserId) return false;\r\n            \r\n            // Then filter by search and category\r\n            if (!note?.title) return false;\r\n            \r\n            const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n            const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n            return matchesSearch && matchesCategory;\r\n        })\r\n    );\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredAndSortedNotes);\r\n    }, [notes, filteredAndSortedNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    // Add useEffect to monitor sharedNotes changes\r\n    useEffect(() => {\r\n        console.log('Shared notes updated:', sharedNotes);\r\n    }, [sharedNotes]);\r\n\r\n    const handleLogout = () => {\r\n        // Clear UI state\r\n        setSelectedNote(undefined);\r\n        setSearchTerm('');\r\n        setSelectedCategory('');\r\n        setSortBy('date-desc');\r\n        // Don't clear notes here, they'll be reloaded on next login\r\n        logout();\r\n    };\r\n\r\n    const handleShare = (noteId: number) => {\r\n        setShareDialogNoteId(noteId);\r\n    };\r\n\r\n    const handleShareComplete = async () => {\r\n        await loadAllNotes(); // Reload notes to update the UI\r\n        setShareDialogNoteId(null);\r\n    };\r\n\r\n    const loadPublicNotes = async () => {\r\n        try {\r\n            console.log('Loading public notes...');\r\n            const response = await api.getPublicNotes();\r\n            console.log('Public notes received:', response);\r\n            setPublicNotes(response);\r\n        } catch (err) {\r\n            console.error('Failed to load public notes:', err);\r\n            setError('Failed to load public notes');\r\n        }\r\n    };\r\n\r\n    const loadSharedWithMeNotes = async () => {\r\n        try {\r\n            console.log('Loading shared notes...');\r\n            setIsLoading(true);\r\n            const shared = await api.getSharedWithMeNotes();\r\n            console.log('Shared notes received:', shared);\r\n            if (Array.isArray(shared)) {\r\n                setSharedWithMeNotes(shared);\r\n            } else {\r\n                console.error('Received invalid shared notes data:', shared);\r\n                setError('Invalid shared notes data received');\r\n            }\r\n        } catch (err) {\r\n            console.error('Failed to load shared notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load shared notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('Current view:', currentView);\r\n            switch (currentView) {\r\n                case 'my-notes':\r\n                    loadAllNotes();\r\n                    break;\r\n                case 'shared-notes':\r\n                    loadSharedWithMeNotes();\r\n                    break;\r\n                case 'public-notes':\r\n                    loadPublicNotes();\r\n                    break;\r\n            }\r\n        }\r\n    }, [currentView, user]);\r\n\r\n    // Update setCurrentView to also update the URL\r\n    const handleViewChange = (view: ViewType) => {\r\n        setCurrentView(view);\r\n        switch (view) {\r\n            case 'my-notes':\r\n                navigate('/notes');\r\n                break;\r\n            case 'shared-notes':\r\n                navigate('/notes/shared');\r\n                break;\r\n            case 'public-notes':\r\n                navigate('/notes/public');\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Add effect to sync URL with current view\r\n    useEffect(() => {\r\n        const path = location.pathname;\r\n        if (path === '/notes/public' && currentView !== 'public-notes') {\r\n            setCurrentView('public-notes');\r\n        } else if (path === '/notes/shared' && currentView !== 'shared-notes') {\r\n            setCurrentView('shared-notes');\r\n        } else if (path === '/notes' && currentView !== 'my-notes') {\r\n            setCurrentView('my-notes');\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    if (!user) {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1>Notepad+</h1>\r\n                </header>\r\n                <main className=\"auth-container\">\r\n                    {showRegister ? (\r\n                        <>\r\n                            <Register />\r\n                            <p>\r\n                                Already have an account?{' '}\r\n                                <button onClick={() => setShowRegister(false)}>\r\n                                    Login\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Login />\r\n                            <p>\r\n                                Don't have an account?{' '}\r\n                                <button onClick={() => setShowRegister(true)}>\r\n                                    Register\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Notepad+</h1>\r\n                <div className=\"user-info\">\r\n                    <span>Welcome, {user?.username || user?.Username}!</span>\r\n                    <button className=\"logout-button\" onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"App-layout\">\r\n                <nav className=\"sidebar\">\r\n                    <button \r\n                        className=\"create-note-button sidebar-create\"\r\n                        onClick={handleCreateNote}\r\n                    >\r\n                        Create New Note\r\n                    </button>\r\n                    <div className=\"nav-section\">\r\n                        <div \r\n                            className={`nav-item ${currentView === 'my-notes' ? 'active' : ''}`}\r\n                            onClick={() => handleViewChange('my-notes')}\r\n                        >\r\n                            <span className=\"nav-icon\">📁</span>\r\n                            My Notes\r\n                        </div>\r\n                        <div \r\n                            className={`nav-item ${currentView === 'shared-notes' ? 'active' : ''}`}\r\n                            onClick={() => handleViewChange('shared-notes')}\r\n                        >\r\n                            <span className=\"nav-icon\">🔄</span>\r\n                            Notes Shared With Me\r\n                        </div>\r\n                        <div \r\n                            className={`nav-item ${currentView === 'public-notes' ? 'active' : ''}`}\r\n                            onClick={() => handleViewChange('public-notes')}\r\n                        >\r\n                            <span className=\"nav-icon\">🌐</span>\r\n                            Public Notes\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n\r\n                <main className=\"main-content\">\r\n                    <div className=\"search-filters\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search notes...\"\r\n                            value={searchTerm}\r\n                            onChange={(e) => setSearchTerm(e.target.value)}\r\n                            className=\"search-input\"\r\n                        />\r\n                        <select\r\n                            value={selectedCategory}\r\n                            onChange={(e) => setSelectedCategory(e.target.value)}\r\n                            className=\"category-filter\"\r\n                        >\r\n                            {renderCategoryOptions()}\r\n                        </select>\r\n                        <select\r\n                            value={sortBy}\r\n                            onChange={(e) => setSortBy(e.target.value as SortOption)}\r\n                            className=\"sort-select\"\r\n                        >\r\n                            {renderSortOptions()}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"notes-container\">\r\n                        {currentView === 'my-notes' && (\r\n                            <NoteList \r\n                                notes={filteredAndSortedNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={handleNoteSelect}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                                viewType=\"my-notes\"\r\n                            />\r\n                        )}\r\n                        {currentView === 'shared-notes' && (\r\n                            <NoteList \r\n                                notes={sharedWithMeNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={handleNoteSelect}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                                viewType=\"shared-notes\"\r\n                                isLoading={isLoading}\r\n                                error={error}\r\n                            />\r\n                        )}\r\n                        {currentView === 'public-notes' && (\r\n                            <NoteList \r\n                                notes={publicNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={handleNoteSelect}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </main>\r\n            </div>\r\n\r\n            <Modal \r\n                isOpen={isNoteModalOpen}\r\n                onClose={handleCloseModal}\r\n                title={isCreating ? 'Create New Note' : 'Edit Note'}\r\n            >\r\n                <NoteEditor \r\n                    note={selectedNote}\r\n                    onSave={async (note) => {\r\n                        console.log('Save triggered from NoteEditor');\r\n                        await handleSaveNote(note);\r\n                    }}\r\n                    onCancel={() => {\r\n                        console.log('Cancel triggered from NoteEditor');\r\n                        handleCloseModal();\r\n                    }}\r\n                />\r\n            </Modal>\r\n\r\n            {shareDialogNoteId && (\r\n                <ShareNoteDialog\r\n                    noteId={shareDialogNoteId}\r\n                    onClose={() => setShareDialogNoteId(null)}\r\n                    onShare={handleShareComplete}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/*\" element={<AppContent />} />\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}