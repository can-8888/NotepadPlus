{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { useAuth } from './contexts/AuthContext';\nimport { api, getCurrentUser } from './services/api';\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport NotesPage from './pages/NotesPage';\nimport DrivePage from './pages/DrivePage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [showRegister, setShowRegister] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [sharedNotes, setSharedNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [shareDialogNoteId, setShareDialogNoteId] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\n  const [currentView, setCurrentView] = useState('my-notes');\n  const [publicNotes, setPublicNotes] = useState([]);\n  const [sharedWithMeNotes, setSharedWithMeNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (user) {\n      console.log('User logged in, loading notes...'); // Debug log\n      loadAllNotes();\n    }\n  }, [user]); // Only depend on user\n\n  const loadAllNotes = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const user = getCurrentUser();\n      console.log('Loading notes for user:', user);\n\n      // Load all types of notes in parallel\n      const [myNotes, sharedNotes, publicNotes] = await Promise.all([api.getNotes(), api.getSharedNotes(), api.getPublicNotes()]);\n      console.log('API Response - myNotes:', myNotes);\n      console.log('API Response - shared:', sharedNotes);\n      console.log('API Response - public:', publicNotes);\n      setNotes(myNotes);\n      setSharedWithMeNotes(sharedNotes);\n      setPublicNotes(publicNotes);\n    } catch (err) {\n      console.error('Error loading notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteNote = async noteId => {\n    try {\n      setError(null);\n      await api.deleteNote(noteId);\n      setNotes(notes.filter(note => note.id !== noteId));\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        setSelectedNote(undefined);\n      }\n    } catch (err) {\n      setError('Failed to delete note');\n      console.error(err);\n    }\n  };\n  const handleCreateNote = () => {\n    setSelectedNote(undefined);\n    setIsCreating(true);\n    setIsNoteModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    console.log('Modal close triggered');\n    setIsNoteModalOpen(false);\n    setIsCreating(false);\n    setSelectedNote(undefined);\n  };\n  const handleNoteSelect = note => {\n    console.log('Note selected:', note);\n    setSelectedNote(note);\n    setIsNoteModalOpen(true);\n    console.log('Modal opened');\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      console.log('Saving note:', noteData);\n      if (noteData.id) {\n        // Updating existing note\n        await api.updateNote(noteData.id, noteData);\n      } else {\n        // Creating new note\n        await api.createNote(noteData);\n      }\n      await loadAllNotes();\n      setSelectedNote(undefined);\n      setIsCreating(false);\n      console.log('Note saved successfully');\n      setIsNoteModalOpen(false);\n    } catch (err) {\n      console.error('Failed to save note:', err);\n      setError('Failed to save note');\n    }\n  };\n  const handleMakePublic = async noteId => {\n    try {\n      console.log('handleMakePublic called with noteId:', noteId);\n      if (!noteId) {\n        console.error('Invalid note ID:', noteId);\n        return;\n      }\n      const updatedNote = await api.makeNotePublic(noteId);\n      console.log('Note successfully made public:', updatedNote);\n\n      // Update both notes lists\n      setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n      setPublicNotes(prevPublicNotes => [...prevPublicNotes, updatedNote]);\n\n      // Show success message\n      setMessage({\n        type: 'success',\n        text: 'Note is now public'\n      });\n\n      // Refresh lists\n      await loadAllNotes();\n      await loadPublicNotes();\n    } catch (error) {\n      console.error('Error making note public:', error);\n      setError(error instanceof Error ? error.message : 'Failed to make note public');\n    }\n  };\n  const sortNotes = notes => {\n    return [...notes].sort((a, b) => {\n      switch (sortBy) {\n        case 'date-desc':\n          return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n        case 'date-asc':\n          return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          // Handle undefined categories\n          const categoryA = a.category || '';\n          const categoryB = b.category || '';\n          return categoryA.localeCompare(categoryB);\n        default:\n          return 0;\n      }\n    });\n  };\n  const filterNotes = notes => {\n    return notes.filter(note => {\n      var _user$id;\n      // First check ownership\n      if (!user) return false;\n      const userId = (_user$id = user.id) !== null && _user$id !== void 0 ? _user$id : 0;\n      const noteOwnerId = note.ownerId; // Changed from userId to ownerId\n      if (userId !== noteOwnerId) return false;\n\n      // Then filter by search and category\n      const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesCategory = !selectedCategory || note.category === selectedCategory;\n      return matchesSearch && matchesCategory;\n    });\n  };\n  const filteredAndSortedNotes = sortNotes(filterNotes(notes));\n  const renderSortOptions = () => {\n    const options = [{\n      value: 'date-desc',\n      label: 'Newest First'\n    }, {\n      value: 'date-asc',\n      label: 'Oldest First'\n    }, {\n      value: 'title',\n      label: 'Title'\n    }, {\n      value: 'category',\n      label: 'Category'\n    }];\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this));\n  };\n  const renderCategoryOptions = () => {\n    const categories = Array.from(new Set(notes.map(note => note.category))).filter(category => category);\n    return [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All Categories\"\n    }, \"all\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), ...categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this))];\n  };\n\n  // Add debug logging for filtered notes\n  useEffect(() => {\n    console.log('Current notes:', notes);\n    console.log('Filtered notes:', filteredAndSortedNotes);\n  }, [notes, filteredAndSortedNotes]);\n  useEffect(() => {\n    console.log('Notes state updated:', notes);\n  }, [notes]);\n\n  // Add useEffect to monitor sharedNotes changes\n  useEffect(() => {\n    console.log('Shared notes updated:', sharedNotes);\n  }, [sharedNotes]);\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  const handleShare = noteId => {\n    setShareDialogNoteId(noteId);\n  };\n  const handleShareComplete = async () => {\n    await loadAllNotes(); // Reload notes to update the UI\n    setShareDialogNoteId(null);\n  };\n  const loadPublicNotes = async () => {\n    try {\n      console.log('Loading public notes...');\n      const publicNotes = await api.getPublicNotes();\n      console.log('Public notes received:', publicNotes);\n      setPublicNotes(publicNotes);\n    } catch (err) {\n      console.error('Error loading public notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load public notes');\n    }\n  };\n  const loadSharedNotes = async () => {\n    try {\n      console.log('Loading shared notes...');\n      setIsLoading(true);\n      const shared = await api.getSharedNotes();\n      console.log('Shared notes received:', shared);\n      if (Array.isArray(shared)) {\n        setSharedWithMeNotes(shared);\n      }\n    } catch (err) {\n      console.error('Error loading shared notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load shared notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      console.log('Current view:', currentView);\n      switch (currentView) {\n        case 'my-notes':\n          loadAllNotes();\n          break;\n        case 'shared-notes':\n          loadSharedNotes();\n          break;\n        case 'public-notes':\n          loadPublicNotes();\n          break;\n      }\n    }\n  }, [currentView, user]);\n\n  // Update setCurrentView to also update the URL\n  const handleViewChange = view => {\n    setCurrentView(view);\n    switch (view) {\n      case 'my-notes':\n        navigate('/notes');\n        break;\n      case 'shared-notes':\n        navigate('/shared-notes');\n        break;\n      case 'public-notes':\n        navigate('/public-notes');\n        break;\n    }\n  };\n\n  // Add effect to sync URL with current view\n  useEffect(() => {\n    const path = location.pathname;\n    if (path === '/public-notes' && currentView !== 'public-notes') {\n      setCurrentView('public-notes');\n    } else if (path === '/shared-notes' && currentView !== 'shared-notes') {\n      setCurrentView('shared-notes');\n    } else if (path === '/notes' && currentView !== 'my-notes') {\n      setCurrentView('my-notes');\n    }\n  }, [location.pathname]);\n  const handleShareNote = async (noteId, collaboratorId) => {\n    try {\n      const updatedNote = await api.shareNote(noteId, collaboratorId);\n\n      // Update the notes list with the updated note\n      setNotes(notes.map(note => note.id === noteId ? updatedNote : note));\n\n      // Show success message\n      setMessage({\n        type: 'success',\n        text: 'Note shared successfully'\n      });\n    } catch (error) {\n      console.error('Error sharing note:', error);\n      setMessage({\n        type: 'error',\n        text: error instanceof Error ? error.message : 'Failed to share note'\n      });\n    }\n  };\n  const loadPersonalNotes = async () => {\n    try {\n      setIsLoading(true);\n      const fetchedNotes = await api.getNotes();\n      setNotes(fetchedNotes);\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Failed to load notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadPersonalNotes();\n  }, []);\n\n  // Add a protected route wrapper component\n  const ProtectedRoute = ({\n    children\n  }) => {\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  };\n\n  // Add an auth route wrapper component\n  const AuthRoute = ({\n    children\n  }) => {\n    if (user) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/notes\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(AuthRoute, {\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(AuthRoute, {\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/notes\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notes\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(NotesPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/shared-notes\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(NotesPage, {\n            type: \"shared\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/public-notes\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(NotesPage, {\n            type: \"public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/drive\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(DrivePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"1/66/DYIIfygxVoCfvbUN04lbrg=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Register","useAuth","api","getCurrentUser","Routes","Route","Navigate","useNavigate","useLocation","NotesPage","DrivePage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","logout","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","shareDialogNoteId","setShareDialogNoteId","isCreating","setIsCreating","isNoteModalOpen","setIsNoteModalOpen","currentView","setCurrentView","publicNotes","setPublicNotes","sharedWithMeNotes","setSharedWithMeNotes","message","setMessage","navigate","location","console","log","loadAllNotes","myNotes","Promise","all","getNotes","getSharedNotes","getPublicNotes","err","Error","handleDeleteNote","noteId","deleteNote","filter","note","id","handleCreateNote","handleCloseModal","handleNoteSelect","handleSaveNote","noteData","updateNote","createNote","handleMakePublic","updatedNote","makeNotePublic","prevNotes","prevPublicNotes","type","text","loadPublicNotes","sortNotes","sort","a","b","Date","createdAt","getTime","title","localeCompare","categoryA","category","categoryB","filterNotes","_user$id","userId","noteOwnerId","ownerId","matchesSearch","toLowerCase","includes","content","matchesCategory","filteredAndSortedNotes","renderSortOptions","options","value","label","map","option","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCategoryOptions","categories","Array","from","Set","handleLogout","handleShare","handleShareComplete","loadSharedNotes","shared","isArray","handleViewChange","view","path","pathname","handleShareNote","collaboratorId","shareNote","loadPersonalNotes","fetchedNotes","ProtectedRoute","to","replace","AuthRoute","className","element","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note, NoteApiResponse, NoteStatus } from './types/Note';\r\nimport { api, getCurrentUser } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\nimport Modal from './components/Modal';\r\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom';\r\nimport NotesPage from './pages/NotesPage';\r\nimport Sidebar from './components/Sidebar';\r\nimport DrivePage from './pages/DrivePage';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title' | 'category';\r\ntype ViewType = 'my-notes' | 'shared-notes' | 'public-notes';\r\n\r\nfunction App() {\r\n    const { user, logout } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [shareDialogNoteId, setShareDialogNoteId] = useState<number | null>(null);\r\n    const [isCreating, setIsCreating] = useState(false);\r\n    const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\r\n    const [currentView, setCurrentView] = useState<ViewType>('my-notes');\r\n    const [publicNotes, setPublicNotes] = useState<Note[]>([]);\r\n    const [sharedWithMeNotes, setSharedWithMeNotes] = useState<Note[]>([]);\r\n    const [message, setMessage] = useState<{ type: string; text: string } | null>(null);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            const user = getCurrentUser();\r\n            console.log('Loading notes for user:', user);\r\n            \r\n            // Load all types of notes in parallel\r\n            const [myNotes, sharedNotes, publicNotes] = await Promise.all([\r\n                api.getNotes(),\r\n                api.getSharedNotes(),\r\n                api.getPublicNotes()\r\n            ]);\r\n            \r\n            console.log('API Response - myNotes:', myNotes);\r\n            console.log('API Response - shared:', sharedNotes);\r\n            console.log('API Response - public:', publicNotes);\r\n            \r\n            setNotes(myNotes);\r\n            setSharedWithMeNotes(sharedNotes);\r\n            setPublicNotes(publicNotes);\r\n        } catch (err) {\r\n            console.error('Error loading notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCreateNote = () => {\r\n        setSelectedNote(undefined);\r\n        setIsCreating(true);\r\n        setIsNoteModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        console.log('Modal close triggered');\r\n        setIsNoteModalOpen(false);\r\n        setIsCreating(false);\r\n        setSelectedNote(undefined);\r\n    };\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        console.log('Note selected:', note);\r\n        setSelectedNote(note);\r\n        setIsNoteModalOpen(true);\r\n        console.log('Modal opened');\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            console.log('Saving note:', noteData);\r\n            if (noteData.id) {\r\n                // Updating existing note\r\n                await api.updateNote(noteData.id, noteData);\r\n            } else {\r\n                // Creating new note\r\n                await api.createNote(noteData);\r\n            }\r\n            await loadAllNotes();\r\n            setSelectedNote(undefined);\r\n            setIsCreating(false);\r\n            console.log('Note saved successfully');\r\n            setIsNoteModalOpen(false);\r\n        } catch (err) {\r\n            console.error('Failed to save note:', err);\r\n            setError('Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            console.log('handleMakePublic called with noteId:', noteId);\r\n            if (!noteId) {\r\n                console.error('Invalid note ID:', noteId);\r\n                return;\r\n            }\r\n\r\n            const updatedNote: Note = await api.makeNotePublic(noteId);\r\n            console.log('Note successfully made public:', updatedNote);\r\n\r\n            // Update both notes lists\r\n            setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\r\n            setPublicNotes(prevPublicNotes => [...prevPublicNotes, updatedNote]);\r\n\r\n            // Show success message\r\n            setMessage({ type: 'success', text: 'Note is now public' });\r\n\r\n            // Refresh lists\r\n            await loadAllNotes();\r\n            await loadPublicNotes();\r\n        } catch (error) {\r\n            console.error('Error making note public:', error);\r\n            setError(error instanceof Error ? error.message : 'Failed to make note public');\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notes: Note[]): Note[] => {\r\n        return [...notes].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    // Handle undefined categories\r\n                    const categoryA = a.category || '';\r\n                    const categoryB = b.category || '';\r\n                    return categoryA.localeCompare(categoryB);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filterNotes = (notes: Note[]): Note[] => {\r\n        return notes.filter(note => {\r\n            // First check ownership\r\n            if (!user) return false;\r\n            const userId = user.id ?? 0;\r\n            const noteOwnerId = note.ownerId;  // Changed from userId to ownerId\r\n            if (userId !== noteOwnerId) return false;\r\n            \r\n            // Then filter by search and category\r\n            const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n            const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n            return matchesSearch && matchesCategory;\r\n        });\r\n    };\r\n\r\n    const filteredAndSortedNotes = sortNotes(\r\n        filterNotes(notes)\r\n    );\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredAndSortedNotes);\r\n    }, [notes, filteredAndSortedNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    // Add useEffect to monitor sharedNotes changes\r\n    useEffect(() => {\r\n        console.log('Shared notes updated:', sharedNotes);\r\n    }, [sharedNotes]);\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        navigate('/login');\r\n    };\r\n\r\n    const handleShare = (noteId: number) => {\r\n        setShareDialogNoteId(noteId);\r\n    };\r\n\r\n    const handleShareComplete = async () => {\r\n        await loadAllNotes(); // Reload notes to update the UI\r\n        setShareDialogNoteId(null);\r\n    };\r\n\r\n    const loadPublicNotes = async () => {\r\n        try {\r\n            console.log('Loading public notes...');\r\n            const publicNotes = await api.getPublicNotes();\r\n            console.log('Public notes received:', publicNotes);\r\n            setPublicNotes(publicNotes);\r\n        } catch (err) {\r\n            console.error('Error loading public notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load public notes');\r\n        }\r\n    };\r\n\r\n    const loadSharedNotes = async () => {\r\n        try {\r\n            console.log('Loading shared notes...');\r\n            setIsLoading(true);\r\n            const shared = await api.getSharedNotes();\r\n            console.log('Shared notes received:', shared);\r\n            if (Array.isArray(shared)) {\r\n                setSharedWithMeNotes(shared);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error loading shared notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load shared notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('Current view:', currentView);\r\n            switch (currentView) {\r\n                case 'my-notes':\r\n                    loadAllNotes();\r\n                    break;\r\n                case 'shared-notes':\r\n                    loadSharedNotes();\r\n                    break;\r\n                case 'public-notes':\r\n                    loadPublicNotes();\r\n                    break;\r\n            }\r\n        }\r\n    }, [currentView, user]);\r\n\r\n    // Update setCurrentView to also update the URL\r\n    const handleViewChange = (view: ViewType) => {\r\n        setCurrentView(view);\r\n        switch (view) {\r\n            case 'my-notes':\r\n                navigate('/notes');\r\n                break;\r\n            case 'shared-notes':\r\n                navigate('/shared-notes');\r\n                break;\r\n            case 'public-notes':\r\n                navigate('/public-notes');\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Add effect to sync URL with current view\r\n    useEffect(() => {\r\n        const path = location.pathname;\r\n        if (path === '/public-notes' && currentView !== 'public-notes') {\r\n            setCurrentView('public-notes');\r\n        } else if (path === '/shared-notes' && currentView !== 'shared-notes') {\r\n            setCurrentView('shared-notes');\r\n        } else if (path === '/notes' && currentView !== 'my-notes') {\r\n            setCurrentView('my-notes');\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    const handleShareNote = async (noteId: number, collaboratorId: number) => {\r\n        try {\r\n            const updatedNote = await api.shareNote(noteId, collaboratorId);\r\n            \r\n            // Update the notes list with the updated note\r\n            setNotes(notes.map(note => \r\n                note.id === noteId ? updatedNote : note\r\n            ));\r\n            \r\n            // Show success message\r\n            setMessage({ type: 'success', text: 'Note shared successfully' });\r\n        } catch (error) {\r\n            console.error('Error sharing note:', error);\r\n            setMessage({ type: 'error', text: error instanceof Error ? error.message : 'Failed to share note' });\r\n        }\r\n    };\r\n\r\n    const loadPersonalNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const fetchedNotes = await api.getNotes();\r\n            setNotes(fetchedNotes);\r\n        } catch (error) {\r\n            setError(error instanceof Error ? error.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadPersonalNotes();\r\n    }, []);\r\n\r\n    // Add a protected route wrapper component\r\n    const ProtectedRoute = ({ children }: { children: React.ReactNode }) => {\r\n        if (!user) {\r\n            return <Navigate to=\"/login\" replace />;\r\n        }\r\n        return <>{children}</>;\r\n    };\r\n\r\n    // Add an auth route wrapper component\r\n    const AuthRoute = ({ children }: { children: React.ReactNode }) => {\r\n        if (user) {\r\n            return <Navigate to=\"/notes\" replace />;\r\n        }\r\n        return <>{children}</>;\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Routes>\r\n                {/* Auth routes */}\r\n                <Route path=\"/login\" element={\r\n                    <AuthRoute>\r\n                        <Login />\r\n                    </AuthRoute>\r\n                } />\r\n                <Route path=\"/register\" element={\r\n                    <AuthRoute>\r\n                        <Register />\r\n                    </AuthRoute>\r\n                } />\r\n\r\n                {/* Protected routes */}\r\n                <Route path=\"/\" element={\r\n                    <ProtectedRoute>\r\n                        <Navigate to=\"/notes\" replace />\r\n                    </ProtectedRoute>\r\n                } />\r\n                <Route path=\"/notes\" element={\r\n                    <ProtectedRoute>\r\n                        <NotesPage />\r\n                    </ProtectedRoute>\r\n                } />\r\n                <Route path=\"/shared-notes\" element={\r\n                    <ProtectedRoute>\r\n                        <NotesPage type=\"shared\" />\r\n                    </ProtectedRoute>\r\n                } />\r\n                <Route path=\"/public-notes\" element={\r\n                    <ProtectedRoute>\r\n                        <NotesPage type=\"public\" />\r\n                    </ProtectedRoute>\r\n                } />\r\n                <Route path=\"/drive\" element={\r\n                    <ProtectedRoute>\r\n                        <DrivePage />\r\n                    </ProtectedRoute>\r\n                } />\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}