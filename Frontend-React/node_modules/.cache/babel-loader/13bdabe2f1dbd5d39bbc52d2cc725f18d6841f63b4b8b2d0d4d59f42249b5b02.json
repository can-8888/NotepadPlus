{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteEditor from './components/NoteEditor';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { useAuth } from './contexts/AuthContext';\nimport { api } from './services/api';\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [showRegister, setShowRegister] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [sharedNotes, setSharedNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [shareDialogNoteId, setShareDialogNoteId] = useState(null);\n  useEffect(() => {\n    if (user) {\n      console.log('User logged in, loading notes...'); // Debug log\n      loadAllNotes();\n    }\n  }, [user]); // Only depend on user\n\n  const loadAllNotes = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      console.log('Loading notes for user:', user);\n\n      // Load both regular and shared notes\n      const [myNotes, shared] = await Promise.all([api.getNotes(), api.getSharedNotes()]);\n      console.log('API Response - myNotes:', myNotes);\n      console.log('API Response - shared:', shared);\n\n      // Update both states\n      setNotes(Array.isArray(myNotes) ? myNotes : []);\n      setSharedNotes(Array.isArray(shared) ? shared : []);\n    } catch (err) {\n      console.error('Error loading notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteNote = async noteId => {\n    try {\n      setError(null);\n      await api.deleteNote(noteId);\n      setNotes(notes.filter(note => note.id !== noteId));\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        setSelectedNote(undefined);\n      }\n    } catch (err) {\n      setError('Failed to delete note');\n      console.error(err);\n    }\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      setError(null);\n      if (!user) {\n        throw new Error('User not authenticated');\n      }\n      console.log('Saving note:', noteData); // Debug log\n\n      if (selectedNote) {\n        // Update existing note\n        await api.updateNote(selectedNote.id, {\n          ...noteData,\n          userId: user.id\n        });\n      } else {\n        // Create new note\n        await api.createNote({\n          ...noteData,\n          userId: user.id\n        });\n      }\n\n      // Reload all notes to get the latest state\n      await loadAllNotes();\n      setSelectedNote(undefined);\n    } catch (err) {\n      console.error('Save note error:', err); // Debug log\n      setError('Failed to save note');\n    }\n  };\n  const handleMakePublic = async noteId => {\n    try {\n      setError(null);\n      await api.makeNotePublic(noteId);\n\n      // Reload both regular and shared notes\n      await loadAllNotes();\n\n      // Update the selected note if it was made public\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        const updatedNote = await api.getNotes().then(notes => notes.find(n => n.id === noteId));\n        setSelectedNote(updatedNote);\n      }\n    } catch (err) {\n      setError('Failed to make note public');\n      console.error(err);\n    }\n  };\n  const sortNotes = notesToSort => {\n    return [...notesToSort].sort((a, b) => {\n      switch (sortBy) {\n        case 'date-desc':\n          return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\n        case 'date-asc':\n          return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          return a.category.localeCompare(b.category);\n        default:\n          return 0;\n      }\n    });\n  };\n  const filteredAndSortedNotes = sortNotes(notes.filter(note => {\n    if (!(note !== null && note !== void 0 && note.title)) return false;\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !selectedCategory || note.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  }));\n  const renderSortOptions = () => {\n    const options = [{\n      value: 'date-desc',\n      label: 'Newest First'\n    }, {\n      value: 'date-asc',\n      label: 'Oldest First'\n    }, {\n      value: 'title',\n      label: 'Title'\n    }, {\n      value: 'category',\n      label: 'Category'\n    }];\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this));\n  };\n  const renderCategoryOptions = () => {\n    const categories = Array.from(new Set(notes.map(note => note.category))).filter(category => category);\n    return [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All Categories\"\n    }, \"all\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), ...categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this))];\n  };\n\n  // Add debug logging for filtered notes\n  useEffect(() => {\n    console.log('Current notes:', notes);\n    console.log('Filtered notes:', filteredAndSortedNotes);\n  }, [notes, filteredAndSortedNotes]);\n  useEffect(() => {\n    console.log('Notes state updated:', notes);\n  }, [notes]);\n\n  // Add useEffect to monitor sharedNotes changes\n  useEffect(() => {\n    console.log('Shared notes updated:', sharedNotes);\n  }, [sharedNotes]);\n  const handleLogout = () => {\n    // Clear UI state\n    setSelectedNote(undefined);\n    setSearchTerm('');\n    setSelectedCategory('');\n    setSortBy('date-desc');\n    // Don't clear notes here, they'll be reloaded on next login\n    logout();\n  };\n  const handleShare = noteId => {\n    setShareDialogNoteId(noteId);\n  };\n  const handleShareComplete = async () => {\n    await loadAllNotes(); // Reload notes to update the UI\n    setShareDialogNoteId(null);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notepad+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"auth-container\",\n        children: showRegister ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRegister(false),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRegister(true),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notepad+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search notes...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"category-filter\",\n        children: renderCategoryOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        className: \"sort-select\",\n        children: renderSortOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-panel\",\n          children: /*#__PURE__*/_jsxDEV(NoteEditor, {\n            note: selectedNote,\n            onSave: handleSaveNote,\n            onCancel: () => setSelectedNote(undefined)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-panel\",\n          children: /*#__PURE__*/_jsxDEV(NoteList, {\n            notes: filteredAndSortedNotes,\n            sharedNotes: sharedNotes,\n            selectedNote: selectedNote,\n            onNoteSelect: setSelectedNote,\n            onDeleteNote: handleDeleteNote,\n            onMakePublic: handleMakePublic,\n            onShare: handleShare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), shareDialogNoteId && /*#__PURE__*/_jsxDEV(ShareNoteDialog, {\n      noteId: shareDialogNoteId,\n      onClose: () => setShareDialogNoteId(null),\n      onShare: handleShareComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"EchvcdW/2cnBE3zjqUTYrh+DHvk=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NoteList","NoteEditor","Login","Register","useAuth","api","ShareNoteDialog","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","logout","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","shareDialogNoteId","setShareDialogNoteId","console","log","loadAllNotes","myNotes","shared","Promise","all","getNotes","getSharedNotes","Array","isArray","err","Error","message","handleDeleteNote","noteId","deleteNote","filter","note","id","handleSaveNote","noteData","updateNote","userId","createNote","handleMakePublic","makeNotePublic","updatedNote","then","find","n","sortNotes","notesToSort","sort","a","b","Date","updatedAt","getTime","title","localeCompare","category","filteredAndSortedNotes","matchesSearch","toLowerCase","includes","content","matchesCategory","renderSortOptions","options","value","label","map","option","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCategoryOptions","categories","from","Set","handleLogout","handleShare","handleShareComplete","className","onClick","username","type","placeholder","onChange","e","target","onSave","onCancel","onNoteSelect","onDeleteNote","onMakePublic","onShare","onClose","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note } from './types/Note';\r\nimport { api } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title' | 'category';\r\n\r\nfunction App() {\r\n    const { user, logout } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [shareDialogNoteId, setShareDialogNoteId] = useState<number | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            \r\n            console.log('Loading notes for user:', user);\r\n            \r\n            // Load both regular and shared notes\r\n            const [myNotes, shared] = await Promise.all([\r\n                api.getNotes(),\r\n                api.getSharedNotes()\r\n            ]);\r\n            \r\n            console.log('API Response - myNotes:', myNotes);\r\n            console.log('API Response - shared:', shared);\r\n            \r\n            // Update both states\r\n            setNotes(Array.isArray(myNotes) ? myNotes : []);\r\n            setSharedNotes(Array.isArray(shared) ? shared : []);\r\n\r\n        } catch (err) {\r\n            console.error('Error loading notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            setError(null);\r\n            if (!user) {\r\n                throw new Error('User not authenticated');\r\n            }\r\n\r\n            console.log('Saving note:', noteData); // Debug log\r\n\r\n            if (selectedNote) {\r\n                // Update existing note\r\n                await api.updateNote(selectedNote.id, {\r\n                    ...noteData,\r\n                    userId: user.id\r\n                });\r\n            } else {\r\n                // Create new note\r\n                await api.createNote({\r\n                    ...noteData,\r\n                    userId: user.id\r\n                });\r\n            }\r\n\r\n            // Reload all notes to get the latest state\r\n            await loadAllNotes();\r\n            setSelectedNote(undefined);\r\n        } catch (err) {\r\n            console.error('Save note error:', err); // Debug log\r\n            setError('Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.makeNotePublic(noteId);\r\n            \r\n            // Reload both regular and shared notes\r\n            await loadAllNotes();\r\n            \r\n            // Update the selected note if it was made public\r\n            if (selectedNote?.id === noteId) {\r\n                const updatedNote = await api.getNotes().then(notes => \r\n                    notes.find(n => n.id === noteId)\r\n                );\r\n                setSelectedNote(updatedNote);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to make note public');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notesToSort: Note[]): Note[] => {\r\n        return [...notesToSort].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    return a.category.localeCompare(b.category);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filteredAndSortedNotes = sortNotes(\r\n        notes.filter(note => {\r\n            if (!note?.title) return false;\r\n            \r\n            const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n            const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n            return matchesSearch && matchesCategory;\r\n        })\r\n    );\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredAndSortedNotes);\r\n    }, [notes, filteredAndSortedNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    // Add useEffect to monitor sharedNotes changes\r\n    useEffect(() => {\r\n        console.log('Shared notes updated:', sharedNotes);\r\n    }, [sharedNotes]);\r\n\r\n    const handleLogout = () => {\r\n        // Clear UI state\r\n        setSelectedNote(undefined);\r\n        setSearchTerm('');\r\n        setSelectedCategory('');\r\n        setSortBy('date-desc');\r\n        // Don't clear notes here, they'll be reloaded on next login\r\n        logout();\r\n    };\r\n\r\n    const handleShare = (noteId: number) => {\r\n        setShareDialogNoteId(noteId);\r\n    };\r\n\r\n    const handleShareComplete = async () => {\r\n        await loadAllNotes(); // Reload notes to update the UI\r\n        setShareDialogNoteId(null);\r\n    };\r\n\r\n    if (!user) {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1>Notepad+</h1>\r\n                </header>\r\n                <main className=\"auth-container\">\r\n                    {showRegister ? (\r\n                        <>\r\n                            <Register />\r\n                            <p>\r\n                                Already have an account?{' '}\r\n                                <button onClick={() => setShowRegister(false)}>\r\n                                    Login\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Login />\r\n                            <p>\r\n                                Don't have an account?{' '}\r\n                                <button onClick={() => setShowRegister(true)}>\r\n                                    Register\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Notepad+</h1>\r\n                <div className=\"user-info\">\r\n                    <span>Welcome, {user.username}!</span>\r\n                    <button className=\"logout-button\" onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            \r\n            <div className=\"search-filters\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search notes...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-input\"\r\n                />\r\n                <select\r\n                    value={selectedCategory}\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                    className=\"category-filter\"\r\n                >\r\n                    {renderCategoryOptions()}\r\n                </select>\r\n                <select\r\n                    value={sortBy}\r\n                    onChange={(e) => setSortBy(e.target.value as SortOption)}\r\n                    className=\"sort-select\"\r\n                >\r\n                    {renderSortOptions()}\r\n                </select>\r\n            </div>\r\n\r\n            <main className=\"App-main\">\r\n                {isLoading ? (\r\n                    <div className=\"loading\">Loading...</div>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"left-panel\">\r\n                            <NoteEditor \r\n                                note={selectedNote}\r\n                                onSave={handleSaveNote}\r\n                                onCancel={() => setSelectedNote(undefined)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"right-panel\">\r\n                            <NoteList \r\n                                notes={filteredAndSortedNotes}\r\n                                sharedNotes={sharedNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={setSelectedNote}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </main>\r\n\r\n            {shareDialogNoteId && (\r\n                <ShareNoteDialog\r\n                    noteId={shareDialogNoteId}\r\n                    onClose={() => setShareDialogNoteId(null)}\r\n                    onShare={handleShareComplete}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}