{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{api}from'../services/api';import'./DrivePage.css';import{useNavigate,useLocation}from'react-router-dom';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const DrivePage=()=>{const[files,setFiles]=useState([]);const[folders,setFolders]=useState([]);const[currentFolder,setCurrentFolder]=useState(null);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[showNewFolderDialog,setShowNewFolderDialog]=useState(false);const[newFolderName,setNewFolderName]=useState('');const fileInputRef=useRef(null);const navigate=useNavigate();const location=useLocation();useEffect(()=>{console.log('Current render state:',{currentFolder,filesCount:files.length,foldersCount:folders.length,filesInCurrentFolder:files.filter(f=>f.folderId===(currentFolder===null||currentFolder===void 0?void 0:currentFolder.id)).length,currentFolderId:currentFolder===null||currentFolder===void 0?void 0:currentFolder.id});},[files,folders,currentFolder]);useEffect(()=>{// Load folders first, then handle files based on the URL\nconst loadInitialData=async()=>{try{setIsLoading(true);setError(null);// Clear any previous errors\nconsole.log('Loading folders...');const foldersResponse=await api.getFolders();console.log('Folders response:',foldersResponse);if(!(foldersResponse!==null&&foldersResponse!==void 0&&foldersResponse.data)){throw new Error('Invalid folders response');}setFolders(foldersResponse.data);const folderPath=location.pathname.split('/drive/')[1];if(folderPath){var _foldersResponse$data;const currentFolder=(_foldersResponse$data=foldersResponse.data)===null||_foldersResponse$data===void 0?void 0:_foldersResponse$data.find(f=>f.name===folderPath);if(currentFolder){console.log('Found folder:',currentFolder);setCurrentFolder(currentFolder);const filesData=await api.getFilesInFolder(currentFolder.id);console.log('Files in folder:',filesData);setFiles(filesData);}else{console.log('Folder not found:',folderPath);setError(\"Folder \\\"\".concat(folderPath,\"\\\" not found\"));}}else{console.log('Loading root files');const filesData=await api.getFilesInFolder(null);console.log('Root files:',filesData);setFiles(filesData);}}catch(err){var _err$response,_err$response$data;console.error('Error loading initial data:',err);const errorMessage=(err===null||err===void 0?void 0:(_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||(err===null||err===void 0?void 0:err.message)||'Failed to load drive contents';setError(errorMessage);// Log additional error details\nif(err!==null&&err!==void 0&&err.response){console.error('Response data:',err.response.data);console.error('Response status:',err.response.status);console.error('Response headers:',err.response.headers);}}finally{setIsLoading(false);}};loadInitialData();},[location.pathname]);useEffect(()=>{console.log('Files state changed:',files);console.log('Folders state changed:',folders);},[files,folders]);useEffect(()=>{if(currentFolder){console.log('Current folder:',currentFolder);}},[currentFolder]);const loadFoldersAndFiles=async()=>{try{setIsLoading(true);const[foldersResponse,filesData]=await Promise.all([api.getFolders(),api.getFilesInFolder((currentFolder===null||currentFolder===void 0?void 0:currentFolder.id)||null)]);console.log('Loaded folders:',foldersResponse);console.log('Loaded files:',filesData);setFolders(foldersResponse.data||[]);setFiles(filesData);}catch(err){setError('Failed to load drive contents');console.error('Load error:',err);}finally{setIsLoading(false);}};const handleCreateFolder=async()=>{if(!newFolderName.trim())return;try{setIsLoading(true);const newFolder=await api.createFolder(newFolderName,currentFolder===null||currentFolder===void 0?void 0:currentFolder.id);console.log('New folder created:',newFolder);// Reload the folders to get the updated list\nconst foldersResponse=await api.getFolders();setFolders(foldersResponse.data);setShowNewFolderDialog(false);setNewFolderName('');}catch(err){var _err$response2,_err$response2$data;console.error('Failed to create folder:',err);setError((err===null||err===void 0?void 0:(_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||'Failed to create folder');}finally{setIsLoading(false);}};const handleDeleteFolder=async folderId=>{try{await api.deleteFolder(folderId);setFolders(folders.filter(f=>f.id!==folderId));}catch(err){setError('Failed to delete folder');console.error(err);}};const handleFolderClick=async folder=>{try{setCurrentFolder(folder);navigate(\"/drive/\".concat(folder.name));const filesData=await api.getFilesInFolder(folder.id);setFiles(filesData);}catch(err){console.error('Error loading folder files:',err);setError('Failed to load folder contents');}};const handleNavigateUp=async()=>{try{setCurrentFolder(null);navigate('/drive');const filesData=await api.getFilesInFolder(null);setFiles(filesData);}catch(err){console.error('Error loading root files:',err);setError('Failed to load root contents');}};const handleFileUpload=async event=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(!file)return;try{setIsLoading(true);const response=await api.uploadFile(file);// After upload, reload both folders and files\nconst[foldersResponse,filesData]=await Promise.all([api.getFolders(),api.getFilesInFolder((currentFolder===null||currentFolder===void 0?void 0:currentFolder.id)||null)]);setFolders(foldersResponse.data||[]);setFiles(filesData);}catch(err){setError('Failed to upload file');console.error('Upload error:',err);}finally{setIsLoading(false);if(event.target){event.target.value='';}}};const handleDelete=async fileId=>{try{setIsLoading(true);await api.deleteFile(fileId);setFiles(prevFiles=>prevFiles.filter(f=>f.id!==fileId));}catch(err){var _err$response3,_err$response4;console.error('Delete error:',err);if((err===null||err===void 0?void 0:(_err$response3=err.response)===null||_err$response3===void 0?void 0:_err$response3.status)===404){setError('File not found or already deleted');}else if((err===null||err===void 0?void 0:(_err$response4=err.response)===null||_err$response4===void 0?void 0:_err$response4.status)===401){setError('You do not have permission to delete this file');}else{setError('Failed to delete file');}}finally{setIsLoading(false);}};const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};const formatDate=dateString=>{try{const date=new Date(dateString);if(isNaN(date.getTime())){return'Invalid date';}return date.toLocaleDateString();}catch(error){console.error('Error formatting date:',error);return'Invalid date';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"drive-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drive-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-left\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"breadcrumb-item\",onClick:handleNavigateUp,disabled:!currentFolder,children:\"\\uD83D\\uDCC1 My Files\"}),currentFolder&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"/\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-item current\",children:currentFolder.name})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search files...\"}),/*#__PURE__*/_jsx(\"span\",{className:\"search-icon\",children:\"\\uD83D\\uDD0D\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"upload-button\",onClick:()=>{var _fileInputRef$current;return(_fileInputRef$current=fileInputRef.current)===null||_fileInputRef$current===void 0?void 0:_fileInputRef$current.click();},children:\"Upload\"}),/*#__PURE__*/_jsx(\"button\",{className:\"create-new-button\",onClick:()=>setShowNewFolderDialog(true),children:\"New folder\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"drive-content\",children:[showNewFolderDialog&&/*#__PURE__*/_jsxs(\"div\",{className:\"new-folder-dialog\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newFolderName,onChange:e=>setNewFolderName(e.target.value),placeholder:\"Folder name\",autoFocus:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateFolder,children:\"Create\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowNewFolderDialog(false),children:\"Cancel\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,onChange:handleFileUpload,style:{display:'none'},multiple:true}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"}):folders.length===0&&files.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-drive\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83D\\uDCC1\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Create a folder and upload files\"}),/*#__PURE__*/_jsx(\"button\",{className:\"create-folder-button\",onClick:()=>setShowNewFolderDialog(true),children:\"New folder\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"files-container\",children:[folders.filter(f=>f.parentId===(currentFolder===null||currentFolder===void 0?void 0:currentFolder.id)).map(folder=>/*#__PURE__*/_jsxs(\"div\",{className:\"file-item folder-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-icon\",children:\"\\uD83D\\uDCC1\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-info\",onClick:()=>handleFolderClick(folder),children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-name\",children:folder.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-meta\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Folder\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u2022\"}),/*#__PURE__*/_jsx(\"span\",{children:new Date(folder.createdAt).toLocaleDateString()})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"file-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"action-button\",title:\"Delete\",onClick:()=>handleDeleteFolder(folder.id),children:\"\\uD83D\\uDDD1\\uFE0F\"})})]},\"folder-\".concat(folder.id))),files.filter(f=>{console.log('Filtering file:',{fileId:f.id,fileName:f.name,fileFolderId:f.folderId,currentFolderId:currentFolder===null||currentFolder===void 0?void 0:currentFolder.id,matches:f.folderId===((currentFolder===null||currentFolder===void 0?void 0:currentFolder.id)||null)});return currentFolder?f.folderId===currentFolder.id:f.folderId===null;}).map(file=>{var _file$contentType;return/*#__PURE__*/_jsxs(\"div\",{className:\"file-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-icon\",children:(_file$contentType=file.contentType)!==null&&_file$contentType!==void 0&&_file$contentType.startsWith('image/')?'🖼️':'📄'}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-name\",title:file.name,children:file.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-meta\",children:[/*#__PURE__*/_jsx(\"span\",{children:formatFileSize(file.size)}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u2022\"}),/*#__PURE__*/_jsx(\"span\",{children:formatDate(file.uploadedAt)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-button\",title:\"Download\",children:\"\\u2B07\\uFE0F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button\",title:\"Share\",children:\"\\uD83D\\uDD17\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button\",title:\"Delete\",onClick:()=>handleDelete(file.id),children:\"\\uD83D\\uDDD1\\uFE0F\"})]})]},\"file-\".concat(file.id));})]})]})]});};export default DrivePage;","map":{"version":3,"names":["React","useState","useEffect","useRef","api","useNavigate","useLocation","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DrivePage","files","setFiles","folders","setFolders","currentFolder","setCurrentFolder","isLoading","setIsLoading","error","setError","showNewFolderDialog","setShowNewFolderDialog","newFolderName","setNewFolderName","fileInputRef","navigate","location","console","log","filesCount","length","foldersCount","filesInCurrentFolder","filter","f","folderId","id","currentFolderId","loadInitialData","foldersResponse","getFolders","data","Error","folderPath","pathname","split","_foldersResponse$data","find","name","filesData","getFilesInFolder","concat","err","_err$response","_err$response$data","errorMessage","response","message","status","headers","loadFoldersAndFiles","Promise","all","handleCreateFolder","trim","newFolder","createFolder","_err$response2","_err$response2$data","handleDeleteFolder","deleteFolder","handleFolderClick","folder","handleNavigateUp","handleFileUpload","event","_event$target$files","file","target","uploadFile","value","handleDelete","fileId","deleteFile","prevFiles","_err$response3","_err$response4","formatFileSize","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","formatDate","dateString","date","Date","isNaN","getTime","toLocaleDateString","className","children","onClick","disabled","type","placeholder","_fileInputRef$current","current","click","onChange","e","autoFocus","ref","style","display","multiple","parentId","map","createdAt","title","fileName","fileFolderId","matches","_file$contentType","contentType","startsWith","size","uploadedAt"],"sources":["D:/_master/v5/NotepadPlus/Frontend-React/src/pages/DrivePage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { DriveFile, Folder } from '../types/File';\r\nimport { api } from '../services/api';\r\nimport './DrivePage.css';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst DrivePage: React.FC = () => {\r\n    const [files, setFiles] = useState<DriveFile[]>([]);\r\n    const [folders, setFolders] = useState<Folder[]>([]);\r\n    const [currentFolder, setCurrentFolder] = useState<Folder | null>(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [showNewFolderDialog, setShowNewFolderDialog] = useState(false);\r\n    const [newFolderName, setNewFolderName] = useState('');\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        console.log('Current render state:', {\r\n            currentFolder,\r\n            filesCount: files.length,\r\n            foldersCount: folders.length,\r\n            filesInCurrentFolder: files.filter(f => f.folderId === currentFolder?.id).length,\r\n            currentFolderId: currentFolder?.id\r\n        });\r\n    }, [files, folders, currentFolder]);\r\n\r\n    useEffect(() => {\r\n        // Load folders first, then handle files based on the URL\r\n        const loadInitialData = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                setError(null); // Clear any previous errors\r\n                \r\n                console.log('Loading folders...');\r\n                const foldersResponse = await api.getFolders();\r\n                console.log('Folders response:', foldersResponse);\r\n                \r\n                if (!foldersResponse?.data) {\r\n                    throw new Error('Invalid folders response');\r\n                }\r\n                \r\n                setFolders(foldersResponse.data);\r\n\r\n                const folderPath = location.pathname.split('/drive/')[1];\r\n                if (folderPath) {\r\n                    const currentFolder = foldersResponse.data?.find(f => f.name === folderPath);\r\n                    if (currentFolder) {\r\n                        console.log('Found folder:', currentFolder);\r\n                        setCurrentFolder(currentFolder);\r\n                        const filesData = await api.getFilesInFolder(currentFolder.id);\r\n                        console.log('Files in folder:', filesData);\r\n                        setFiles(filesData);\r\n                    } else {\r\n                        console.log('Folder not found:', folderPath);\r\n                        setError(`Folder \"${folderPath}\" not found`);\r\n                    }\r\n                } else {\r\n                    console.log('Loading root files');\r\n                    const filesData = await api.getFilesInFolder(null);\r\n                    console.log('Root files:', filesData);\r\n                    setFiles(filesData);\r\n                }\r\n            } catch (err: any) {\r\n                console.error('Error loading initial data:', err);\r\n                const errorMessage = err?.response?.data?.message || err?.message || 'Failed to load drive contents';\r\n                setError(errorMessage);\r\n                \r\n                // Log additional error details\r\n                if (err?.response) {\r\n                    console.error('Response data:', err.response.data);\r\n                    console.error('Response status:', err.response.status);\r\n                    console.error('Response headers:', err.response.headers);\r\n                }\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        loadInitialData();\r\n    }, [location.pathname]);\r\n\r\n    useEffect(() => {\r\n        console.log('Files state changed:', files);\r\n        console.log('Folders state changed:', folders);\r\n    }, [files, folders]);\r\n\r\n    useEffect(() => {\r\n        if (currentFolder) {\r\n            console.log('Current folder:', currentFolder);\r\n        }\r\n    }, [currentFolder]);\r\n\r\n    const loadFoldersAndFiles = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const [foldersResponse, filesData] = await Promise.all([\r\n                api.getFolders(),\r\n                api.getFilesInFolder(currentFolder?.id || null)\r\n            ]);\r\n            \r\n            console.log('Loaded folders:', foldersResponse);\r\n            console.log('Loaded files:', filesData);\r\n            \r\n            setFolders(foldersResponse.data || []);\r\n            setFiles(filesData);\r\n        } catch (err) {\r\n            setError('Failed to load drive contents');\r\n            console.error('Load error:', err);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateFolder = async () => {\r\n        if (!newFolderName.trim()) return;\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            const newFolder = await api.createFolder(newFolderName, currentFolder?.id);\r\n            console.log('New folder created:', newFolder);\r\n            \r\n            // Reload the folders to get the updated list\r\n            const foldersResponse = await api.getFolders();\r\n            setFolders(foldersResponse.data);\r\n            \r\n            setShowNewFolderDialog(false);\r\n            setNewFolderName('');\r\n        } catch (err: any) {\r\n            console.error('Failed to create folder:', err);\r\n            setError(err?.response?.data?.message || 'Failed to create folder');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteFolder = async (folderId: number) => {\r\n        try {\r\n            await api.deleteFolder(folderId);\r\n            setFolders(folders.filter(f => f.id !== folderId));\r\n        } catch (err) {\r\n            setError('Failed to delete folder');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleFolderClick = async (folder: Folder) => {\r\n        try {\r\n            setCurrentFolder(folder);\r\n            navigate(`/drive/${folder.name}`);\r\n            const filesData = await api.getFilesInFolder(folder.id);\r\n            setFiles(filesData);\r\n        } catch (err) {\r\n            console.error('Error loading folder files:', err);\r\n            setError('Failed to load folder contents');\r\n        }\r\n    };\r\n\r\n    const handleNavigateUp = async () => {\r\n        try {\r\n            setCurrentFolder(null);\r\n            navigate('/drive');\r\n            const filesData = await api.getFilesInFolder(null);\r\n            setFiles(filesData);\r\n        } catch (err) {\r\n            console.error('Error loading root files:', err);\r\n            setError('Failed to load root contents');\r\n        }\r\n    };\r\n\r\n    const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = event.target.files?.[0];\r\n        if (!file) return;\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await api.uploadFile(file);\r\n            \r\n            // After upload, reload both folders and files\r\n            const [foldersResponse, filesData] = await Promise.all([\r\n                api.getFolders(),\r\n                api.getFilesInFolder(currentFolder?.id || null)\r\n            ]);\r\n            \r\n            setFolders(foldersResponse.data || []);\r\n            setFiles(filesData);\r\n            \r\n        } catch (err) {\r\n            setError('Failed to upload file');\r\n            console.error('Upload error:', err);\r\n        } finally {\r\n            setIsLoading(false);\r\n            if (event.target) {\r\n                event.target.value = '';\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (fileId: number) => {\r\n        try {\r\n            setIsLoading(true);\r\n            await api.deleteFile(fileId);\r\n            setFiles(prevFiles => prevFiles.filter(f => f.id !== fileId));\r\n        } catch (err: any) {\r\n            console.error('Delete error:', err);\r\n            if (err?.response?.status === 404) {\r\n                setError('File not found or already deleted');\r\n            } else if (err?.response?.status === 401) {\r\n                setError('You do not have permission to delete this file');\r\n            } else {\r\n                setError('Failed to delete file');\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const formatFileSize = (bytes: number): string => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n\r\n    const formatDate = (dateString: string | Date): string => {\r\n        try {\r\n            const date = new Date(dateString);\r\n            if (isNaN(date.getTime())) {\r\n                return 'Invalid date';\r\n            }\r\n            return date.toLocaleDateString();\r\n        } catch (error) {\r\n            console.error('Error formatting date:', error);\r\n            return 'Invalid date';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"drive-page\">\r\n            <div className=\"drive-header\">\r\n                <div className=\"header-left\">\r\n                    <div className=\"breadcrumb\">\r\n                        <button \r\n                            className=\"breadcrumb-item\"\r\n                            onClick={handleNavigateUp}\r\n                            disabled={!currentFolder}\r\n                        >\r\n                            📁 My Files\r\n                        </button>\r\n                        {currentFolder && (\r\n                            <>\r\n                                <span className=\"breadcrumb-separator\">/</span>\r\n                                <span className=\"breadcrumb-item current\">\r\n                                    {currentFolder.name}\r\n                                </span>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"header-actions\">\r\n                    <div className=\"search-box\">\r\n                        <input type=\"text\" placeholder=\"Search files...\" />\r\n                        <span className=\"search-icon\">🔍</span>\r\n                    </div>\r\n                    <button \r\n                        className=\"upload-button\"\r\n                        onClick={() => fileInputRef.current?.click()}\r\n                    >\r\n                        Upload\r\n                    </button>\r\n                    <button \r\n                        className=\"create-new-button\"\r\n                        onClick={() => setShowNewFolderDialog(true)}\r\n                    >\r\n                        New folder\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"drive-content\">\r\n                {showNewFolderDialog && (\r\n                    <div className=\"new-folder-dialog\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newFolderName}\r\n                            onChange={(e) => setNewFolderName(e.target.value)}\r\n                            placeholder=\"Folder name\"\r\n                            autoFocus\r\n                        />\r\n                        <button onClick={handleCreateFolder}>Create</button>\r\n                        <button onClick={() => setShowNewFolderDialog(false)}>Cancel</button>\r\n                    </div>\r\n                )}\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    ref={fileInputRef}\r\n                    onChange={handleFileUpload}\r\n                    style={{ display: 'none' }}\r\n                    multiple\r\n                />\r\n\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                \r\n                {isLoading ? (\r\n                    <div className=\"loading\">Loading...</div>\r\n                ) : folders.length === 0 && files.length === 0 ? (\r\n                    <div className=\"empty-drive\">\r\n                        <div className=\"empty-icon\">📁</div>\r\n                        <h3>Create a folder and upload files</h3>\r\n                        <button \r\n                            className=\"create-folder-button\"\r\n                            onClick={() => setShowNewFolderDialog(true)}\r\n                        >\r\n                            New folder\r\n                        </button>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"files-container\">\r\n                        {folders\r\n                            .filter(f => f.parentId === currentFolder?.id)\r\n                            .map(folder => (\r\n                                <div key={`folder-${folder.id}`} className=\"file-item folder-item\">\r\n                                    <div className=\"file-icon\">📁</div>\r\n                                    <div \r\n                                        className=\"file-info\"\r\n                                        onClick={() => handleFolderClick(folder)}\r\n                                    >\r\n                                        <div className=\"file-name\">{folder.name}</div>\r\n                                        <div className=\"file-meta\">\r\n                                            <span>Folder</span>\r\n                                            <span>•</span>\r\n                                            <span>{new Date(folder.createdAt).toLocaleDateString()}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"file-actions\">\r\n                                        <button \r\n                                            className=\"action-button\" \r\n                                            title=\"Delete\"\r\n                                            onClick={() => handleDeleteFolder(folder.id)}\r\n                                        >\r\n                                            🗑️\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n\r\n                        {files\r\n                            .filter(f => {\r\n                                console.log('Filtering file:', {\r\n                                    fileId: f.id,\r\n                                    fileName: f.name,\r\n                                    fileFolderId: f.folderId,\r\n                                    currentFolderId: currentFolder?.id,\r\n                                    matches: f.folderId === (currentFolder?.id || null)\r\n                                });\r\n                                return currentFolder ? f.folderId === currentFolder.id : f.folderId === null;\r\n                            })\r\n                            .map(file => (\r\n                                <div key={`file-${file.id}`} className=\"file-item\">\r\n                                    <div className=\"file-icon\">\r\n                                        {file.contentType?.startsWith('image/') ? '🖼️' : '📄'}\r\n                                    </div>\r\n                                    <div className=\"file-info\">\r\n                                        <div className=\"file-name\" title={file.name}>\r\n                                            {file.name}\r\n                                        </div>\r\n                                        <div className=\"file-meta\">\r\n                                            <span>{formatFileSize(file.size)}</span>\r\n                                            <span>•</span>\r\n                                            <span>{formatDate(file.uploadedAt)}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"file-actions\">\r\n                                        <button className=\"action-button\" title=\"Download\">⬇️</button>\r\n                                        <button className=\"action-button\" title=\"Share\">🔗</button>\r\n                                        <button \r\n                                            className=\"action-button\" \r\n                                            title=\"Delete\" \r\n                                            onClick={() => handleDelete(file.id)}\r\n                                        >\r\n                                            🗑️\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DrivePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}