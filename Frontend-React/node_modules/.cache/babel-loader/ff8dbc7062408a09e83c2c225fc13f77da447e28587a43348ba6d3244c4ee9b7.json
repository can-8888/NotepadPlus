{"ast":null,"code":"export let NoteStatus=/*#__PURE__*/function(NoteStatus){NoteStatus[\"Personal\"]=\"Personal\";// 0\nNoteStatus[\"Shared\"]=\"Shared\";// 1\nNoteStatus[\"Public\"]=\"Public\";// 2\nreturn NoteStatus;}({});// Update the converter function to handle the new owner structure\nexport const convertApiResponseToNote=apiNote=>({id:apiNote.id,title:apiNote.title,content:apiNote.content,category:apiNote.category,createdAt:apiNote.createdAt,updatedAt:apiNote.updatedAt,isPublic:apiNote.isPublic,status:getNoteStatus(apiNote.status),owner:apiNote.owner?{id:apiNote.owner.id,username:apiNote.owner.username,email:apiNote.owner.email,name:apiNote.owner.name,createdAt:apiNote.owner.createdAt}:undefined,userId:apiNote.ownerId});// Helper function to ensure proper status conversion\nexport const getNoteStatus=status=>{if(typeof status==='string'){switch(status.toLowerCase()){case'personal':return NoteStatus.Personal;case'shared':return NoteStatus.Shared;case'public':return NoteStatus.Public;default:return NoteStatus.Personal;}}return status;};","map":{"version":3,"names":["NoteStatus","convertApiResponseToNote","apiNote","id","title","content","category","createdAt","updatedAt","isPublic","status","getNoteStatus","owner","username","email","name","undefined","userId","ownerId","toLowerCase","Personal","Shared","Public"],"sources":["D:/_master/v5/NotepadPlus/Frontend-React/src/types/Note.ts"],"sourcesContent":["import { User } from './Auth';\r\n\r\nexport enum NoteStatus {\r\n    Personal = 'Personal',  // 0\r\n    Shared = 'Shared',     // 1\r\n    Public = 'Public'      // 2\r\n}\r\n\r\nexport interface NoteShare {\r\n    noteId: number;\r\n    userId: number;\r\n    user?: User;\r\n    sharedAt: string;\r\n}\r\n\r\nexport interface Note {\r\n    id: number;\r\n    title: string;\r\n    content: string;\r\n    category?: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    isPublic: boolean;\r\n    status: NoteStatus;\r\n    owner?: User;\r\n    userId: number;\r\n    noteShares?: NoteShare[];\r\n}\r\n\r\nexport interface NoteApiResponse {\r\n    id: number;\r\n    title: string;\r\n    content: string;\r\n    category: string;\r\n    createdAt: string;  // API returns dates as strings\r\n    updatedAt: string;\r\n    isPublic: boolean;\r\n    status: NoteStatus;\r\n    owner: {\r\n        id: number;\r\n        username: string;\r\n        email: string;\r\n        name: string;\r\n        createdAt: string;\r\n    };\r\n    ownerId: number;\r\n}\r\n\r\nexport interface ApiResponse<T> {\r\n    data: T;\r\n}\r\n\r\n// Update the converter function to handle the new owner structure\r\nexport const convertApiResponseToNote = (apiNote: NoteApiResponse): Note => ({\r\n    id: apiNote.id,\r\n    title: apiNote.title,\r\n    content: apiNote.content,\r\n    category: apiNote.category,\r\n    createdAt: apiNote.createdAt,\r\n    updatedAt: apiNote.updatedAt,\r\n    isPublic: apiNote.isPublic,\r\n    status: getNoteStatus(apiNote.status),\r\n    owner: apiNote.owner ? {\r\n        id: apiNote.owner.id,\r\n        username: apiNote.owner.username,\r\n        email: apiNote.owner.email,\r\n        name: apiNote.owner.name,\r\n        createdAt: apiNote.owner.createdAt\r\n    } : undefined,\r\n    userId: apiNote.ownerId\r\n});\r\n\r\n// Helper function to ensure proper status conversion\r\nexport const getNoteStatus = (status: string | NoteStatus): NoteStatus => {\r\n    if (typeof status === 'string') {\r\n        switch (status.toLowerCase()) {\r\n            case 'personal':\r\n                return NoteStatus.Personal;\r\n            case 'shared':\r\n                return NoteStatus.Shared;\r\n            case 'public':\r\n                return NoteStatus.Public;\r\n            default:\r\n                return NoteStatus.Personal;\r\n        }\r\n    }\r\n    return status;\r\n};"],"mappings":"AAEA,UAAY,CAAAA,UAAU,uBAAVA,UAAU,EAAVA,UAAU,wBACM;AADhBA,UAAU,oBAEK;AAFfA,UAAU,oBAGK;AAAA,MAHf,CAAAA,UAAU,OAkDtB;AACA,MAAO,MAAM,CAAAC,wBAAwB,CAAIC,OAAwB,GAAY,CACzEC,EAAE,CAAED,OAAO,CAACC,EAAE,CACdC,KAAK,CAAEF,OAAO,CAACE,KAAK,CACpBC,OAAO,CAAEH,OAAO,CAACG,OAAO,CACxBC,QAAQ,CAAEJ,OAAO,CAACI,QAAQ,CAC1BC,SAAS,CAAEL,OAAO,CAACK,SAAS,CAC5BC,SAAS,CAAEN,OAAO,CAACM,SAAS,CAC5BC,QAAQ,CAAEP,OAAO,CAACO,QAAQ,CAC1BC,MAAM,CAAEC,aAAa,CAACT,OAAO,CAACQ,MAAM,CAAC,CACrCE,KAAK,CAAEV,OAAO,CAACU,KAAK,CAAG,CACnBT,EAAE,CAAED,OAAO,CAACU,KAAK,CAACT,EAAE,CACpBU,QAAQ,CAAEX,OAAO,CAACU,KAAK,CAACC,QAAQ,CAChCC,KAAK,CAAEZ,OAAO,CAACU,KAAK,CAACE,KAAK,CAC1BC,IAAI,CAAEb,OAAO,CAACU,KAAK,CAACG,IAAI,CACxBR,SAAS,CAAEL,OAAO,CAACU,KAAK,CAACL,SAC7B,CAAC,CAAGS,SAAS,CACbC,MAAM,CAAEf,OAAO,CAACgB,OACpB,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAP,aAAa,CAAID,MAA2B,EAAiB,CACtE,GAAI,MAAO,CAAAA,MAAM,GAAK,QAAQ,CAAE,CAC5B,OAAQA,MAAM,CAACS,WAAW,CAAC,CAAC,EACxB,IAAK,UAAU,CACX,MAAO,CAAAnB,UAAU,CAACoB,QAAQ,CAC9B,IAAK,QAAQ,CACT,MAAO,CAAApB,UAAU,CAACqB,MAAM,CAC5B,IAAK,QAAQ,CACT,MAAO,CAAArB,UAAU,CAACsB,MAAM,CAC5B,QACI,MAAO,CAAAtB,UAAU,CAACoB,QAAQ,CAClC,CACJ,CACA,MAAO,CAAAV,MAAM,CACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}