{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\pages\\\\NotesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NoteList from '../components/NoteList';\nimport { api } from '../services/api';\nimport './NotesPage.css';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from '../components/Modal';\nimport NoteEditor from '../components/NoteEditor';\nimport { ShareNoteDialog } from '../components/ShareNoteDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesPage = ({\n  viewType = 'my-notes',\n  isCreating = false\n}) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [isNoteModalOpen, setIsNoteModalOpen] = useState(isCreating);\n  const [shareNoteId, setShareNoteId] = useState(null);\n  const navigate = useNavigate();\n  const handleNoteSelect = note => {\n    setSelectedNote(note);\n    setIsNoteModalOpen(true);\n  };\n  const handleDeleteNote = async id => {\n    try {\n      await api.deleteNote(id);\n      setNotes(notes.filter(note => note.id !== id));\n    } catch (err) {\n      console.error('Error deleting note:', err);\n    }\n  };\n  const handleMakePublic = async id => {\n    try {\n      await api.makeNotePublic(id);\n      // Refresh notes after making public\n      const updatedNotes = await api.getNotes();\n      setNotes(updatedNotes);\n    } catch (err) {\n      console.error('Error making note public:', err);\n    }\n  };\n  const handleShare = async id => {\n    setShareNoteId(id);\n  };\n  const handleShareComplete = async collaboratorId => {\n    try {\n      if (shareNoteId) {\n        await api.shareNote(shareNoteId, collaboratorId);\n        // Refresh notes after sharing\n        const updatedNotes = await api.getNotes();\n        setNotes(updatedNotes);\n        setShareNoteId(null);\n      }\n    } catch (err) {\n      console.error('Error sharing note:', err);\n      setError(err instanceof Error ? err.message : 'Failed to share note');\n    }\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      if (selectedNote) {\n        // Editing existing note\n        const updatedNote = await api.updateNote(selectedNote.id, noteData);\n        setNotes(prevNotes => prevNotes.map(note => note.id === updatedNote.id ? updatedNote : note));\n      } else {\n        // Creating new note\n        const createdNote = await api.createNote(noteData);\n        setNotes(prevNotes => [...prevNotes, createdNote]);\n      }\n      setIsNoteModalOpen(false);\n      setSelectedNote(null);\n      navigate('/notes', {\n        replace: true\n      }); // Use replace to prevent back button issues\n    } catch (err) {\n      console.error('Error saving note:', err);\n      setError(err instanceof Error ? err.message : 'Failed to save note');\n    }\n  };\n  const handleCloseModal = () => {\n    setIsNoteModalOpen(false);\n    setSelectedNote(null);\n    navigate('/notes', {\n      replace: true\n    });\n  };\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        setIsLoading(true);\n        let fetchedNotes;\n        switch (viewType) {\n          case 'shared':\n            fetchedNotes = await api.getSharedNotes();\n            break;\n          case 'public':\n            fetchedNotes = await api.getPublicNotes();\n            break;\n          default:\n            fetchedNotes = await api.getNotes();\n        }\n        setNotes(fetchedNotes);\n      } catch (err) {\n        setError('Failed to fetch notes');\n        console.error('Error fetching notes:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchNotes();\n  }, [viewType]);\n\n  // Get unique categories using Object.keys and reduce\n  const categories = notes.reduce((acc, note) => {\n    if (note.category) {\n      acc[note.category] = true;\n    }\n    return acc;\n  }, {});\n  const uniqueCategories = Object.keys(categories);\n\n  // Filter and sort notes\n  const filteredNotes = notes.filter(note => {\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !selectedCategory || note.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: viewType === 'shared' ? 'Shared Notes' : viewType === 'public' ? 'Public Notes' : 'My Notes'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), isNoteModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isNoteModalOpen,\n      title: selectedNote ? \"Edit Note\" : \"Create New Note\",\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(NoteEditor, {\n        note: selectedNote || undefined,\n        onSave: handleSaveNote,\n        onCancel: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this), shareNoteId && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: true,\n      title: \"Share Note\",\n      onClose: () => setShareNoteId(null),\n      children: /*#__PURE__*/_jsxDEV(ShareNoteDialog, {\n        noteId: shareNoteId,\n        onShare: handleShareComplete,\n        onClose: () => setShareNoteId(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search notes...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"category-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), uniqueCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        className: \"sort-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date-desc\",\n          children: \"Newest First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date-asc\",\n          children: \"Oldest First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"category\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: filteredNotes,\n        isLoading: isLoading,\n        error: error,\n        onNoteSelect: handleNoteSelect,\n        onDeleteNote: handleDeleteNote,\n        onMakePublic: handleMakePublic,\n        onShare: handleShare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(NotesPage, \"NP+r1+xDGXhdbPk3HxfRbk+0QFY=\", false, function () {\n  return [useNavigate];\n});\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useEffect","useState","NoteList","api","useNavigate","Modal","NoteEditor","ShareNoteDialog","jsxDEV","_jsxDEV","NotesPage","viewType","isCreating","_s","notes","setNotes","isLoading","setIsLoading","error","setError","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","selectedNote","setSelectedNote","isNoteModalOpen","setIsNoteModalOpen","shareNoteId","setShareNoteId","navigate","handleNoteSelect","note","handleDeleteNote","id","deleteNote","filter","err","console","handleMakePublic","makeNotePublic","updatedNotes","getNotes","handleShare","handleShareComplete","collaboratorId","shareNote","Error","message","handleSaveNote","noteData","updatedNote","updateNote","prevNotes","map","createdNote","createNote","replace","handleCloseModal","fetchNotes","fetchedNotes","getSharedNotes","getPublicNotes","categories","reduce","acc","category","uniqueCategories","Object","keys","filteredNotes","matchesSearch","title","toLowerCase","includes","content","matchesCategory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","undefined","onSave","onCancel","noteId","onShare","type","placeholder","value","onChange","e","target","onNoteSelect","onDeleteNote","onMakePublic","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/pages/NotesPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NoteList from '../components/NoteList';\r\nimport { Note } from '../types/Note';\r\nimport { api } from '../services/api';\r\nimport './NotesPage.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from '../components/Modal';\r\nimport NoteEditor from '../components/NoteEditor';\r\nimport { ShareNoteDialog } from '../components/ShareNoteDialog';\r\n\r\ninterface NotesPageProps {\r\n    viewType?: 'my-notes' | 'shared' | 'public';\r\n    isCreating?: boolean;\r\n}\r\n\r\nconst NotesPage: React.FC<NotesPageProps> = ({ viewType = 'my-notes', isCreating = false }) => {\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [sortBy, setSortBy] = useState('date-desc');\r\n    const [selectedNote, setSelectedNote] = useState<Note | null>(null);\r\n    const [isNoteModalOpen, setIsNoteModalOpen] = useState(isCreating);\r\n    const [shareNoteId, setShareNoteId] = useState<number | null>(null);\r\n    const navigate = useNavigate();\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        setSelectedNote(note);\r\n        setIsNoteModalOpen(true);\r\n    };\r\n\r\n    const handleDeleteNote = async (id: number) => {\r\n        try {\r\n            await api.deleteNote(id);\r\n            setNotes(notes.filter(note => note.id !== id));\r\n        } catch (err) {\r\n            console.error('Error deleting note:', err);\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (id: number) => {\r\n        try {\r\n            await api.makeNotePublic(id);\r\n            // Refresh notes after making public\r\n            const updatedNotes = await api.getNotes();\r\n            setNotes(updatedNotes);\r\n        } catch (err) {\r\n            console.error('Error making note public:', err);\r\n        }\r\n    };\r\n\r\n    const handleShare = async (id: number) => {\r\n        setShareNoteId(id);\r\n    };\r\n\r\n    const handleShareComplete = async (collaboratorId: number) => {\r\n        try {\r\n            if (shareNoteId) {\r\n                await api.shareNote(shareNoteId, collaboratorId);\r\n                // Refresh notes after sharing\r\n                const updatedNotes = await api.getNotes();\r\n                setNotes(updatedNotes);\r\n                setShareNoteId(null);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error sharing note:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to share note');\r\n        }\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            if (selectedNote) {\r\n                // Editing existing note\r\n                const updatedNote = await api.updateNote(selectedNote.id, noteData);\r\n                setNotes(prevNotes => \r\n                    prevNotes.map(note => \r\n                        note.id === updatedNote.id ? updatedNote : note\r\n                    )\r\n                );\r\n            } else {\r\n                // Creating new note\r\n                const createdNote = await api.createNote(noteData);\r\n                setNotes(prevNotes => [...prevNotes, createdNote]);\r\n            }\r\n            \r\n            setIsNoteModalOpen(false);\r\n            setSelectedNote(null);\r\n            navigate('/notes', { replace: true }); // Use replace to prevent back button issues\r\n        } catch (err) {\r\n            console.error('Error saving note:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setIsNoteModalOpen(false);\r\n        setSelectedNote(null);\r\n        navigate('/notes', { replace: true });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchNotes = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                let fetchedNotes;\r\n                switch (viewType) {\r\n                    case 'shared':\r\n                        fetchedNotes = await api.getSharedNotes();\r\n                        break;\r\n                    case 'public':\r\n                        fetchedNotes = await api.getPublicNotes();\r\n                        break;\r\n                    default:\r\n                        fetchedNotes = await api.getNotes();\r\n                }\r\n                setNotes(fetchedNotes);\r\n            } catch (err) {\r\n                setError('Failed to fetch notes');\r\n                console.error('Error fetching notes:', err);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchNotes();\r\n    }, [viewType]);\r\n\r\n    // Get unique categories using Object.keys and reduce\r\n    const categories = notes\r\n        .reduce((acc: { [key: string]: boolean }, note) => {\r\n            if (note.category) {\r\n                acc[note.category] = true;\r\n            }\r\n            return acc;\r\n        }, {});\r\n    const uniqueCategories = Object.keys(categories);\r\n\r\n    // Filter and sort notes\r\n    const filteredNotes = notes.filter(note => {\r\n        const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                            note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n        const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n        return matchesSearch && matchesCategory;\r\n    });\r\n\r\n    return (\r\n        <div className=\"notes-page\">\r\n            <h1>{viewType === 'shared' ? 'Shared Notes' : viewType === 'public' ? 'Public Notes' : 'My Notes'}</h1>\r\n            {isNoteModalOpen && (\r\n                <Modal \r\n                    isOpen={isNoteModalOpen}\r\n                    title={selectedNote ? \"Edit Note\" : \"Create New Note\"}\r\n                    onClose={handleCloseModal}\r\n                >\r\n                    <NoteEditor\r\n                        note={selectedNote || undefined}\r\n                        onSave={handleSaveNote}\r\n                        onCancel={handleCloseModal}\r\n                    />\r\n                </Modal>\r\n            )}\r\n            {shareNoteId && (\r\n                <Modal\r\n                    isOpen={true}\r\n                    title=\"Share Note\"\r\n                    onClose={() => setShareNoteId(null)}\r\n                >\r\n                    <ShareNoteDialog\r\n                        noteId={shareNoteId}\r\n                        onShare={handleShareComplete}\r\n                        onClose={() => setShareNoteId(null)}\r\n                    />\r\n                </Modal>\r\n            )}\r\n            <div className=\"search-filters\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search notes...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-input\"\r\n                />\r\n                <select\r\n                    value={selectedCategory}\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                    className=\"category-filter\"\r\n                >\r\n                    <option value=\"\">All Categories</option>\r\n                    {uniqueCategories.map(category => (\r\n                        <option key={category} value={category}>\r\n                            {category}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select\r\n                    value={sortBy}\r\n                    onChange={(e) => setSortBy(e.target.value)}\r\n                    className=\"sort-select\"\r\n                >\r\n                    <option value=\"date-desc\">Newest First</option>\r\n                    <option value=\"date-asc\">Oldest First</option>\r\n                    <option value=\"title\">Title</option>\r\n                    <option value=\"category\">Category</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"notes-container\">\r\n                <NoteList \r\n                    notes={filteredNotes}\r\n                    isLoading={isLoading}\r\n                    error={error}\r\n                    onNoteSelect={handleNoteSelect}\r\n                    onDeleteNote={handleDeleteNote}\r\n                    onMakePublic={handleMakePublic}\r\n                    onShare={handleShare}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}