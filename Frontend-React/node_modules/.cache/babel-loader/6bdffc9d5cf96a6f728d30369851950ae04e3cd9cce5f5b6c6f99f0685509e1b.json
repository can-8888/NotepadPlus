{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\components\\\\NoteEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { signalRService } from '../services/signalR';\nimport './NoteEditor.css'; // Make sure this is the exact path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteEditor = ({\n  note,\n  onSave,\n  onCancel\n}) => {\n  _s();\n  const [title, setTitle] = React.useState('');\n  const [content, setContent] = React.useState('');\n  const [category, setCategory] = React.useState('');\n  const [isSaving, setIsSaving] = React.useState(false);\n  const [collaborators, setCollaborators] = React.useState([]);\n  const contentRef = useRef(null);\n  const lastUpdateRef = useRef(0);\n  const updateTimeoutRef = useRef();\n  const typingTimeoutRef = useRef();\n  const [undoStack, setUndoStack] = useState([]);\n  const [redoStack, setRedoStack] = useState([]);\n  const lastSavedRef = useRef('');\n  const autoSaveTimeoutRef = useRef();\n  useEffect(() => {\n    if (note) {\n      // Editing existing note\n      setTitle(note.title);\n      setContent(note.content);\n      setCategory(note.category);\n\n      // Join the note's SignalR group\n      signalRService.joinNote(note.id);\n\n      // Listen for updates from other users\n      signalRService.onNoteUpdated((noteId, updatedContent) => {\n        if (noteId === note.id) {\n          setContent(updatedContent);\n        }\n      });\n\n      // Enhanced collaborator tracking\n      signalRService.onCollaboratorJoined(username => {\n        setCollaborators(prev => [...prev, {\n          username,\n          isTyping: false\n        }]);\n      });\n      signalRService.onCollaboratorLeft(username => {\n        setCollaborators(prev => prev.filter(c => c.username !== username));\n      });\n\n      // Typing indicators\n      signalRService.onUserStartedTyping(username => {\n        setCollaborators(prev => prev.map(c => c.username === username ? {\n          ...c,\n          isTyping: true\n        } : c));\n      });\n      signalRService.onUserStoppedTyping(username => {\n        setCollaborators(prev => prev.map(c => c.username === username ? {\n          ...c,\n          isTyping: false\n        } : c));\n      });\n\n      // Cursor tracking\n      signalRService.onCursorMoved((username, position) => {\n        setCollaborators(prev => prev.map(c => c.username === username ? {\n          ...c,\n          cursorPosition: position\n        } : c));\n        showCollaboratorCursor(username, position);\n      });\n    } else {\n      // Creating new note\n      setTitle('');\n      setContent('');\n      setCategory('');\n    }\n    return () => {\n      if (note) {\n        signalRService.leaveNote(note.id);\n        signalRService.removeAllHandlers(); // Clean up event handlers\n      }\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, [note === null || note === void 0 ? void 0 : note.id]);\n  const showCollaboratorCursor = (username, position) => {\n    var _contentRef$current$p;\n    if (!contentRef.current) return;\n    const existingCursor = document.querySelector(`.collaborator-cursor-${username}`);\n    existingCursor === null || existingCursor === void 0 ? void 0 : existingCursor.remove();\n    const cursor = document.createElement('div');\n    cursor.className = `collaborator-cursor collaborator-cursor-${username}`;\n    cursor.setAttribute('data-username', username);\n    cursor.style.color = getColorForUsername(username);\n    const {\n      top,\n      left\n    } = calculateCursorPosition(position);\n    cursor.style.top = `${top}px`;\n    cursor.style.left = `${left}px`;\n    (_contentRef$current$p = contentRef.current.parentElement) === null || _contentRef$current$p === void 0 ? void 0 : _contentRef$current$p.appendChild(cursor);\n    setTimeout(() => cursor.remove(), 2000);\n  };\n  const calculateCursorPosition = position => {\n    if (!contentRef.current) return {\n      top: 0,\n      left: 0\n    };\n    const textArea = contentRef.current;\n    const textBeforeCursor = content.substring(0, position);\n    const lines = textBeforeCursor.split('\\n');\n    const lineHeight = 20; // Approximate line height\n    const charWidth = 8; // Approximate character width\n\n    return {\n      top: (lines.length - 1) * lineHeight,\n      left: lines[lines.length - 1].length * charWidth\n    };\n  };\n  const getColorForUsername = username => {\n    const colors = ['#2196f3', '#4caf50', '#f44336', '#ff9800', '#9c27b0'];\n    let hash = 0;\n    for (let i = 0; i < username.length; i++) {\n      hash = username.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return colors[Math.abs(hash) % colors.length];\n  };\n  const handleContentChange = e => {\n    const newContent = e.target.value;\n    setContent(newContent);\n\n    // Notify typing started\n    if (note) {\n      signalRService.notifyTypingStarted(note.id);\n\n      // Clear existing timeout\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n\n      // Set new timeout to notify typing stopped\n      typingTimeoutRef.current = setTimeout(() => {\n        if (note) {\n          signalRService.notifyTypingStopped(note.id);\n        }\n      }, 1000);\n\n      // Throttle content updates\n      const now = Date.now();\n      if (now - lastUpdateRef.current > 500) {\n        signalRService.updateNote(note.id, newContent);\n        lastUpdateRef.current = now;\n      } else {\n        if (updateTimeoutRef.current) {\n          clearTimeout(updateTimeoutRef.current);\n        }\n        updateTimeoutRef.current = setTimeout(() => {\n          signalRService.updateNote(note.id, newContent);\n          lastUpdateRef.current = Date.now();\n        }, 500);\n      }\n    }\n  };\n  const updateCursorPosition = () => {\n    if (!note || !contentRef.current) return;\n    const textarea = contentRef.current;\n    const cursorPosition = textarea.selectionStart;\n    signalRService.updateCursorPosition(note.id, cursorPosition);\n  };\n  const handleMouseMove = e => {\n    updateCursorPosition();\n  };\n  const handleKeyUp = e => {\n    updateCursorPosition();\n  };\n  const handleSave = async () => {\n    try {\n      setIsSaving(true);\n      await onSave({\n        ...(note || {}),\n        // Spread existing note if editing, empty object if creating\n        title,\n        content,\n        category\n      });\n      if (!note) {\n        // Clear form after creating new note\n        setTitle('');\n        setContent('');\n        setCategory('');\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Add selection tracking\n  const handleSelectionChange = () => {\n    if (!note || !contentRef.current) return;\n    const textarea = contentRef.current;\n    const selection = {\n      start: textarea.selectionStart,\n      end: textarea.selectionEnd\n    };\n    if (selection.start !== selection.end) {\n      signalRService.updateSelection(note.id, selection);\n    }\n  };\n\n  // Add undo/redo handling\n  const addToHistory = content => {\n    if (!contentRef.current) return;\n    setUndoStack(prev => [...prev, {\n      content,\n      cursorPosition: contentRef.current.selectionStart\n    }]);\n    setRedoStack([]);\n  };\n  const undo = () => {\n    var _contentRef$current$s, _contentRef$current;\n    if (undoStack.length === 0) return;\n    const current = {\n      content,\n      cursorPosition: (_contentRef$current$s = (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.selectionStart) !== null && _contentRef$current$s !== void 0 ? _contentRef$current$s : 0\n    };\n    const previous = undoStack[undoStack.length - 1];\n    setRedoStack(prev => [...prev, current]);\n    setUndoStack(prev => prev.slice(0, -1));\n    setContent(previous.content);\n    if (contentRef.current) {\n      contentRef.current.selectionStart = previous.cursorPosition;\n      contentRef.current.selectionEnd = previous.cursorPosition;\n    }\n    if (note) {\n      signalRService.updateNote(note.id, previous.content);\n    }\n  };\n  const redo = () => {\n    var _contentRef$current$s2, _contentRef$current2;\n    if (redoStack.length === 0) return;\n    const current = {\n      content,\n      cursorPosition: (_contentRef$current$s2 = (_contentRef$current2 = contentRef.current) === null || _contentRef$current2 === void 0 ? void 0 : _contentRef$current2.selectionStart) !== null && _contentRef$current$s2 !== void 0 ? _contentRef$current$s2 : 0\n    };\n    const next = redoStack[redoStack.length - 1];\n    setUndoStack(prev => [...prev, current]);\n    setRedoStack(prev => prev.slice(0, -1));\n    setContent(next.content);\n    if (contentRef.current) {\n      contentRef.current.selectionStart = next.cursorPosition;\n      contentRef.current.selectionEnd = next.cursorPosition;\n    }\n    if (note) {\n      signalRService.updateNote(note.id, next.content);\n    }\n  };\n\n  // Add auto-save functionality\n  useEffect(() => {\n    if (note && content !== lastSavedRef.current) {\n      if (autoSaveTimeoutRef.current) {\n        clearTimeout(autoSaveTimeoutRef.current);\n      }\n      autoSaveTimeoutRef.current = setTimeout(() => {\n        handleSave();\n        lastSavedRef.current = content;\n      }, 3000); // Auto-save after 3 seconds of no changes\n    }\n    return () => {\n      if (autoSaveTimeoutRef.current) {\n        clearTimeout(autoSaveTimeoutRef.current);\n      }\n    };\n  }, [content, note]);\n\n  // Add keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if ((e.ctrlKey || e.metaKey) && e.key === 'z') {\n        e.preventDefault();\n        if (e.shiftKey) {\n          redo();\n        } else {\n          undo();\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [undo, redo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: note ? 'Edit Note' : 'Create Note'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this), collaborators.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collaborators\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Currently editing: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }, this), collaborators.map(collaborator => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `collaborator-badge ${collaborator.isTyping ? 'typing' : ''}`,\n        style: {\n          backgroundColor: getColorForUsername(collaborator.username)\n        },\n        children: [collaborator.username, collaborator.isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"typing-indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 55\n        }, this)]\n      }, collaborator.username, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Category\",\n      value: category,\n      onChange: e => setCategory(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undo,\n        disabled: undoStack.length === 0,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: redo,\n        disabled: redoStack.length === 0,\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: contentRef,\n      placeholder: \"Note content...\",\n      value: content,\n      onChange: handleContentChange,\n      onClick: handleMouseMove,\n      onKeyUp: handleKeyUp,\n      onSelect: handleSelectionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        disabled: isSaving,\n        children: isSaving ? 'Saving...' : note ? 'Save' : 'Create'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteEditor, \"CwJRsXl7WH3/8+nNxncVCv7qnRU=\");\n_c = NoteEditor;\nexport default NoteEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","signalRService","jsxDEV","_jsxDEV","NoteEditor","note","onSave","onCancel","_s","title","setTitle","content","setContent","category","setCategory","isSaving","setIsSaving","collaborators","setCollaborators","contentRef","lastUpdateRef","updateTimeoutRef","typingTimeoutRef","undoStack","setUndoStack","redoStack","setRedoStack","lastSavedRef","autoSaveTimeoutRef","joinNote","id","onNoteUpdated","noteId","updatedContent","onCollaboratorJoined","username","prev","isTyping","onCollaboratorLeft","filter","c","onUserStartedTyping","map","onUserStoppedTyping","onCursorMoved","position","cursorPosition","showCollaboratorCursor","leaveNote","removeAllHandlers","current","clearTimeout","_contentRef$current$p","existingCursor","document","querySelector","remove","cursor","createElement","className","setAttribute","style","color","getColorForUsername","top","left","calculateCursorPosition","parentElement","appendChild","setTimeout","textArea","textBeforeCursor","substring","lines","split","lineHeight","charWidth","length","colors","hash","i","charCodeAt","Math","abs","handleContentChange","e","newContent","target","value","notifyTypingStarted","notifyTypingStopped","now","Date","updateNote","updateCursorPosition","textarea","selectionStart","handleMouseMove","handleKeyUp","handleSave","handleSelectionChange","selection","start","end","selectionEnd","updateSelection","addToHistory","undo","_contentRef$current$s","_contentRef$current","previous","slice","redo","_contentRef$current$s2","_contentRef$current2","next","handleKeyDown","ctrlKey","metaKey","key","preventDefault","shiftKey","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","collaborator","backgroundColor","type","placeholder","onChange","onClick","disabled","ref","onKeyUp","onSelect","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/components/NoteEditor.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Note } from '../types/Note';\r\nimport { signalRService } from '../services/signalR';\r\nimport './NoteEditor.css';  // Make sure this is the exact path\r\n\r\ninterface NoteEditorProps {\r\n    note?: Note;\r\n    onSave: (note: Partial<Note>) => Promise<void>;\r\n    onCancel: () => void;\r\n}\r\n\r\ninterface Selection {\r\n    start: number;\r\n    end: number;\r\n}\r\n\r\ninterface CollaboratorState {\r\n    username: string;\r\n    isTyping: boolean;\r\n    cursorPosition?: number;\r\n    selection?: Selection;\r\n    color: string;\r\n}\r\n\r\ninterface HistoryEntry {\r\n    content: string;\r\n    cursorPosition: number;\r\n}\r\n\r\nconst NoteEditor: React.FC<NoteEditorProps> = ({ note, onSave, onCancel }) => {\r\n    const [title, setTitle] = React.useState('');\r\n    const [content, setContent] = React.useState('');\r\n    const [category, setCategory] = React.useState('');\r\n    const [isSaving, setIsSaving] = React.useState(false);\r\n    const [collaborators, setCollaborators] = React.useState<CollaboratorState[]>([]);\r\n    const contentRef = useRef<HTMLTextAreaElement>(null);\r\n    const lastUpdateRef = useRef<number>(0);\r\n    const updateTimeoutRef = useRef<NodeJS.Timeout>();\r\n    const typingTimeoutRef = useRef<NodeJS.Timeout>();\r\n    const [undoStack, setUndoStack] = useState<HistoryEntry[]>([]);\r\n    const [redoStack, setRedoStack] = useState<HistoryEntry[]>([]);\r\n    const lastSavedRef = useRef<string>('');\r\n    const autoSaveTimeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        if (note) {\r\n            // Editing existing note\r\n            setTitle(note.title);\r\n            setContent(note.content);\r\n            setCategory(note.category);\r\n            \r\n            // Join the note's SignalR group\r\n            signalRService.joinNote(note.id);\r\n\r\n            // Listen for updates from other users\r\n            signalRService.onNoteUpdated((noteId, updatedContent) => {\r\n                if (noteId === note.id) {\r\n                    setContent(updatedContent);\r\n                }\r\n            });\r\n\r\n            // Enhanced collaborator tracking\r\n            signalRService.onCollaboratorJoined((username) => {\r\n                setCollaborators(prev => [...prev, { username, isTyping: false }]);\r\n            });\r\n\r\n            signalRService.onCollaboratorLeft((username) => {\r\n                setCollaborators(prev => prev.filter(c => c.username !== username));\r\n            });\r\n\r\n            // Typing indicators\r\n            signalRService.onUserStartedTyping((username) => {\r\n                setCollaborators(prev => \r\n                    prev.map(c => c.username === username ? { ...c, isTyping: true } : c)\r\n                );\r\n            });\r\n\r\n            signalRService.onUserStoppedTyping((username) => {\r\n                setCollaborators(prev => \r\n                    prev.map(c => c.username === username ? { ...c, isTyping: false } : c)\r\n                );\r\n            });\r\n\r\n            // Cursor tracking\r\n            signalRService.onCursorMoved((username, position) => {\r\n                setCollaborators(prev => \r\n                    prev.map(c => c.username === username ? { ...c, cursorPosition: position } : c)\r\n                );\r\n                showCollaboratorCursor(username, position);\r\n            });\r\n        } else {\r\n            // Creating new note\r\n            setTitle('');\r\n            setContent('');\r\n            setCategory('');\r\n        }\r\n\r\n        return () => {\r\n            if (note) {\r\n                signalRService.leaveNote(note.id);\r\n                signalRService.removeAllHandlers(); // Clean up event handlers\r\n            }\r\n            if (typingTimeoutRef.current) {\r\n                clearTimeout(typingTimeoutRef.current);\r\n            }\r\n        };\r\n    }, [note?.id]);\r\n\r\n    const showCollaboratorCursor = (username: string, position: number) => {\r\n        if (!contentRef.current) return;\r\n\r\n        const existingCursor = document.querySelector(`.collaborator-cursor-${username}`);\r\n        existingCursor?.remove();\r\n\r\n        const cursor = document.createElement('div');\r\n        cursor.className = `collaborator-cursor collaborator-cursor-${username}`;\r\n        cursor.setAttribute('data-username', username);\r\n        cursor.style.color = getColorForUsername(username);\r\n\r\n        const { top, left } = calculateCursorPosition(position);\r\n        cursor.style.top = `${top}px`;\r\n        cursor.style.left = `${left}px`;\r\n\r\n        contentRef.current.parentElement?.appendChild(cursor);\r\n        setTimeout(() => cursor.remove(), 2000);\r\n    };\r\n\r\n    const calculateCursorPosition = (position: number) => {\r\n        if (!contentRef.current) return { top: 0, left: 0 };\r\n\r\n        const textArea = contentRef.current;\r\n        const textBeforeCursor = content.substring(0, position);\r\n        const lines = textBeforeCursor.split('\\n');\r\n        const lineHeight = 20; // Approximate line height\r\n        const charWidth = 8; // Approximate character width\r\n\r\n        return {\r\n            top: (lines.length - 1) * lineHeight,\r\n            left: lines[lines.length - 1].length * charWidth\r\n        };\r\n    };\r\n\r\n    const getColorForUsername = (username: string) => {\r\n        const colors = ['#2196f3', '#4caf50', '#f44336', '#ff9800', '#9c27b0'];\r\n        let hash = 0;\r\n        for (let i = 0; i < username.length; i++) {\r\n            hash = username.charCodeAt(i) + ((hash << 5) - hash);\r\n        }\r\n        return colors[Math.abs(hash) % colors.length];\r\n    };\r\n\r\n    const handleContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newContent = e.target.value;\r\n        setContent(newContent);\r\n\r\n        // Notify typing started\r\n        if (note) {\r\n            signalRService.notifyTypingStarted(note.id);\r\n            \r\n            // Clear existing timeout\r\n            if (typingTimeoutRef.current) {\r\n                clearTimeout(typingTimeoutRef.current);\r\n            }\r\n\r\n            // Set new timeout to notify typing stopped\r\n            typingTimeoutRef.current = setTimeout(() => {\r\n                if (note) {\r\n                    signalRService.notifyTypingStopped(note.id);\r\n                }\r\n            }, 1000);\r\n\r\n            // Throttle content updates\r\n            const now = Date.now();\r\n            if (now - lastUpdateRef.current > 500) {\r\n                signalRService.updateNote(note.id, newContent);\r\n                lastUpdateRef.current = now;\r\n            } else {\r\n                if (updateTimeoutRef.current) {\r\n                    clearTimeout(updateTimeoutRef.current);\r\n                }\r\n                updateTimeoutRef.current = setTimeout(() => {\r\n                    signalRService.updateNote(note.id, newContent);\r\n                    lastUpdateRef.current = Date.now();\r\n                }, 500);\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateCursorPosition = () => {\r\n        if (!note || !contentRef.current) return;\r\n        const textarea = contentRef.current;\r\n        const cursorPosition = textarea.selectionStart;\r\n        signalRService.updateCursorPosition(note.id, cursorPosition);\r\n    };\r\n\r\n    const handleMouseMove = (e: React.MouseEvent<HTMLTextAreaElement>) => {\r\n        updateCursorPosition();\r\n    };\r\n\r\n    const handleKeyUp = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n        updateCursorPosition();\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        try {\r\n            setIsSaving(true);\r\n            await onSave({\r\n                ...(note || {}), // Spread existing note if editing, empty object if creating\r\n                title,\r\n                content,\r\n                category\r\n            });\r\n            if (!note) {\r\n                // Clear form after creating new note\r\n                setTitle('');\r\n                setContent('');\r\n                setCategory('');\r\n            }\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    // Add selection tracking\r\n    const handleSelectionChange = () => {\r\n        if (!note || !contentRef.current) return;\r\n        \r\n        const textarea = contentRef.current;\r\n        const selection = {\r\n            start: textarea.selectionStart,\r\n            end: textarea.selectionEnd\r\n        };\r\n\r\n        if (selection.start !== selection.end) {\r\n            signalRService.updateSelection(note.id, selection);\r\n        }\r\n    };\r\n\r\n    // Add undo/redo handling\r\n    const addToHistory = (content: string) => {\r\n        if (!contentRef.current) return;\r\n\r\n        setUndoStack(prev => [...prev, {\r\n            content,\r\n            cursorPosition: contentRef.current.selectionStart\r\n        }]);\r\n        setRedoStack([]);\r\n    };\r\n\r\n    const undo = () => {\r\n        if (undoStack.length === 0) return;\r\n\r\n        const current = {\r\n            content,\r\n            cursorPosition: contentRef.current?.selectionStart ?? 0\r\n        };\r\n        const previous = undoStack[undoStack.length - 1];\r\n\r\n        setRedoStack(prev => [...prev, current]);\r\n        setUndoStack(prev => prev.slice(0, -1));\r\n        setContent(previous.content);\r\n\r\n        if (contentRef.current) {\r\n            contentRef.current.selectionStart = previous.cursorPosition;\r\n            contentRef.current.selectionEnd = previous.cursorPosition;\r\n        }\r\n\r\n        if (note) {\r\n            signalRService.updateNote(note.id, previous.content);\r\n        }\r\n    };\r\n\r\n    const redo = () => {\r\n        if (redoStack.length === 0) return;\r\n\r\n        const current = {\r\n            content,\r\n            cursorPosition: contentRef.current?.selectionStart ?? 0\r\n        };\r\n        const next = redoStack[redoStack.length - 1];\r\n\r\n        setUndoStack(prev => [...prev, current]);\r\n        setRedoStack(prev => prev.slice(0, -1));\r\n        setContent(next.content);\r\n\r\n        if (contentRef.current) {\r\n            contentRef.current.selectionStart = next.cursorPosition;\r\n            contentRef.current.selectionEnd = next.cursorPosition;\r\n        }\r\n\r\n        if (note) {\r\n            signalRService.updateNote(note.id, next.content);\r\n        }\r\n    };\r\n\r\n    // Add auto-save functionality\r\n    useEffect(() => {\r\n        if (note && content !== lastSavedRef.current) {\r\n            if (autoSaveTimeoutRef.current) {\r\n                clearTimeout(autoSaveTimeoutRef.current);\r\n            }\r\n\r\n            autoSaveTimeoutRef.current = setTimeout(() => {\r\n                handleSave();\r\n                lastSavedRef.current = content;\r\n            }, 3000); // Auto-save after 3 seconds of no changes\r\n        }\r\n\r\n        return () => {\r\n            if (autoSaveTimeoutRef.current) {\r\n                clearTimeout(autoSaveTimeoutRef.current);\r\n            }\r\n        };\r\n    }, [content, note]);\r\n\r\n    // Add keyboard shortcuts\r\n    useEffect(() => {\r\n        const handleKeyDown = (e: KeyboardEvent) => {\r\n            if ((e.ctrlKey || e.metaKey) && e.key === 'z') {\r\n                e.preventDefault();\r\n                if (e.shiftKey) {\r\n                    redo();\r\n                } else {\r\n                    undo();\r\n                }\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n        return () => document.removeEventListener('keydown', handleKeyDown);\r\n    }, [undo, redo]);\r\n\r\n    return (\r\n        <div className=\"note-editor\">\r\n            <h2>{note ? 'Edit Note' : 'Create Note'}</h2>\r\n            {collaborators.length > 0 && (\r\n                <div className=\"collaborators\">\r\n                    <span>Currently editing: </span>\r\n                    {collaborators.map(collaborator => (\r\n                        <span \r\n                            key={collaborator.username} \r\n                            className={`collaborator-badge ${collaborator.isTyping ? 'typing' : ''}`}\r\n                            style={{ backgroundColor: getColorForUsername(collaborator.username) }}\r\n                        >\r\n                            {collaborator.username}\r\n                            {collaborator.isTyping && <span className=\"typing-indicator\" />}\r\n                        </span>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n            />\r\n            <div className=\"editor-toolbar\">\r\n                <button onClick={undo} disabled={undoStack.length === 0}>\r\n                    Undo\r\n                </button>\r\n                <button onClick={redo} disabled={redoStack.length === 0}>\r\n                    Redo\r\n                </button>\r\n            </div>\r\n            <textarea\r\n                ref={contentRef}\r\n                placeholder=\"Note content...\"\r\n                value={content}\r\n                onChange={handleContentChange}\r\n                onClick={handleMouseMove}\r\n                onKeyUp={handleKeyUp}\r\n                onSelect={handleSelectionChange}\r\n            />\r\n            <div className=\"button-group\">\r\n                <button \r\n                    onClick={handleSave}\r\n                    disabled={isSaving}\r\n                >\r\n                    {isSaving ? 'Saving...' : (note ? 'Save' : 'Create')}\r\n                </button>\r\n                <button onClick={onCancel}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}