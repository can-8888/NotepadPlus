{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\components\\\\NoteList.tsx\";\nimport React from 'react';\nimport { NoteStatus } from '../types/Note';\nimport './NoteList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteList = ({\n  notes,\n  selectedNote,\n  onNoteSelect,\n  onDeleteNote,\n  onMakePublic,\n  onShare,\n  isLoading,\n  error\n}) => {\n  // Helper function to get status class name\n  const getStatusClassName = status => {\n    switch (status) {\n      case NoteStatus.Public:\n        return 'public';\n      case NoteStatus.Shared:\n        return 'shared';\n      case NoteStatus.Personal:\n        return 'personal';\n      default:\n        return 'personal';\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `note-card ${(selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === note.id ? 'selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-content\",\n          onClick: () => onNoteSelect(note),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [note.content.substring(0, 100), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-metadata\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Category: \", note.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), note.owner && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"note-owner\",\n              children: [\"Owner: \", note.owner.username, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"owner-email\",\n                children: [\"(\", note.owner.email, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: e => {\n              e.stopPropagation();\n              onDeleteNote(note.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"share-button\",\n            onClick: e => {\n              e.stopPropagation();\n              onShare(note.id);\n            },\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), note.status !== NoteStatus.Public && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"public-button\",\n            onClick: e => {\n              e.stopPropagation();\n              onMakePublic(note.id);\n            },\n            children: \"Make Public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","NoteStatus","jsxDEV","_jsxDEV","NoteList","notes","selectedNote","onNoteSelect","onDeleteNote","onMakePublic","onShare","isLoading","error","getStatusClassName","status","Public","Shared","Personal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","note","id","onClick","title","content","substring","category","owner","username","email","e","stopPropagation","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/components/NoteList.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Note, NoteStatus, getNoteStatus } from '../types/Note';\r\nimport './NoteList.css';\r\n\r\ninterface NoteListProps {\r\n    notes: Note[];\r\n    selectedNote?: Note;\r\n    onNoteSelect: (note: Note) => void;\r\n    onDeleteNote: (id: number) => void;\r\n    onMakePublic: (id: number) => void;\r\n    onShare: (id: number) => void;\r\n    viewType?: string;\r\n    isLoading?: boolean;\r\n    error?: string | null;\r\n}\r\n\r\nconst NoteList: React.FC<NoteListProps> = ({ \r\n    notes, \r\n    selectedNote,\r\n    onNoteSelect, \r\n    onDeleteNote, \r\n    onMakePublic,\r\n    onShare,\r\n    isLoading,\r\n    error \r\n}) => {\r\n    // Helper function to get status class name\r\n    const getStatusClassName = (status: NoteStatus): string => {\r\n        switch (status) {\r\n            case NoteStatus.Public:\r\n                return 'public';\r\n            case NoteStatus.Shared:\r\n                return 'shared';\r\n            case NoteStatus.Personal:\r\n                return 'personal';\r\n            default:\r\n                return 'personal';\r\n        }\r\n    };\r\n\r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div className=\"error\">{error}</div>;\r\n\r\n    return (\r\n        <div className=\"note-list\">\r\n            <h2>My Notes</h2>\r\n            <div className=\"notes-grid\">\r\n                {notes.map((note) => (\r\n                    <div \r\n                        key={note.id} \r\n                        className={`note-card ${selectedNote?.id === note.id ? 'selected' : ''}`}\r\n                    >\r\n                        <div \r\n                            className=\"note-content\"\r\n                            onClick={() => onNoteSelect(note)}\r\n                        >\r\n                            <h3>{note.title}</h3>\r\n                            <p>{note.content.substring(0, 100)}...</p>\r\n                            <div className=\"note-metadata\">\r\n                                <small>Category: {note.category}</small>\r\n                                {note.owner && (\r\n                                    <small className=\"note-owner\">\r\n                                        Owner: {note.owner.username}\r\n                                        <span className=\"owner-email\">({note.owner.email})</span>\r\n                                    </small>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"note-actions\">\r\n                            <button \r\n                                className=\"delete-button\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    onDeleteNote(note.id);\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                            <button \r\n                                className=\"share-button\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    onShare(note.id);\r\n                                }}\r\n                            >\r\n                                Share\r\n                            </button>\r\n                            {note.status !== NoteStatus.Public && (\r\n                                <button \r\n                                    className=\"public-button\"\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        onMakePublic(note.id);\r\n                                    }}\r\n                                >\r\n                                    Make Public\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}