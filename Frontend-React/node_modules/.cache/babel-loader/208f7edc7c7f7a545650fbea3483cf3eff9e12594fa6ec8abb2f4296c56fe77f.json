{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteEditor from './components/NoteEditor';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { useAuth } from './contexts/AuthContext';\nimport { NoteStatus } from './types/Note';\nimport { api } from './services/api';\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\nimport Modal from './components/Modal';\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AppContent() {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [showRegister, setShowRegister] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [sharedNotes, setSharedNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [shareDialogNoteId, setShareDialogNoteId] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\n  const [currentView, setCurrentView] = useState('my-notes');\n  const [publicNotes, setPublicNotes] = useState([]);\n  const [sharedWithMeNotes, setSharedWithMeNotes] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (user) {\n      console.log('User logged in, loading notes...'); // Debug log\n      loadAllNotes();\n    }\n  }, [user]); // Only depend on user\n\n  const loadAllNotes = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      console.log('Loading notes for user:', user);\n      const [myNotesResponse, shared] = await Promise.all([api.getNotes(), api.getSharedNotes()]);\n      console.log('API Response - myNotes:', myNotesResponse);\n      console.log('API Response - shared:', shared);\n\n      // Convert API response to Note format\n      const formattedMyNotes = myNotesResponse.map(note => {\n        var _ref, _note$id, _ref2, _note$title, _ref3, _note$content, _ref4, _note$category, _ref5, _note$createdAt, _ref6, _note$updatedAt, _ref7, _note$userId, _ref8, _note$isPublic, _ref9, _note$status, _note$user;\n        return {\n          id: (_ref = (_note$id = note.id) !== null && _note$id !== void 0 ? _note$id : note.Id) !== null && _ref !== void 0 ? _ref : 0,\n          title: (_ref2 = (_note$title = note.title) !== null && _note$title !== void 0 ? _note$title : note.Title) !== null && _ref2 !== void 0 ? _ref2 : '',\n          content: (_ref3 = (_note$content = note.content) !== null && _note$content !== void 0 ? _note$content : note.Content) !== null && _ref3 !== void 0 ? _ref3 : '',\n          category: (_ref4 = (_note$category = note.category) !== null && _note$category !== void 0 ? _note$category : note.Category) !== null && _ref4 !== void 0 ? _ref4 : '',\n          createdAt: new Date((_ref5 = (_note$createdAt = note.createdAt) !== null && _note$createdAt !== void 0 ? _note$createdAt : note.CreatedAt) !== null && _ref5 !== void 0 ? _ref5 : Date.now()),\n          updatedAt: new Date((_ref6 = (_note$updatedAt = note.updatedAt) !== null && _note$updatedAt !== void 0 ? _note$updatedAt : note.UpdatedAt) !== null && _ref6 !== void 0 ? _ref6 : Date.now()),\n          userId: (_ref7 = (_note$userId = note.userId) !== null && _note$userId !== void 0 ? _note$userId : note.UserId) !== null && _ref7 !== void 0 ? _ref7 : 0,\n          isPublic: (_ref8 = (_note$isPublic = note.isPublic) !== null && _note$isPublic !== void 0 ? _note$isPublic : note.IsPublic) !== null && _ref8 !== void 0 ? _ref8 : false,\n          status: (_ref9 = (_note$status = note.status) !== null && _note$status !== void 0 ? _note$status : note.Status) !== null && _ref9 !== void 0 ? _ref9 : NoteStatus.Personal,\n          user: (_note$user = note.user) !== null && _note$user !== void 0 ? _note$user : note.User\n        };\n      });\n      console.log('Setting notes state with:', formattedMyNotes);\n      setNotes(formattedMyNotes);\n      setSharedNotes(Array.isArray(shared) ? shared : []);\n    } catch (err) {\n      console.error('Error loading notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteNote = async noteId => {\n    try {\n      setError(null);\n      await api.deleteNote(noteId);\n      setNotes(notes.filter(note => note.id !== noteId));\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        setSelectedNote(undefined);\n      }\n    } catch (err) {\n      setError('Failed to delete note');\n      console.error(err);\n    }\n  };\n  const handleCreateNote = () => {\n    setSelectedNote(undefined);\n    setIsCreating(true);\n    setIsNoteModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    console.log('Modal close triggered');\n    setIsNoteModalOpen(false);\n    setIsCreating(false);\n    setSelectedNote(undefined);\n  };\n  const handleNoteSelect = note => {\n    console.log('Note selected:', note);\n    setSelectedNote(note);\n    setIsNoteModalOpen(true);\n    console.log('Modal opened');\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      console.log('Saving note:', noteData);\n      if (noteData.id) {\n        // Updating existing note\n        await api.updateNote(noteData.id, noteData);\n      } else {\n        // Creating new note\n        await api.createNote(noteData);\n      }\n      await loadAllNotes();\n      setSelectedNote(undefined);\n      setIsCreating(false);\n      console.log('Note saved successfully');\n      setIsNoteModalOpen(false);\n    } catch (err) {\n      console.error('Failed to save note:', err);\n      setError('Failed to save note');\n    }\n  };\n  const handleMakePublic = async noteId => {\n    try {\n      setError(null);\n      await api.makeNotePublic(noteId);\n\n      // Reload both regular and shared notes\n      await loadAllNotes();\n\n      // Update the selected note if it was made public\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        const apiNote = await api.getNotes().then(notes => notes.find(n => n.id === noteId || n.Id === noteId));\n        if (apiNote) {\n          var _ref10, _apiNote$id, _ref11, _apiNote$title, _ref12, _apiNote$content, _ref13, _apiNote$category, _ref14, _apiNote$createdAt, _ref15, _apiNote$updatedAt, _ref16, _apiNote$userId, _ref17, _apiNote$isPublic, _ref18, _apiNote$status, _apiNote$user;\n          // Convert API response to Note format\n          const updatedNote = {\n            id: (_ref10 = (_apiNote$id = apiNote.id) !== null && _apiNote$id !== void 0 ? _apiNote$id : apiNote.Id) !== null && _ref10 !== void 0 ? _ref10 : 0,\n            title: (_ref11 = (_apiNote$title = apiNote.title) !== null && _apiNote$title !== void 0 ? _apiNote$title : apiNote.Title) !== null && _ref11 !== void 0 ? _ref11 : '',\n            content: (_ref12 = (_apiNote$content = apiNote.content) !== null && _apiNote$content !== void 0 ? _apiNote$content : apiNote.Content) !== null && _ref12 !== void 0 ? _ref12 : '',\n            category: (_ref13 = (_apiNote$category = apiNote.category) !== null && _apiNote$category !== void 0 ? _apiNote$category : apiNote.Category) !== null && _ref13 !== void 0 ? _ref13 : '',\n            createdAt: new Date((_ref14 = (_apiNote$createdAt = apiNote.createdAt) !== null && _apiNote$createdAt !== void 0 ? _apiNote$createdAt : apiNote.CreatedAt) !== null && _ref14 !== void 0 ? _ref14 : Date.now()),\n            updatedAt: new Date((_ref15 = (_apiNote$updatedAt = apiNote.updatedAt) !== null && _apiNote$updatedAt !== void 0 ? _apiNote$updatedAt : apiNote.UpdatedAt) !== null && _ref15 !== void 0 ? _ref15 : Date.now()),\n            userId: (_ref16 = (_apiNote$userId = apiNote.userId) !== null && _apiNote$userId !== void 0 ? _apiNote$userId : apiNote.UserId) !== null && _ref16 !== void 0 ? _ref16 : 0,\n            isPublic: (_ref17 = (_apiNote$isPublic = apiNote.isPublic) !== null && _apiNote$isPublic !== void 0 ? _apiNote$isPublic : apiNote.IsPublic) !== null && _ref17 !== void 0 ? _ref17 : false,\n            status: (_ref18 = (_apiNote$status = apiNote.status) !== null && _apiNote$status !== void 0 ? _apiNote$status : apiNote.Status) !== null && _ref18 !== void 0 ? _ref18 : NoteStatus.Personal,\n            user: (_apiNote$user = apiNote.user) !== null && _apiNote$user !== void 0 ? _apiNote$user : apiNote.User\n          };\n          setSelectedNote(updatedNote);\n        }\n      }\n    } catch (err) {\n      setError('Failed to make note public');\n      console.error(err);\n    }\n  };\n  const sortNotes = notesToSort => {\n    return [...notesToSort].sort((a, b) => {\n      switch (sortBy) {\n        case 'date-desc':\n          return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\n        case 'date-asc':\n          return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          return a.category.localeCompare(b.category);\n        default:\n          return 0;\n      }\n    });\n  };\n  const filteredAndSortedNotes = sortNotes(notes.filter(note => {\n    var _ref19, _user$id;\n    // First filter by user\n    if (!user) return false;\n    const userId = (_ref19 = (_user$id = user.id) !== null && _user$id !== void 0 ? _user$id : user.Id) !== null && _ref19 !== void 0 ? _ref19 : 0;\n    const noteUserId = note.userId;\n    if (userId !== noteUserId) return false;\n\n    // Then filter by search and category\n    if (!(note !== null && note !== void 0 && note.title)) return false;\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !selectedCategory || note.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  }));\n  const renderSortOptions = () => {\n    const options = [{\n      value: 'date-desc',\n      label: 'Newest First'\n    }, {\n      value: 'date-asc',\n      label: 'Oldest First'\n    }, {\n      value: 'title',\n      label: 'Title'\n    }, {\n      value: 'category',\n      label: 'Category'\n    }];\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this));\n  };\n  const renderCategoryOptions = () => {\n    const categories = Array.from(new Set(notes.map(note => note.category))).filter(category => category);\n    return [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All Categories\"\n    }, \"all\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), ...categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this))];\n  };\n\n  // Add debug logging for filtered notes\n  useEffect(() => {\n    console.log('Current notes:', notes);\n    console.log('Filtered notes:', filteredAndSortedNotes);\n  }, [notes, filteredAndSortedNotes]);\n  useEffect(() => {\n    console.log('Notes state updated:', notes);\n  }, [notes]);\n\n  // Add useEffect to monitor sharedNotes changes\n  useEffect(() => {\n    console.log('Shared notes updated:', sharedNotes);\n  }, [sharedNotes]);\n  const handleLogout = () => {\n    // Clear UI state\n    setSelectedNote(undefined);\n    setSearchTerm('');\n    setSelectedCategory('');\n    setSortBy('date-desc');\n    // Don't clear notes here, they'll be reloaded on next login\n    logout();\n  };\n  const handleShare = noteId => {\n    setShareDialogNoteId(noteId);\n  };\n  const handleShareComplete = async () => {\n    await loadAllNotes(); // Reload notes to update the UI\n    setShareDialogNoteId(null);\n  };\n  const loadPublicNotes = async () => {\n    try {\n      console.log('Loading public notes...');\n      const response = await api.getPublicNotes();\n      console.log('Public notes received:', response);\n      setPublicNotes(response);\n    } catch (err) {\n      console.error('Failed to load public notes:', err);\n      setError('Failed to load public notes');\n    }\n  };\n  const loadSharedWithMeNotes = async () => {\n    try {\n      console.log('Loading shared notes...');\n      setIsLoading(true);\n      const shared = await api.getSharedWithMeNotes();\n      console.log('Shared notes received:', shared);\n      if (Array.isArray(shared)) {\n        setSharedWithMeNotes(shared);\n      } else {\n        console.error('Received invalid shared notes data:', shared);\n        setError('Invalid shared notes data received');\n      }\n    } catch (err) {\n      console.error('Failed to load shared notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load shared notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      console.log('Current view:', currentView);\n      switch (currentView) {\n        case 'my-notes':\n          loadAllNotes();\n          break;\n        case 'shared-notes':\n          loadSharedWithMeNotes();\n          break;\n        case 'public-notes':\n          loadPublicNotes();\n          break;\n      }\n    }\n  }, [currentView, user]);\n\n  // Update setCurrentView to also update the URL\n  const handleViewChange = view => {\n    setCurrentView(view);\n    switch (view) {\n      case 'my-notes':\n        navigate('/notes');\n        break;\n      case 'shared-notes':\n        navigate('/notes/shared');\n        break;\n      case 'public-notes':\n        navigate('/notes/public');\n        break;\n    }\n  };\n\n  // Add effect to sync URL with current view\n  useEffect(() => {\n    const path = location.pathname;\n    if (path === '/notes/public' && currentView !== 'public-notes') {\n      setCurrentView('public-notes');\n    } else if (path === '/notes/shared' && currentView !== 'shared-notes') {\n      setCurrentView('shared-notes');\n    } else if (path === '/notes' && currentView !== 'my-notes') {\n      setCurrentView('my-notes');\n    }\n  }, [location.pathname]);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notepad+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"auth-container\",\n        children: showRegister ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRegister(false),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRegister(true),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notepad+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : user.Username), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-note-button sidebar-create\",\n          onClick: handleCreateNote,\n          children: \"Create New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `nav-item ${currentView === 'my-notes' ? 'active' : ''}`,\n            onClick: () => handleViewChange('my-notes'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"nav-icon\",\n              children: \"\\uD83D\\uDCC1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 29\n            }, this), \"My Notes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `nav-item ${currentView === 'shared-notes' ? 'active' : ''}`,\n            onClick: () => handleViewChange('shared-notes'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"nav-icon\",\n              children: \"\\uD83D\\uDD04\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this), \"Notes Shared With Me\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `nav-item ${currentView === 'public-notes' ? 'active' : ''}`,\n            onClick: () => handleViewChange('public-notes'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"nav-icon\",\n              children: \"\\uD83C\\uDF10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 29\n            }, this), \"Public Notes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search notes...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory,\n            onChange: e => setSelectedCategory(e.target.value),\n            className: \"category-filter\",\n            children: renderCategoryOptions()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: sortBy,\n            onChange: e => setSortBy(e.target.value),\n            className: \"sort-select\",\n            children: renderSortOptions()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-container\",\n          children: [currentView === 'my-notes' && /*#__PURE__*/_jsxDEV(NoteList, {\n            notes: filteredAndSortedNotes,\n            selectedNote: selectedNote,\n            onNoteSelect: handleNoteSelect,\n            onDeleteNote: handleDeleteNote,\n            onMakePublic: handleMakePublic,\n            onShare: handleShare,\n            viewType: \"my-notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this), currentView === 'shared-notes' && /*#__PURE__*/_jsxDEV(NoteList, {\n            notes: sharedWithMeNotes,\n            selectedNote: selectedNote,\n            onNoteSelect: handleNoteSelect,\n            onDeleteNote: handleDeleteNote,\n            onMakePublic: handleMakePublic,\n            onShare: handleShare,\n            viewType: \"shared-notes\",\n            isLoading: isLoading,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 29\n          }, this), currentView === 'public-notes' && /*#__PURE__*/_jsxDEV(NoteList, {\n            notes: publicNotes,\n            selectedNote: selectedNote,\n            onNoteSelect: handleNoteSelect,\n            onDeleteNote: handleDeleteNote,\n            onMakePublic: handleMakePublic,\n            onShare: handleShare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isNoteModalOpen,\n      onClose: handleCloseModal,\n      title: isCreating ? 'Create New Note' : 'Edit Note',\n      children: /*#__PURE__*/_jsxDEV(NoteEditor, {\n        note: selectedNote,\n        onSave: async note => {\n          console.log('Save triggered from NoteEditor');\n          await handleSaveNote(note);\n        },\n        onCancel: () => {\n          console.log('Cancel triggered from NoteEditor');\n          handleCloseModal();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }, this), shareDialogNoteId && /*#__PURE__*/_jsxDEV(ShareNoteDialog, {\n      noteId: shareDialogNoteId,\n      onClose: () => setShareDialogNoteId(null),\n      onShare: handleShareComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 9\n  }, this);\n}\n_s(AppContent, \"qrcgUjzvF1u1GtQOWXdKh8WvLpU=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/*\",\n      element: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 525,\n    columnNumber: 9\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NoteList","NoteEditor","Login","Register","useAuth","NoteStatus","api","ShareNoteDialog","Modal","Routes","Route","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContent","_s","user","logout","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","shareDialogNoteId","setShareDialogNoteId","isCreating","setIsCreating","isNoteModalOpen","setIsNoteModalOpen","currentView","setCurrentView","publicNotes","setPublicNotes","sharedWithMeNotes","setSharedWithMeNotes","navigate","location","console","log","loadAllNotes","myNotesResponse","shared","Promise","all","getNotes","getSharedNotes","formattedMyNotes","map","note","_ref","_note$id","_ref2","_note$title","_ref3","_note$content","_ref4","_note$category","_ref5","_note$createdAt","_ref6","_note$updatedAt","_ref7","_note$userId","_ref8","_note$isPublic","_ref9","_note$status","_note$user","id","Id","title","Title","content","Content","category","Category","createdAt","Date","CreatedAt","now","updatedAt","UpdatedAt","userId","UserId","isPublic","IsPublic","status","Status","Personal","User","Array","isArray","err","Error","message","handleDeleteNote","noteId","deleteNote","filter","handleCreateNote","handleCloseModal","handleNoteSelect","handleSaveNote","noteData","updateNote","createNote","handleMakePublic","makeNotePublic","apiNote","then","find","n","_ref10","_apiNote$id","_ref11","_apiNote$title","_ref12","_apiNote$content","_ref13","_apiNote$category","_ref14","_apiNote$createdAt","_ref15","_apiNote$updatedAt","_ref16","_apiNote$userId","_ref17","_apiNote$isPublic","_ref18","_apiNote$status","_apiNote$user","updatedNote","sortNotes","notesToSort","sort","a","b","getTime","localeCompare","filteredAndSortedNotes","_ref19","_user$id","noteUserId","matchesSearch","toLowerCase","includes","matchesCategory","renderSortOptions","options","value","label","option","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCategoryOptions","categories","from","Set","handleLogout","handleShare","handleShareComplete","loadPublicNotes","response","getPublicNotes","loadSharedWithMeNotes","getSharedWithMeNotes","handleViewChange","view","path","pathname","className","onClick","username","Username","type","placeholder","onChange","e","target","onNoteSelect","onDeleteNote","onMakePublic","onShare","viewType","isOpen","onClose","onSave","onCancel","_c","App","element","_c2","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note, NoteApiResponse, NoteStatus } from './types/Note';\r\nimport { api } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\nimport Modal from './components/Modal';\r\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title' | 'category';\r\ntype ViewType = 'my-notes' | 'shared-notes' | 'public-notes';\r\n\r\nfunction AppContent() {\r\n    const { user, logout } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [shareDialogNoteId, setShareDialogNoteId] = useState<number | null>(null);\r\n    const [isCreating, setIsCreating] = useState(false);\r\n    const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\r\n    const [currentView, setCurrentView] = useState<ViewType>('my-notes');\r\n    const [publicNotes, setPublicNotes] = useState<Note[]>([]);\r\n    const [sharedWithMeNotes, setSharedWithMeNotes] = useState<Note[]>([]);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            \r\n            console.log('Loading notes for user:', user);\r\n            \r\n            const [myNotesResponse, shared] = await Promise.all([\r\n                api.getNotes(),\r\n                api.getSharedNotes()\r\n            ]) as [NoteApiResponse[], Note[]];\r\n            \r\n            console.log('API Response - myNotes:', myNotesResponse);\r\n            console.log('API Response - shared:', shared);\r\n            \r\n            // Convert API response to Note format\r\n            const formattedMyNotes: Note[] = myNotesResponse.map(note => ({\r\n                id: note.id ?? note.Id ?? 0,\r\n                title: note.title ?? note.Title ?? '',\r\n                content: note.content ?? note.Content ?? '',\r\n                category: note.category ?? note.Category ?? '',\r\n                createdAt: new Date(note.createdAt ?? note.CreatedAt ?? Date.now()),\r\n                updatedAt: new Date(note.updatedAt ?? note.UpdatedAt ?? Date.now()),\r\n                userId: note.userId ?? note.UserId ?? 0,\r\n                isPublic: note.isPublic ?? note.IsPublic ?? false,\r\n                status: note.status ?? note.Status ?? NoteStatus.Personal,\r\n                user: note.user ?? note.User\r\n            }));\r\n\r\n            console.log('Setting notes state with:', formattedMyNotes);\r\n            setNotes(formattedMyNotes);\r\n            setSharedNotes(Array.isArray(shared) ? shared : []);\r\n\r\n        } catch (err) {\r\n            console.error('Error loading notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCreateNote = () => {\r\n        setSelectedNote(undefined);\r\n        setIsCreating(true);\r\n        setIsNoteModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        console.log('Modal close triggered');\r\n        setIsNoteModalOpen(false);\r\n        setIsCreating(false);\r\n        setSelectedNote(undefined);\r\n    };\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        console.log('Note selected:', note);\r\n        setSelectedNote(note);\r\n        setIsNoteModalOpen(true);\r\n        console.log('Modal opened');\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            console.log('Saving note:', noteData);\r\n            if (noteData.id) {\r\n                // Updating existing note\r\n                await api.updateNote(noteData.id, noteData);\r\n            } else {\r\n                // Creating new note\r\n                await api.createNote(noteData);\r\n            }\r\n            await loadAllNotes();\r\n            setSelectedNote(undefined);\r\n            setIsCreating(false);\r\n            console.log('Note saved successfully');\r\n            setIsNoteModalOpen(false);\r\n        } catch (err) {\r\n            console.error('Failed to save note:', err);\r\n            setError('Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.makeNotePublic(noteId);\r\n            \r\n            // Reload both regular and shared notes\r\n            await loadAllNotes();\r\n            \r\n            // Update the selected note if it was made public\r\n            if (selectedNote?.id === noteId) {\r\n                const apiNote = await api.getNotes().then(notes => \r\n                    notes.find(n => n.id === noteId || n.Id === noteId)\r\n                );\r\n\r\n                if (apiNote) {\r\n                    // Convert API response to Note format\r\n                    const updatedNote: Note = {\r\n                        id: apiNote.id ?? apiNote.Id ?? 0,\r\n                        title: apiNote.title ?? apiNote.Title ?? '',\r\n                        content: apiNote.content ?? apiNote.Content ?? '',\r\n                        category: apiNote.category ?? apiNote.Category ?? '',\r\n                        createdAt: new Date(apiNote.createdAt ?? apiNote.CreatedAt ?? Date.now()),\r\n                        updatedAt: new Date(apiNote.updatedAt ?? apiNote.UpdatedAt ?? Date.now()),\r\n                        userId: apiNote.userId ?? apiNote.UserId ?? 0,\r\n                        isPublic: apiNote.isPublic ?? apiNote.IsPublic ?? false,\r\n                        status: apiNote.status ?? apiNote.Status ?? NoteStatus.Personal,\r\n                        user: apiNote.user ?? apiNote.User\r\n                    };\r\n                    setSelectedNote(updatedNote);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to make note public');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notesToSort: Note[]): Note[] => {\r\n        return [...notesToSort].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    return a.category.localeCompare(b.category);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filteredAndSortedNotes = sortNotes(\r\n        notes.filter(note => {\r\n            // First filter by user\r\n            if (!user) return false;\r\n            const userId = user.id ?? user.Id ?? 0;\r\n            const noteUserId = note.userId;\r\n            if (userId !== noteUserId) return false;\r\n            \r\n            // Then filter by search and category\r\n            if (!note?.title) return false;\r\n            \r\n            const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n            const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n            return matchesSearch && matchesCategory;\r\n        })\r\n    );\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredAndSortedNotes);\r\n    }, [notes, filteredAndSortedNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    // Add useEffect to monitor sharedNotes changes\r\n    useEffect(() => {\r\n        console.log('Shared notes updated:', sharedNotes);\r\n    }, [sharedNotes]);\r\n\r\n    const handleLogout = () => {\r\n        // Clear UI state\r\n        setSelectedNote(undefined);\r\n        setSearchTerm('');\r\n        setSelectedCategory('');\r\n        setSortBy('date-desc');\r\n        // Don't clear notes here, they'll be reloaded on next login\r\n        logout();\r\n    };\r\n\r\n    const handleShare = (noteId: number) => {\r\n        setShareDialogNoteId(noteId);\r\n    };\r\n\r\n    const handleShareComplete = async () => {\r\n        await loadAllNotes(); // Reload notes to update the UI\r\n        setShareDialogNoteId(null);\r\n    };\r\n\r\n    const loadPublicNotes = async () => {\r\n        try {\r\n            console.log('Loading public notes...');\r\n            const response = await api.getPublicNotes();\r\n            console.log('Public notes received:', response);\r\n            setPublicNotes(response);\r\n        } catch (err) {\r\n            console.error('Failed to load public notes:', err);\r\n            setError('Failed to load public notes');\r\n        }\r\n    };\r\n\r\n    const loadSharedWithMeNotes = async () => {\r\n        try {\r\n            console.log('Loading shared notes...');\r\n            setIsLoading(true);\r\n            const shared = await api.getSharedWithMeNotes();\r\n            console.log('Shared notes received:', shared);\r\n            if (Array.isArray(shared)) {\r\n                setSharedWithMeNotes(shared);\r\n            } else {\r\n                console.error('Received invalid shared notes data:', shared);\r\n                setError('Invalid shared notes data received');\r\n            }\r\n        } catch (err) {\r\n            console.error('Failed to load shared notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load shared notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('Current view:', currentView);\r\n            switch (currentView) {\r\n                case 'my-notes':\r\n                    loadAllNotes();\r\n                    break;\r\n                case 'shared-notes':\r\n                    loadSharedWithMeNotes();\r\n                    break;\r\n                case 'public-notes':\r\n                    loadPublicNotes();\r\n                    break;\r\n            }\r\n        }\r\n    }, [currentView, user]);\r\n\r\n    // Update setCurrentView to also update the URL\r\n    const handleViewChange = (view: ViewType) => {\r\n        setCurrentView(view);\r\n        switch (view) {\r\n            case 'my-notes':\r\n                navigate('/notes');\r\n                break;\r\n            case 'shared-notes':\r\n                navigate('/notes/shared');\r\n                break;\r\n            case 'public-notes':\r\n                navigate('/notes/public');\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Add effect to sync URL with current view\r\n    useEffect(() => {\r\n        const path = location.pathname;\r\n        if (path === '/notes/public' && currentView !== 'public-notes') {\r\n            setCurrentView('public-notes');\r\n        } else if (path === '/notes/shared' && currentView !== 'shared-notes') {\r\n            setCurrentView('shared-notes');\r\n        } else if (path === '/notes' && currentView !== 'my-notes') {\r\n            setCurrentView('my-notes');\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    if (!user) {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1>Notepad+</h1>\r\n                </header>\r\n                <main className=\"auth-container\">\r\n                    {showRegister ? (\r\n                        <>\r\n                            <Register />\r\n                            <p>\r\n                                Already have an account?{' '}\r\n                                <button onClick={() => setShowRegister(false)}>\r\n                                    Login\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Login />\r\n                            <p>\r\n                                Don't have an account?{' '}\r\n                                <button onClick={() => setShowRegister(true)}>\r\n                                    Register\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Notepad+</h1>\r\n                <div className=\"user-info\">\r\n                    <span>Welcome, {user?.username || user?.Username}!</span>\r\n                    <button className=\"logout-button\" onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"App-layout\">\r\n                <nav className=\"sidebar\">\r\n                    <button \r\n                        className=\"create-note-button sidebar-create\"\r\n                        onClick={handleCreateNote}\r\n                    >\r\n                        Create New Note\r\n                    </button>\r\n                    <div className=\"nav-section\">\r\n                        <div \r\n                            className={`nav-item ${currentView === 'my-notes' ? 'active' : ''}`}\r\n                            onClick={() => handleViewChange('my-notes')}\r\n                        >\r\n                            <span className=\"nav-icon\">📁</span>\r\n                            My Notes\r\n                        </div>\r\n                        <div \r\n                            className={`nav-item ${currentView === 'shared-notes' ? 'active' : ''}`}\r\n                            onClick={() => handleViewChange('shared-notes')}\r\n                        >\r\n                            <span className=\"nav-icon\">🔄</span>\r\n                            Notes Shared With Me\r\n                        </div>\r\n                        <div \r\n                            className={`nav-item ${currentView === 'public-notes' ? 'active' : ''}`}\r\n                            onClick={() => handleViewChange('public-notes')}\r\n                        >\r\n                            <span className=\"nav-icon\">🌐</span>\r\n                            Public Notes\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n\r\n                <main className=\"main-content\">\r\n                    <div className=\"search-filters\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search notes...\"\r\n                            value={searchTerm}\r\n                            onChange={(e) => setSearchTerm(e.target.value)}\r\n                            className=\"search-input\"\r\n                        />\r\n                        <select\r\n                            value={selectedCategory}\r\n                            onChange={(e) => setSelectedCategory(e.target.value)}\r\n                            className=\"category-filter\"\r\n                        >\r\n                            {renderCategoryOptions()}\r\n                        </select>\r\n                        <select\r\n                            value={sortBy}\r\n                            onChange={(e) => setSortBy(e.target.value as SortOption)}\r\n                            className=\"sort-select\"\r\n                        >\r\n                            {renderSortOptions()}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"notes-container\">\r\n                        {currentView === 'my-notes' && (\r\n                            <NoteList \r\n                                notes={filteredAndSortedNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={handleNoteSelect}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                                viewType=\"my-notes\"\r\n                            />\r\n                        )}\r\n                        {currentView === 'shared-notes' && (\r\n                            <NoteList \r\n                                notes={sharedWithMeNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={handleNoteSelect}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                                viewType=\"shared-notes\"\r\n                                isLoading={isLoading}\r\n                                error={error}\r\n                            />\r\n                        )}\r\n                        {currentView === 'public-notes' && (\r\n                            <NoteList \r\n                                notes={publicNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={handleNoteSelect}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </main>\r\n            </div>\r\n\r\n            <Modal \r\n                isOpen={isNoteModalOpen}\r\n                onClose={handleCloseModal}\r\n                title={isCreating ? 'Create New Note' : 'Edit Note'}\r\n            >\r\n                <NoteEditor \r\n                    note={selectedNote}\r\n                    onSave={async (note) => {\r\n                        console.log('Save triggered from NoteEditor');\r\n                        await handleSaveNote(note);\r\n                    }}\r\n                    onCancel={() => {\r\n                        console.log('Cancel triggered from NoteEditor');\r\n                        handleCloseModal();\r\n                    }}\r\n                />\r\n            </Modal>\r\n\r\n            {shareDialogNoteId && (\r\n                <ShareNoteDialog\r\n                    noteId={shareDialogNoteId}\r\n                    onClose={() => setShareDialogNoteId(null)}\r\n                    onShare={handleShareComplete}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/*\" element={<AppContent />} />\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}