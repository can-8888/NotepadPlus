{"ast":null,"code":"import { api } from './api';\nexport const notificationService = {\n  getNotifications: async () => {\n    const response = await api.axiosInstance.get('/notifications');\n    return response.data;\n  },\n  markAsRead: async id => {\n    await api.axiosInstance.put(`/notifications/${id}/read`);\n  },\n  markAllAsRead: async () => {\n    await api.axiosInstance.put('/notifications/read-all');\n  }\n};","map":{"version":3,"names":["api","notificationService","getNotifications","response","axiosInstance","get","data","markAsRead","id","put","markAllAsRead"],"sources":["D:/_master/v5/notepad-plus/src/services/notificationService.ts"],"sourcesContent":["import { api } from './api';\r\n\r\nexport interface Notification {\r\n    id: number;\r\n    message: string;\r\n    type: 'NewPublicNote' | 'NoteShared';\r\n    noteId?: number;\r\n    createdAt: string;\r\n    isRead: boolean;\r\n}\r\n\r\nexport const notificationService = {\r\n    getNotifications: async (): Promise<Notification[]> => {\r\n        const response = await api.axiosInstance.get<Notification[]>('/notifications');\r\n        return response.data;\r\n    },\r\n\r\n    markAsRead: async (id: number): Promise<void> => {\r\n        await api.axiosInstance.put(`/notifications/${id}/read`);\r\n    },\r\n\r\n    markAllAsRead: async (): Promise<void> => {\r\n        await api.axiosInstance.put('/notifications/read-all');\r\n    }\r\n}; "],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAW3B,OAAO,MAAMC,mBAAmB,GAAG;EAC/BC,gBAAgB,EAAE,MAAAA,CAAA,KAAqC;IACnD,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,aAAa,CAACC,GAAG,CAAiB,gBAAgB,CAAC;IAC9E,OAAOF,QAAQ,CAACG,IAAI;EACxB,CAAC;EAEDC,UAAU,EAAE,MAAOC,EAAU,IAAoB;IAC7C,MAAMR,GAAG,CAACI,aAAa,CAACK,GAAG,CAAC,kBAAkBD,EAAE,OAAO,CAAC;EAC5D,CAAC;EAEDE,aAAa,EAAE,MAAAA,CAAA,KAA2B;IACtC,MAAMV,GAAG,CAACI,aAAa,CAACK,GAAG,CAAC,yBAAyB,CAAC;EAC1D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}