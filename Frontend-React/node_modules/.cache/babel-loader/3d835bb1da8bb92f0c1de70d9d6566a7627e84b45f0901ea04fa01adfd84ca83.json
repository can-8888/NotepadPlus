{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{api}from'../services/api';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[isInitialized,setIsInitialized]=useState(false);const[user,setUser]=useState(null);const[token,setToken]=useState(null);// Initialize auth state once on mount\nuseEffect(()=>{const initializeAuth=()=>{try{const storedToken=localStorage.getItem('token');const storedUser=localStorage.getItem('user');if(storedToken&&storedUser){const parsedUser=JSON.parse(storedUser);setToken(storedToken);setUser(parsedUser);}}catch(error){console.error('Error initializing auth state:',error);localStorage.removeItem('token');localStorage.removeItem('user');}finally{setIsInitialized(true);}};initializeAuth();},[]);// Set up axios interceptor\nuseEffect(()=>{const interceptor=axios.interceptors.request.use(config=>{if(token&&config.headers){config.headers['Authorization']=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});return()=>{axios.interceptors.request.eject(interceptor);};},[token]);// Sync user to localStorage\nuseEffect(()=>{if(user){localStorage.setItem('user',JSON.stringify(user));}},[user]);// Don't render anything until we've initialized\nif(!isInitialized){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}const login=async(username,password)=>{try{const response=await api.login({username,password});console.log('Login response:',response);if(!response.user||!response.token){throw new Error('Invalid response format');}setUser(response.user);setToken(response.token);localStorage.setItem('user',JSON.stringify(response.user));localStorage.setItem('token',response.token);}catch(error){console.error('Login error:',error);throw error;}};const register=async(username,email,password,name)=>{try{const response=await api.register({username,email,password,name});// Set user and token from registration response\nsetUser(response.user);setToken(response.token);localStorage.setItem('user',JSON.stringify(response.user));localStorage.setItem('token',response.token);}catch(error){console.error('Register error:',error);throw error;}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('user');localStorage.removeItem('token');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,token,isInitialized,login,logout,register},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","axios","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","isInitialized","setIsInitialized","user","setUser","token","setToken","initializeAuth","storedToken","localStorage","getItem","storedUser","parsedUser","JSON","parse","error","console","removeItem","interceptor","interceptors","request","use","config","headers","concat","Promise","reject","eject","setItem","stringify","login","username","password","response","log","Error","register","email","name","logout","Provider","value","useAuth","context"],"sources":["D:/_master/v5/NotepadPlus/Frontend-React/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User, LoginResponse } from '../types/Auth';\r\nimport { api } from '../services/api';\r\nimport axios from 'axios';\r\n\r\ninterface AuthContextType {\r\n    user: User | null;\r\n    token: string | null;\r\n    isInitialized: boolean;\r\n    login: (username: string, password: string) => Promise<void>;\r\n    logout: () => void;\r\n    register: (username: string, email: string, password: string, name?: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [isInitialized, setIsInitialized] = useState(false);\r\n    const [user, setUser] = useState<User | null>(null);\r\n    const [token, setToken] = useState<string | null>(null);\r\n\r\n    // Initialize auth state once on mount\r\n    useEffect(() => {\r\n        const initializeAuth = () => {\r\n            try {\r\n                const storedToken = localStorage.getItem('token');\r\n                const storedUser = localStorage.getItem('user');\r\n\r\n                if (storedToken && storedUser) {\r\n                    const parsedUser = JSON.parse(storedUser);\r\n                    setToken(storedToken);\r\n                    setUser(parsedUser);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error initializing auth state:', error);\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('user');\r\n            } finally {\r\n                setIsInitialized(true);\r\n            }\r\n        };\r\n\r\n        initializeAuth();\r\n    }, []);\r\n\r\n    // Set up axios interceptor\r\n    useEffect(() => {\r\n        const interceptor = axios.interceptors.request.use(\r\n            (config) => {\r\n                if (token && config.headers) {\r\n                    config.headers['Authorization'] = `Bearer ${token}`;\r\n                }\r\n                return config;\r\n            },\r\n            (error) => {\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            axios.interceptors.request.eject(interceptor);\r\n        };\r\n    }, [token]);\r\n\r\n    // Sync user to localStorage\r\n    useEffect(() => {\r\n        if (user) {\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n        }\r\n    }, [user]);\r\n\r\n    // Don't render anything until we've initialized\r\n    if (!isInitialized) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const login = async (username: string, password: string) => {\r\n        try {\r\n            const response = await api.login({ username, password });\r\n            console.log('Login response:', response);\r\n            \r\n            if (!response.user || !response.token) {\r\n                throw new Error('Invalid response format');\r\n            }\r\n\r\n            setUser(response.user);\r\n            setToken(response.token);\r\n            localStorage.setItem('user', JSON.stringify(response.user));\r\n            localStorage.setItem('token', response.token);\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (username: string, email: string, password: string, name?: string) => {\r\n        try {\r\n            const response = await api.register({ username, email, password, name });\r\n            // Set user and token from registration response\r\n            setUser(response.user);\r\n            setToken(response.token);\r\n            localStorage.setItem('user', JSON.stringify(response.user));\r\n            localStorage.setItem('token', response.token);\r\n        } catch (error) {\r\n            console.error('Register error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        setToken(null);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, isInitialized, login, logout, register }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}