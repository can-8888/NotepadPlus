{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Verifică dacă există un token salvat\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Implementează logica de verificare a tokenului\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const userData = await api.login({\n        username,\n        password\n      });\n      // Assuming userData contains both user info and token\n      if ('token' in userData) {\n        const {\n          token,\n          ...userDataWithoutToken\n        } = userData;\n        setUser({\n          ...userDataWithoutToken,\n          token\n        }); // Include token in user state\n        localStorage.setItem('token', token);\n      } else {\n        setUser(userData); // Ensure userData matches User type\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  const register = async (username, email, password) => {\n    try {\n      const userData = await api.register({\n        username,\n        email,\n        password\n      });\n      // Check if token exists in response\n      if ('token' in userData) {\n        const {\n          token,\n          ...userDataWithoutToken\n        } = userData;\n        setUser({\n          ...userDataWithoutToken,\n          token\n        }); // Include token in user state\n        localStorage.setItem('token', token);\n      } else {\n        setUser(userData); // Ensure userData matches User type\n      }\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","login","username","password","userData","userDataWithoutToken","setItem","error","console","logout","removeItem","register","email","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User } from '../types/Note';\r\nimport { api } from '../services/api';\r\n\r\ninterface AuthContextType {\r\n    user: User | null;\r\n    login: (username: string, password: string) => Promise<void>;\r\n    logout: () => void;\r\n    register: (username: string, email: string, password: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [user, setUser] = useState<User | null>(null);\r\n\r\n    useEffect(() => {\r\n        // Verifică dacă există un token salvat\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            // Implementează logica de verificare a tokenului\r\n        }\r\n    }, []);\r\n\r\n    const login = async (username: string, password: string) => {\r\n        try {\r\n            const userData = await api.login({ username, password });\r\n            // Assuming userData contains both user info and token\r\n            if ('token' in userData) {\r\n                const { token, ...userDataWithoutToken } = userData as User & { token: string };\r\n                setUser({ ...userDataWithoutToken, token }); // Include token in user state\r\n                localStorage.setItem('token', token);\r\n            } else {\r\n                setUser(userData as User); // Ensure userData matches User type\r\n            }\r\n        } catch (error) {\r\n            console.error('Login failed:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('token');\r\n    };\r\n\r\n    const register = async (username: string, email: string, password: string) => {\r\n        try {\r\n            const userData = await api.register({ username, email, password });\r\n            // Check if token exists in response\r\n            if ('token' in userData) {\r\n                const { token, ...userDataWithoutToken } = userData as User & { token: string };\r\n                setUser({ ...userDataWithoutToken, token }); // Include token in user state\r\n                localStorage.setItem('token', token);\r\n            } else {\r\n                setUser(userData as User); // Ensure userData matches User type\r\n            }\r\n        } catch (error) {\r\n            console.error('Registration failed:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout, register }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}