{"ast":null,"code":"import { api } from './api';\nclass NotificationService {\n  async getNotifications() {\n    const response = await api.get('/notifications');\n    return response.data;\n  }\n  async markAsRead(notificationId) {\n    await api.put(`/notifications/${notificationId}/read`);\n  }\n  async markAllAsRead() {\n    await api.put('/notifications/read-all');\n  }\n}\nexport const notificationService = new NotificationService();","map":{"version":3,"names":["api","NotificationService","getNotifications","response","get","data","markAsRead","notificationId","put","markAllAsRead","notificationService"],"sources":["D:/_master/v5/notepad-plus/src/services/notificationService.ts"],"sourcesContent":["import { Notification } from '../types/Notification';\r\nimport { NotificationType } from '../types/NotificationType';\r\nimport { api } from './api';\r\n\r\nclass NotificationService {\r\n    async getNotifications(): Promise<Notification[]> {\r\n        const response = await api.get<Notification[]>('/notifications');\r\n        return response.data;\r\n    }\r\n\r\n    async markAsRead(notificationId: number): Promise<void> {\r\n        await api.put(`/notifications/${notificationId}/read`);\r\n    }\r\n\r\n    async markAllAsRead(): Promise<void> {\r\n        await api.put('/notifications/read-all');\r\n    }\r\n}\r\n\r\nexport const notificationService = new NotificationService(); "],"mappings":"AAEA,SAASA,GAAG,QAAQ,OAAO;AAE3B,MAAMC,mBAAmB,CAAC;EACtB,MAAMC,gBAAgBA,CAAA,EAA4B;IAC9C,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAiB,gBAAgB,CAAC;IAChE,OAAOD,QAAQ,CAACE,IAAI;EACxB;EAEA,MAAMC,UAAUA,CAACC,cAAsB,EAAiB;IACpD,MAAMP,GAAG,CAACQ,GAAG,CAAC,kBAAkBD,cAAc,OAAO,CAAC;EAC1D;EAEA,MAAME,aAAaA,CAAA,EAAkB;IACjC,MAAMT,GAAG,CAACQ,GAAG,CAAC,yBAAyB,CAAC;EAC5C;AACJ;AAEA,OAAO,MAAME,mBAAmB,GAAG,IAAIT,mBAAmB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}