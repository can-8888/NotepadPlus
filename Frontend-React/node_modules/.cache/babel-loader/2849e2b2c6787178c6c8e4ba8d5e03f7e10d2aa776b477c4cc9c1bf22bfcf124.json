{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\pages\\\\DrivePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { api } from '../services/api';\nimport './DrivePage.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DrivePage = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [currentFolder, setCurrentFolder] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showNewFolderDialog, setShowNewFolderDialog] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  const fileInputRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    // Load folders first, then handle files based on the URL\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n        const foldersResponse = await api.getFolders();\n        setFolders(foldersResponse.data || []);\n        const folderPath = location.pathname.split('/drive/')[1];\n        if (folderPath) {\n          var _foldersResponse$data;\n          const currentFolder = (_foldersResponse$data = foldersResponse.data) === null || _foldersResponse$data === void 0 ? void 0 : _foldersResponse$data.find(f => f.name === folderPath);\n          if (currentFolder) {\n            setCurrentFolder(currentFolder);\n            const filesData = await api.getFilesInFolder(currentFolder.id);\n            setFiles(filesData);\n          }\n        } else {\n          const filesData = await api.getFilesInFolder(null);\n          setFiles(filesData);\n        }\n      } catch (err) {\n        console.error('Error loading initial data:', err);\n        setError('Failed to load drive contents');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadInitialData();\n  }, [location.pathname]);\n  useEffect(() => {\n    console.log('Files state changed:', files);\n    console.log('Folders state changed:', folders);\n  }, [files, folders]);\n  useEffect(() => {\n    if (currentFolder) {\n      console.log('Current folder:', currentFolder);\n    }\n  }, [currentFolder]);\n  const loadFoldersAndFiles = async () => {\n    try {\n      setIsLoading(true);\n      const [foldersResponse, filesData] = await Promise.all([api.getFolders(), api.getFilesInFolder((currentFolder === null || currentFolder === void 0 ? void 0 : currentFolder.id) || null)]);\n      console.log('Loaded folders:', foldersResponse);\n      console.log('Loaded files:', filesData);\n      setFolders(foldersResponse.data || []);\n      setFiles(filesData);\n    } catch (err) {\n      setError('Failed to load drive contents');\n      console.error('Load error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCreateFolder = async () => {\n    if (!newFolderName.trim()) return;\n    try {\n      const newFolder = await api.createFolder(newFolderName, currentFolder === null || currentFolder === void 0 ? void 0 : currentFolder.id);\n      setFolders(prev => [...prev, newFolder]);\n      setShowNewFolderDialog(false);\n      setNewFolderName('');\n    } catch (err) {\n      setError('Failed to create folder');\n      console.error(err);\n    }\n  };\n  const handleDeleteFolder = async folderId => {\n    try {\n      await api.deleteFolder(folderId);\n      setFolders(folders.filter(f => f.id !== folderId));\n    } catch (err) {\n      setError('Failed to delete folder');\n      console.error(err);\n    }\n  };\n  const handleFolderClick = async folder => {\n    try {\n      setCurrentFolder(folder);\n      navigate(`/drive/${folder.name}`);\n      const filesData = await api.getFilesInFolder(folder.id);\n      setFiles(filesData);\n    } catch (err) {\n      console.error('Error loading folder files:', err);\n      setError('Failed to load folder contents');\n    }\n  };\n  const handleNavigateUp = async () => {\n    try {\n      setCurrentFolder(null);\n      navigate('/drive');\n      const filesData = await api.getFilesInFolder(null);\n      setFiles(filesData);\n    } catch (err) {\n      console.error('Error loading root files:', err);\n      setError('Failed to load root contents');\n    }\n  };\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    try {\n      setIsLoading(true);\n      const response = await api.uploadFile(file);\n\n      // After upload, reload both folders and files\n      const [foldersResponse, filesData] = await Promise.all([api.getFolders(), api.getFilesInFolder((currentFolder === null || currentFolder === void 0 ? void 0 : currentFolder.id) || null)]);\n      setFolders(foldersResponse.data || []);\n      setFiles(filesData);\n    } catch (err) {\n      setError('Failed to upload file');\n      console.error('Upload error:', err);\n    } finally {\n      setIsLoading(false);\n      if (event.target) {\n        event.target.value = '';\n      }\n    }\n  };\n  const handleDelete = async fileId => {\n    try {\n      await api.deleteFile(fileId);\n      setFiles(files.filter(f => f.id !== fileId));\n    } catch (err) {\n      setError('Failed to delete file');\n      console.error(err);\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drive-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drive-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"breadcrumb-item\",\n            onClick: handleNavigateUp,\n            disabled: !currentFolder,\n            children: \"\\uD83D\\uDCC1 My Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), currentFolder && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"breadcrumb-separator\",\n              children: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"breadcrumb-item current\",\n              children: currentFolder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search files...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-icon\",\n            children: \"\\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-button\",\n          onClick: () => {\n            var _fileInputRef$current;\n            return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n          },\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-new-button\",\n          onClick: () => setShowNewFolderDialog(true),\n          children: \"Create new +\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drive-content\",\n      children: [showNewFolderDialog && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-folder-dialog\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"Folder name\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateFolder,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowNewFolderDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileUpload,\n        style: {\n          display: 'none'\n        },\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 27\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this) : folders.length === 0 && files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-drive\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: \"\\uD83D\\uDCC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create a folder and upload files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-folder-button\",\n          onClick: () => setShowNewFolderDialog(true),\n          children: \"Create new folder +\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"A few tips to start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Each folder and file has a link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Install apps and backup automatically\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Change the access rights of the link to \\\"Private\\\" or set a password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Disable ads by subscribing to PRO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-container\",\n        children: [folders.filter(f => f.parentId === (currentFolder === null || currentFolder === void 0 ? void 0 : currentFolder.id)).map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item folder-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-icon\",\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            onClick: () => handleFolderClick(folder),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              children: folder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: new Date(folder.createdAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              title: \"Delete\",\n              onClick: () => handleDeleteFolder(folder.id),\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 37\n          }, this)]\n        }, `folder-${folder.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 33\n        }, this)), files.filter(f => f.folderId === (currentFolder === null || currentFolder === void 0 ? void 0 : currentFolder.id)).map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-icon\",\n            children: file.type.startsWith('image/') ? '🖼️' : '📄'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              title: file.name,\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatFileSize(file.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: new Date(file.createdAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              title: \"Download\",\n              children: \"\\u2B07\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              title: \"Share\",\n              children: \"\\uD83D\\uDD17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              title: \"Delete\",\n              onClick: () => handleDelete(file.id),\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 37\n          }, this)]\n        }, `file-${file.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n_s(DrivePage, \"7TvCiCLfwPGZQQWgziUfQTTdrGg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = DrivePage;\nexport default DrivePage;\nvar _c;\n$RefreshReg$(_c, \"DrivePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","api","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","DrivePage","_s","files","setFiles","folders","setFolders","currentFolder","setCurrentFolder","isLoading","setIsLoading","error","setError","showNewFolderDialog","setShowNewFolderDialog","newFolderName","setNewFolderName","fileInputRef","navigate","location","loadInitialData","foldersResponse","getFolders","data","folderPath","pathname","split","_foldersResponse$data","find","f","name","filesData","getFilesInFolder","id","err","console","log","loadFoldersAndFiles","Promise","all","handleCreateFolder","trim","newFolder","createFolder","prev","handleDeleteFolder","folderId","deleteFolder","filter","handleFolderClick","folder","handleNavigateUp","handleFileUpload","event","_event$target$files","file","target","response","uploadFile","value","handleDelete","fileId","deleteFile","formatFileSize","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_fileInputRef$current","current","click","onChange","e","autoFocus","ref","style","display","multiple","length","parentId","map","Date","createdAt","toLocaleDateString","title","startsWith","size","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/pages/DrivePage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { DriveFile, Folder } from '../types/File';\r\nimport { api } from '../services/api';\r\nimport './DrivePage.css';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst DrivePage: React.FC = () => {\r\n    const [files, setFiles] = useState<DriveFile[]>([]);\r\n    const [folders, setFolders] = useState<Folder[]>([]);\r\n    const [currentFolder, setCurrentFolder] = useState<Folder | null>(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [showNewFolderDialog, setShowNewFolderDialog] = useState(false);\r\n    const [newFolderName, setNewFolderName] = useState('');\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        // Load folders first, then handle files based on the URL\r\n        const loadInitialData = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const foldersResponse = await api.getFolders();\r\n                setFolders(foldersResponse.data || []);\r\n\r\n                const folderPath = location.pathname.split('/drive/')[1];\r\n                if (folderPath) {\r\n                    const currentFolder = foldersResponse.data?.find(f => f.name === folderPath);\r\n                    if (currentFolder) {\r\n                        setCurrentFolder(currentFolder);\r\n                        const filesData = await api.getFilesInFolder(currentFolder.id);\r\n                        setFiles(filesData);\r\n                    }\r\n                } else {\r\n                    const filesData = await api.getFilesInFolder(null);\r\n                    setFiles(filesData);\r\n                }\r\n            } catch (err) {\r\n                console.error('Error loading initial data:', err);\r\n                setError('Failed to load drive contents');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        loadInitialData();\r\n    }, [location.pathname]);\r\n\r\n    useEffect(() => {\r\n        console.log('Files state changed:', files);\r\n        console.log('Folders state changed:', folders);\r\n    }, [files, folders]);\r\n\r\n    useEffect(() => {\r\n        if (currentFolder) {\r\n            console.log('Current folder:', currentFolder);\r\n        }\r\n    }, [currentFolder]);\r\n\r\n    const loadFoldersAndFiles = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const [foldersResponse, filesData] = await Promise.all([\r\n                api.getFolders(),\r\n                api.getFilesInFolder(currentFolder?.id || null)\r\n            ]);\r\n            \r\n            console.log('Loaded folders:', foldersResponse);\r\n            console.log('Loaded files:', filesData);\r\n            \r\n            setFolders(foldersResponse.data || []);\r\n            setFiles(filesData);\r\n        } catch (err) {\r\n            setError('Failed to load drive contents');\r\n            console.error('Load error:', err);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateFolder = async () => {\r\n        if (!newFolderName.trim()) return;\r\n\r\n        try {\r\n            const newFolder = await api.createFolder(newFolderName, currentFolder?.id);\r\n            setFolders(prev => [...prev, newFolder]);\r\n            setShowNewFolderDialog(false);\r\n            setNewFolderName('');\r\n        } catch (err) {\r\n            setError('Failed to create folder');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleDeleteFolder = async (folderId: number) => {\r\n        try {\r\n            await api.deleteFolder(folderId);\r\n            setFolders(folders.filter(f => f.id !== folderId));\r\n        } catch (err) {\r\n            setError('Failed to delete folder');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleFolderClick = async (folder: Folder) => {\r\n        try {\r\n            setCurrentFolder(folder);\r\n            navigate(`/drive/${folder.name}`);\r\n            const filesData = await api.getFilesInFolder(folder.id);\r\n            setFiles(filesData);\r\n        } catch (err) {\r\n            console.error('Error loading folder files:', err);\r\n            setError('Failed to load folder contents');\r\n        }\r\n    };\r\n\r\n    const handleNavigateUp = async () => {\r\n        try {\r\n            setCurrentFolder(null);\r\n            navigate('/drive');\r\n            const filesData = await api.getFilesInFolder(null);\r\n            setFiles(filesData);\r\n        } catch (err) {\r\n            console.error('Error loading root files:', err);\r\n            setError('Failed to load root contents');\r\n        }\r\n    };\r\n\r\n    const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = event.target.files?.[0];\r\n        if (!file) return;\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await api.uploadFile(file);\r\n            \r\n            // After upload, reload both folders and files\r\n            const [foldersResponse, filesData] = await Promise.all([\r\n                api.getFolders(),\r\n                api.getFilesInFolder(currentFolder?.id || null)\r\n            ]);\r\n            \r\n            setFolders(foldersResponse.data || []);\r\n            setFiles(filesData);\r\n            \r\n        } catch (err) {\r\n            setError('Failed to upload file');\r\n            console.error('Upload error:', err);\r\n        } finally {\r\n            setIsLoading(false);\r\n            if (event.target) {\r\n                event.target.value = '';\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (fileId: number) => {\r\n        try {\r\n            await api.deleteFile(fileId);\r\n            setFiles(files.filter(f => f.id !== fileId));\r\n        } catch (err) {\r\n            setError('Failed to delete file');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const formatFileSize = (bytes: number): string => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n\r\n    return (\r\n        <div className=\"drive-page\">\r\n            <div className=\"drive-header\">\r\n                <div className=\"header-left\">\r\n                    <div className=\"breadcrumb\">\r\n                        <button \r\n                            className=\"breadcrumb-item\"\r\n                            onClick={handleNavigateUp}\r\n                            disabled={!currentFolder}\r\n                        >\r\n                            📁 My Files\r\n                        </button>\r\n                        {currentFolder && (\r\n                            <>\r\n                                <span className=\"breadcrumb-separator\">/</span>\r\n                                <span className=\"breadcrumb-item current\">\r\n                                    {currentFolder.name}\r\n                                </span>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"header-actions\">\r\n                    <div className=\"search-box\">\r\n                        <input type=\"text\" placeholder=\"Search files...\" />\r\n                        <span className=\"search-icon\">🔍</span>\r\n                    </div>\r\n                    <button \r\n                        className=\"upload-button\"\r\n                        onClick={() => fileInputRef.current?.click()}\r\n                    >\r\n                        Upload\r\n                    </button>\r\n                    <button \r\n                        className=\"create-new-button\"\r\n                        onClick={() => setShowNewFolderDialog(true)}\r\n                    >\r\n                        Create new +\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"drive-content\">\r\n                {showNewFolderDialog && (\r\n                    <div className=\"new-folder-dialog\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newFolderName}\r\n                            onChange={(e) => setNewFolderName(e.target.value)}\r\n                            placeholder=\"Folder name\"\r\n                            autoFocus\r\n                        />\r\n                        <button onClick={handleCreateFolder}>Create</button>\r\n                        <button onClick={() => setShowNewFolderDialog(false)}>Cancel</button>\r\n                    </div>\r\n                )}\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    ref={fileInputRef}\r\n                    onChange={handleFileUpload}\r\n                    style={{ display: 'none' }}\r\n                    multiple\r\n                />\r\n\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                \r\n                {isLoading ? (\r\n                    <div className=\"loading\">Loading...</div>\r\n                ) : folders.length === 0 && files.length === 0 ? (\r\n                    <div className=\"empty-drive\">\r\n                        <div className=\"empty-icon\">📁</div>\r\n                        <h3>Create a folder and upload files</h3>\r\n                        <button \r\n                            className=\"create-folder-button\"\r\n                            onClick={() => setShowNewFolderDialog(true)}\r\n                        >\r\n                            Create new folder +\r\n                        </button>\r\n                        <div className=\"tips\">\r\n                            <p>A few tips to start:</p>\r\n                            <ol>\r\n                                <li>Each folder and file has a link</li>\r\n                                <li>Install apps and backup automatically</li>\r\n                                <li>Change the access rights of the link to \"Private\" or set a password</li>\r\n                                <li>Disable ads by subscribing to PRO</li>\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"files-container\">\r\n                        {folders\r\n                            .filter(f => f.parentId === currentFolder?.id)\r\n                            .map(folder => (\r\n                                <div key={`folder-${folder.id}`} className=\"file-item folder-item\">\r\n                                    <div className=\"file-icon\">📁</div>\r\n                                    <div \r\n                                        className=\"file-info\"\r\n                                        onClick={() => handleFolderClick(folder)}\r\n                                    >\r\n                                        <div className=\"file-name\">{folder.name}</div>\r\n                                        <div className=\"file-meta\">\r\n                                            <span>Folder</span>\r\n                                            <span>•</span>\r\n                                            <span>{new Date(folder.createdAt).toLocaleDateString()}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"file-actions\">\r\n                                        <button \r\n                                            className=\"action-button\" \r\n                                            title=\"Delete\"\r\n                                            onClick={() => handleDeleteFolder(folder.id)}\r\n                                        >\r\n                                            🗑️\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n\r\n                        {files\r\n                            .filter(f => f.folderId === currentFolder?.id)\r\n                            .map(file => (\r\n                                <div key={`file-${file.id}`} className=\"file-item\">\r\n                                    <div className=\"file-icon\">\r\n                                        {file.type.startsWith('image/') ? '🖼️' : '📄'}\r\n                                    </div>\r\n                                    <div className=\"file-info\">\r\n                                        <div className=\"file-name\" title={file.name}>\r\n                                            {file.name}\r\n                                        </div>\r\n                                        <div className=\"file-meta\">\r\n                                            <span>{formatFileSize(file.size)}</span>\r\n                                            <span>•</span>\r\n                                            <span>{new Date(file.createdAt).toLocaleDateString()}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"file-actions\">\r\n                                        <button className=\"action-button\" title=\"Download\">⬇️</button>\r\n                                        <button className=\"action-button\" title=\"Share\">🔗</button>\r\n                                        <button \r\n                                            className=\"action-button\" \r\n                                            title=\"Delete\" \r\n                                            onClick={() => handleDelete(file.id)}\r\n                                        >\r\n                                            🗑️\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DrivePage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}