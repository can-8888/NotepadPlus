{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteEditor from './components/NoteEditor';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { useAuth } from './contexts/AuthContext';\nimport { api } from './services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [showRegister, setShowRegister] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [sharedNotes, setSharedNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (user) {\n      console.log('User logged in, loading notes...'); // Debug log\n      loadAllNotes();\n    }\n  }, [user]); // Only depend on user\n\n  const loadAllNotes = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      console.log('Loading notes for user:', user);\n      const [myNotes, shared] = await Promise.all([api.getNotes(), api.getSharedNotes()]);\n      console.log('API Response - myNotes:', myNotes);\n      console.log('API Response - shared:', shared);\n      if (Array.isArray(myNotes)) {\n        setNotes(myNotes);\n      } else {\n        console.error('Invalid notes response:', myNotes);\n      }\n      if (Array.isArray(shared)) {\n        setSharedNotes(shared);\n      } else {\n        console.error('Invalid shared notes response:', shared);\n      }\n    } catch (err) {\n      console.error('Error loading notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteNote = async noteId => {\n    try {\n      setError(null);\n      await api.deleteNote(noteId);\n      setNotes(notes.filter(note => note.id !== noteId));\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        setSelectedNote(undefined);\n      }\n    } catch (err) {\n      setError('Failed to delete note');\n      console.error(err);\n    }\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      setError(null);\n      if (!user) {\n        throw new Error('User not authenticated');\n      }\n      let savedNote;\n      if (selectedNote) {\n        // Update existing note\n        savedNote = await api.updateNote(selectedNote.id, {\n          ...noteData,\n          userId: user.id\n        });\n      } else {\n        // Create new note\n        savedNote = await api.createNote({\n          ...noteData,\n          userId: user.id\n        });\n      }\n\n      // Update notes array\n      setNotes(prevNotes => {\n        const newNotes = selectedNote ? prevNotes.map(note => note.id === savedNote.id ? savedNote : note) : [...prevNotes, savedNote];\n        console.log('Updated notes array:', newNotes); // Debug log\n        return newNotes;\n      });\n      setSelectedNote(undefined);\n    } catch (err) {\n      setError('Failed to save note');\n      console.error(err);\n    }\n  };\n  const handleMakePublic = async noteId => {\n    try {\n      await api.makeNotePublic(noteId);\n      await loadAllNotes(); // Reload notes to get updated status\n    } catch (err) {\n      setError('Failed to make note public');\n      console.error(err);\n    }\n  };\n  const sortNotes = notesToSort => {\n    return [...notesToSort].sort((a, b) => {\n      switch (sortBy) {\n        case 'date-desc':\n          return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\n        case 'date-asc':\n          return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          return a.category.localeCompare(b.category);\n        default:\n          return 0;\n      }\n    });\n  };\n  const filteredAndSortedNotes = sortNotes(notes.filter(note => {\n    if (!(note !== null && note !== void 0 && note.title)) return false;\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !selectedCategory || note.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  }));\n  const renderSortOptions = () => {\n    const options = [{\n      value: 'date-desc',\n      label: 'Newest First'\n    }, {\n      value: 'date-asc',\n      label: 'Oldest First'\n    }, {\n      value: 'title',\n      label: 'Title'\n    }, {\n      value: 'category',\n      label: 'Category'\n    }];\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this));\n  };\n  const renderCategoryOptions = () => {\n    const categories = Array.from(new Set(notes.map(note => note.category))).filter(category => category);\n    return [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All Categories\"\n    }, \"all\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), ...categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this))];\n  };\n\n  // Add debug logging for filtered notes\n  useEffect(() => {\n    console.log('Current notes:', notes);\n    console.log('Filtered notes:', filteredAndSortedNotes);\n  }, [notes, filteredAndSortedNotes]);\n  useEffect(() => {\n    console.log('Notes state updated:', notes);\n  }, [notes]);\n  const handleLogout = () => {\n    // Clear UI state\n    setSelectedNote(undefined);\n    setSearchTerm('');\n    setSelectedCategory('');\n    setSortBy('date-desc');\n    // Don't clear notes here, they'll be reloaded on next login\n    logout();\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notepad+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"auth-container\",\n        children: showRegister ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRegister(false),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRegister(true),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notepad+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search notes...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"category-filter\",\n        children: renderCategoryOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        className: \"sort-select\",\n        children: renderSortOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NoteList, {\n          notes: filteredAndSortedNotes,\n          sharedNotes: sharedNotes,\n          selectedNote: selectedNote,\n          onNoteSelect: setSelectedNote,\n          onDeleteNote: handleDeleteNote,\n          onMakePublic: handleMakePublic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NoteEditor, {\n          note: selectedNote,\n          onSave: handleSaveNote,\n          onCancel: () => setSelectedNote(undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"suVwbkA9IwJThdW0WhiqJqXzmLA=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NoteList","NoteEditor","Login","Register","useAuth","api","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","logout","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","console","log","loadAllNotes","myNotes","shared","Promise","all","getNotes","getSharedNotes","Array","isArray","err","Error","message","handleDeleteNote","noteId","deleteNote","filter","note","id","handleSaveNote","noteData","savedNote","updateNote","userId","createNote","prevNotes","newNotes","map","handleMakePublic","makeNotePublic","sortNotes","notesToSort","sort","a","b","Date","updatedAt","getTime","title","localeCompare","category","filteredAndSortedNotes","matchesSearch","toLowerCase","includes","content","matchesCategory","renderSortOptions","options","value","label","option","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCategoryOptions","categories","from","Set","handleLogout","className","onClick","username","type","placeholder","onChange","e","target","onNoteSelect","onDeleteNote","onMakePublic","onSave","onCancel","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note } from './types/Note';\r\nimport { api } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title' | 'category';\r\n\r\nfunction App() {\r\n    const { user, logout } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            \r\n            console.log('Loading notes for user:', user);\r\n            \r\n            const [myNotes, shared] = await Promise.all([\r\n                api.getNotes(),\r\n                api.getSharedNotes()\r\n            ]);\r\n            \r\n            console.log('API Response - myNotes:', myNotes);\r\n            console.log('API Response - shared:', shared);\r\n            \r\n            if (Array.isArray(myNotes)) {\r\n                setNotes(myNotes);\r\n            } else {\r\n                console.error('Invalid notes response:', myNotes);\r\n            }\r\n            \r\n            if (Array.isArray(shared)) {\r\n                setSharedNotes(shared);\r\n            } else {\r\n                console.error('Invalid shared notes response:', shared);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error loading notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            setError(null);\r\n            if (!user) {\r\n                throw new Error('User not authenticated');\r\n            }\r\n\r\n            let savedNote: Note;\r\n            if (selectedNote) {\r\n                // Update existing note\r\n                savedNote = await api.updateNote(selectedNote.id, {\r\n                    ...noteData,\r\n                    userId: user.id\r\n                });\r\n            } else {\r\n                // Create new note\r\n                savedNote = await api.createNote({\r\n                    ...noteData,\r\n                    userId: user.id\r\n                });\r\n            }\r\n\r\n            // Update notes array\r\n            setNotes(prevNotes => {\r\n                const newNotes = selectedNote\r\n                    ? prevNotes.map(note => note.id === savedNote.id ? savedNote : note)\r\n                    : [...prevNotes, savedNote];\r\n                console.log('Updated notes array:', newNotes); // Debug log\r\n                return newNotes;\r\n            });\r\n\r\n            setSelectedNote(undefined);\r\n        } catch (err) {\r\n            setError('Failed to save note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            await api.makeNotePublic(noteId);\r\n            await loadAllNotes(); // Reload notes to get updated status\r\n        } catch (err) {\r\n            setError('Failed to make note public');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notesToSort: Note[]): Note[] => {\r\n        return [...notesToSort].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    return a.category.localeCompare(b.category);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filteredAndSortedNotes = sortNotes(\r\n        notes.filter(note => {\r\n            if (!note?.title) return false;\r\n            \r\n            const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n            const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n            return matchesSearch && matchesCategory;\r\n        })\r\n    );\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredAndSortedNotes);\r\n    }, [notes, filteredAndSortedNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    const handleLogout = () => {\r\n        // Clear UI state\r\n        setSelectedNote(undefined);\r\n        setSearchTerm('');\r\n        setSelectedCategory('');\r\n        setSortBy('date-desc');\r\n        // Don't clear notes here, they'll be reloaded on next login\r\n        logout();\r\n    };\r\n\r\n    if (!user) {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1>Notepad+</h1>\r\n                </header>\r\n                <main className=\"auth-container\">\r\n                    {showRegister ? (\r\n                        <>\r\n                            <Register />\r\n                            <p>\r\n                                Already have an account?{' '}\r\n                                <button onClick={() => setShowRegister(false)}>\r\n                                    Login\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Login />\r\n                            <p>\r\n                                Don't have an account?{' '}\r\n                                <button onClick={() => setShowRegister(true)}>\r\n                                    Register\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Notepad+</h1>\r\n                <div className=\"user-info\">\r\n                    <span>Welcome, {user.username}!</span>\r\n                    <button className=\"logout-button\" onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            \r\n            <div className=\"search-filters\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search notes...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-input\"\r\n                />\r\n                <select\r\n                    value={selectedCategory}\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                    className=\"category-filter\"\r\n                >\r\n                    {renderCategoryOptions()}\r\n                </select>\r\n                <select\r\n                    value={sortBy}\r\n                    onChange={(e) => setSortBy(e.target.value as SortOption)}\r\n                    className=\"sort-select\"\r\n                >\r\n                    {renderSortOptions()}\r\n                </select>\r\n            </div>\r\n\r\n            <main className=\"App-main\">\r\n                {isLoading ? (\r\n                    <div className=\"loading\">Loading...</div>\r\n                ) : (\r\n                    <>\r\n                        <NoteList \r\n                            notes={filteredAndSortedNotes}\r\n                            sharedNotes={sharedNotes}\r\n                            selectedNote={selectedNote}\r\n                            onNoteSelect={setSelectedNote}\r\n                            onDeleteNote={handleDeleteNote}\r\n                            onMakePublic={handleMakePublic}\r\n                        />\r\n                        <NoteEditor \r\n                            note={selectedNote}\r\n                            onSave={handleSaveNote}\r\n                            onCancel={() => setSelectedNote(undefined)}\r\n                        />\r\n                    </>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}