{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { useAuth } from './contexts/AuthContext';\nimport { api, getCurrentUser } from './services/api';\nimport { Routes, Route, useNavigate, useLocation, BrowserRouter as Router, Navigate } from 'react-router-dom';\nimport NotesPage from './pages/NotesPage';\nimport Sidebar from './components/Sidebar';\nimport DrivePage from './pages/DrivePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [showRegister, setShowRegister] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [sharedNotes, setSharedNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [shareDialogNoteId, setShareDialogNoteId] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\n  const [currentView, setCurrentView] = useState('my-notes');\n  const [publicNotes, setPublicNotes] = useState([]);\n  const [sharedWithMeNotes, setSharedWithMeNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (user) {\n      console.log('User logged in, loading notes...'); // Debug log\n      loadAllNotes();\n    }\n  }, [user]); // Only depend on user\n\n  const loadAllNotes = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const user = getCurrentUser();\n      console.log('Loading notes for user:', user);\n\n      // Load all types of notes in parallel\n      const [myNotes, sharedNotes, publicNotes] = await Promise.all([api.getNotes(), api.getSharedNotes(), api.getPublicNotes()]);\n      console.log('API Response - myNotes:', myNotes);\n      console.log('API Response - shared:', sharedNotes);\n      console.log('API Response - public:', publicNotes);\n      setNotes(myNotes);\n      setSharedWithMeNotes(sharedNotes);\n      setPublicNotes(publicNotes);\n    } catch (err) {\n      console.error('Error loading notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteNote = async noteId => {\n    try {\n      setError(null);\n      await api.deleteNote(noteId);\n      setNotes(notes.filter(note => note.id !== noteId));\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        setSelectedNote(undefined);\n      }\n    } catch (err) {\n      setError('Failed to delete note');\n      console.error(err);\n    }\n  };\n  const handleCreateNote = () => {\n    setSelectedNote(undefined);\n    setIsCreating(true);\n    setIsNoteModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    console.log('Modal close triggered');\n    setIsNoteModalOpen(false);\n    setIsCreating(false);\n    setSelectedNote(undefined);\n  };\n  const handleNoteSelect = note => {\n    console.log('Note selected:', note);\n    setSelectedNote(note);\n    setIsNoteModalOpen(true);\n    console.log('Modal opened');\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      console.log('Saving note:', noteData);\n      if (noteData.id) {\n        // Updating existing note\n        await api.updateNote(noteData.id, noteData);\n      } else {\n        // Creating new note\n        await api.createNote(noteData);\n      }\n      await loadAllNotes();\n      setSelectedNote(undefined);\n      setIsCreating(false);\n      console.log('Note saved successfully');\n      setIsNoteModalOpen(false);\n    } catch (err) {\n      console.error('Failed to save note:', err);\n      setError('Failed to save note');\n    }\n  };\n  const handleMakePublic = async noteId => {\n    try {\n      console.log('handleMakePublic called with noteId:', noteId);\n      if (!noteId) {\n        console.error('Invalid note ID:', noteId);\n        return;\n      }\n      const updatedNote = await api.makeNotePublic(noteId);\n      console.log('Note successfully made public:', updatedNote);\n\n      // Update both notes lists\n      setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n      setPublicNotes(prevPublicNotes => [...prevPublicNotes, updatedNote]);\n\n      // Show success message\n      setMessage({\n        type: 'success',\n        text: 'Note is now public'\n      });\n\n      // Refresh lists\n      await loadAllNotes();\n      await loadPublicNotes();\n    } catch (error) {\n      console.error('Error making note public:', error);\n      setError(error instanceof Error ? error.message : 'Failed to make note public');\n    }\n  };\n  const sortNotes = notesToSort => {\n    return [...notesToSort].sort((a, b) => {\n      switch (sortBy) {\n        case 'date-desc':\n          return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\n        case 'date-asc':\n          return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          return a.category.localeCompare(b.category);\n        default:\n          return 0;\n      }\n    });\n  };\n  const filteredAndSortedNotes = sortNotes(notes.filter(note => {\n    var _user$id;\n    // First filter by user\n    if (!user) return false;\n    const userId = (_user$id = user.id) !== null && _user$id !== void 0 ? _user$id : 0;\n    const noteUserId = note.userId;\n    if (userId !== noteUserId) return false;\n\n    // Then filter by search and category\n    if (!(note !== null && note !== void 0 && note.title)) return false;\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !selectedCategory || note.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  }));\n  const renderSortOptions = () => {\n    const options = [{\n      value: 'date-desc',\n      label: 'Newest First'\n    }, {\n      value: 'date-asc',\n      label: 'Oldest First'\n    }, {\n      value: 'title',\n      label: 'Title'\n    }, {\n      value: 'category',\n      label: 'Category'\n    }];\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this));\n  };\n  const renderCategoryOptions = () => {\n    const categories = Array.from(new Set(notes.map(note => note.category))).filter(category => category);\n    return [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All Categories\"\n    }, \"all\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), ...categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this))];\n  };\n\n  // Add debug logging for filtered notes\n  useEffect(() => {\n    console.log('Current notes:', notes);\n    console.log('Filtered notes:', filteredAndSortedNotes);\n  }, [notes, filteredAndSortedNotes]);\n  useEffect(() => {\n    console.log('Notes state updated:', notes);\n  }, [notes]);\n\n  // Add useEffect to monitor sharedNotes changes\n  useEffect(() => {\n    console.log('Shared notes updated:', sharedNotes);\n  }, [sharedNotes]);\n  const handleLogout = () => {\n    // Clear UI state\n    setSelectedNote(undefined);\n    setSearchTerm('');\n    setSelectedCategory('');\n    setSortBy('date-desc');\n    // Don't clear notes here, they'll be reloaded on next login\n    logout();\n  };\n  const handleShare = noteId => {\n    setShareDialogNoteId(noteId);\n  };\n  const handleShareComplete = async () => {\n    await loadAllNotes(); // Reload notes to update the UI\n    setShareDialogNoteId(null);\n  };\n  const loadPublicNotes = async () => {\n    try {\n      console.log('Loading public notes...');\n      const publicNotes = await api.getPublicNotes();\n      console.log('Public notes received:', publicNotes);\n      setPublicNotes(publicNotes);\n    } catch (err) {\n      console.error('Error loading public notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load public notes');\n    }\n  };\n  const loadSharedWithMeNotes = async () => {\n    try {\n      console.log('Loading shared notes...');\n      setIsLoading(true);\n      const shared = await api.getSharedWithMeNotes();\n      console.log('Shared notes received:', shared);\n      if (Array.isArray(shared)) {\n        setSharedWithMeNotes(shared);\n      } else {\n        console.error('Received invalid shared notes data:', shared);\n        setError('Invalid shared notes data received');\n      }\n    } catch (err) {\n      console.error('Failed to load shared notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load shared notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      console.log('Current view:', currentView);\n      switch (currentView) {\n        case 'my-notes':\n          loadAllNotes();\n          break;\n        case 'shared-notes':\n          loadSharedWithMeNotes();\n          break;\n        case 'public-notes':\n          loadPublicNotes();\n          break;\n      }\n    }\n  }, [currentView, user]);\n\n  // Update setCurrentView to also update the URL\n  const handleViewChange = view => {\n    setCurrentView(view);\n    switch (view) {\n      case 'my-notes':\n        navigate('/notes');\n        break;\n      case 'shared-notes':\n        navigate('/shared-notes');\n        break;\n      case 'public-notes':\n        navigate('/public-notes');\n        break;\n    }\n  };\n\n  // Add effect to sync URL with current view\n  useEffect(() => {\n    const path = location.pathname;\n    if (path === '/public-notes' && currentView !== 'public-notes') {\n      setCurrentView('public-notes');\n    } else if (path === '/shared-notes' && currentView !== 'shared-notes') {\n      setCurrentView('shared-notes');\n    } else if (path === '/notes' && currentView !== 'my-notes') {\n      setCurrentView('my-notes');\n    }\n  }, [location.pathname]);\n  const handleShareNote = async (noteId, collaboratorId) => {\n    try {\n      const updatedNote = await api.shareNote(noteId, collaboratorId);\n\n      // Update the notes list with the updated note\n      setNotes(notes.map(note => note.id === noteId ? updatedNote : note));\n\n      // Show success message\n      setMessage({\n        type: 'success',\n        text: 'Note shared successfully'\n      });\n    } catch (error) {\n      console.error('Error sharing note:', error);\n      setMessage({\n        type: 'error',\n        text: error instanceof Error ? error.message : 'Failed to share note'\n      });\n    }\n  };\n  const loadPersonalNotes = async () => {\n    try {\n      setIsLoading(true);\n      const fetchedNotes = await api.getNotes();\n      setNotes(fetchedNotes);\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Failed to load notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadPersonalNotes();\n  }, []);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notepad+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"auth-container\",\n        children: showRegister ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"switch-auth-button\",\n            onClick: () => setShowRegister(false),\n            children: \"Already have an account? Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"switch-auth-button\",\n            onClick: () => setShowRegister(true),\n            children: \"Don't have an account? Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(NotesPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/notes\",\n            element: /*#__PURE__*/_jsxDEV(NotesPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/shared-notes\",\n            element: /*#__PURE__*/_jsxDEV(NotesPage, {\n              type: \"shared\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/public-notes\",\n            element: /*#__PURE__*/_jsxDEV(NotesPage, {\n              type: \"public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/drive\",\n            element: /*#__PURE__*/_jsxDEV(DrivePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/notes/new\",\n            element: /*#__PURE__*/_jsxDEV(NotesPage, {\n              viewType: \"my-notes\",\n              isCreating: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/notes\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"1/66/DYIIfygxVoCfvbUN04lbrg=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Register","useAuth","api","getCurrentUser","Routes","Route","useNavigate","useLocation","BrowserRouter","Router","Navigate","NotesPage","Sidebar","DrivePage","jsxDEV","_jsxDEV","App","_s","user","logout","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","shareDialogNoteId","setShareDialogNoteId","isCreating","setIsCreating","isNoteModalOpen","setIsNoteModalOpen","currentView","setCurrentView","publicNotes","setPublicNotes","sharedWithMeNotes","setSharedWithMeNotes","message","setMessage","navigate","location","console","log","loadAllNotes","myNotes","Promise","all","getNotes","getSharedNotes","getPublicNotes","err","Error","handleDeleteNote","noteId","deleteNote","filter","note","id","handleCreateNote","handleCloseModal","handleNoteSelect","handleSaveNote","noteData","updateNote","createNote","handleMakePublic","updatedNote","makeNotePublic","prevNotes","prevPublicNotes","type","text","loadPublicNotes","sortNotes","notesToSort","sort","a","b","Date","updatedAt","getTime","title","localeCompare","category","filteredAndSortedNotes","_user$id","userId","noteUserId","matchesSearch","toLowerCase","includes","content","matchesCategory","renderSortOptions","options","value","label","map","option","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCategoryOptions","categories","Array","from","Set","handleLogout","handleShare","handleShareComplete","loadSharedWithMeNotes","shared","getSharedWithMeNotes","isArray","handleViewChange","view","path","pathname","handleShareNote","collaboratorId","shareNote","loadPersonalNotes","fetchedNotes","className","onClick","element","viewType","to","replace","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note, NoteApiResponse, NoteStatus } from './types/Note';\r\nimport { api, getCurrentUser } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\nimport Modal from './components/Modal';\r\nimport { Routes, Route, useNavigate, useLocation, BrowserRouter as Router, Navigate } from 'react-router-dom';\r\nimport NotesPage from './pages/NotesPage';\r\nimport Sidebar from './components/Sidebar';\r\nimport DrivePage from './pages/DrivePage';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title' | 'category';\r\ntype ViewType = 'my-notes' | 'shared-notes' | 'public-notes';\r\n\r\nfunction App() {\r\n    const { user, logout } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [shareDialogNoteId, setShareDialogNoteId] = useState<number | null>(null);\r\n    const [isCreating, setIsCreating] = useState(false);\r\n    const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\r\n    const [currentView, setCurrentView] = useState<ViewType>('my-notes');\r\n    const [publicNotes, setPublicNotes] = useState<Note[]>([]);\r\n    const [sharedWithMeNotes, setSharedWithMeNotes] = useState<Note[]>([]);\r\n    const [message, setMessage] = useState<{ type: string; text: string } | null>(null);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            const user = getCurrentUser();\r\n            console.log('Loading notes for user:', user);\r\n            \r\n            // Load all types of notes in parallel\r\n            const [myNotes, sharedNotes, publicNotes] = await Promise.all([\r\n                api.getNotes(),\r\n                api.getSharedNotes(),\r\n                api.getPublicNotes()\r\n            ]);\r\n            \r\n            console.log('API Response - myNotes:', myNotes);\r\n            console.log('API Response - shared:', sharedNotes);\r\n            console.log('API Response - public:', publicNotes);\r\n            \r\n            setNotes(myNotes);\r\n            setSharedWithMeNotes(sharedNotes);\r\n            setPublicNotes(publicNotes);\r\n        } catch (err) {\r\n            console.error('Error loading notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCreateNote = () => {\r\n        setSelectedNote(undefined);\r\n        setIsCreating(true);\r\n        setIsNoteModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        console.log('Modal close triggered');\r\n        setIsNoteModalOpen(false);\r\n        setIsCreating(false);\r\n        setSelectedNote(undefined);\r\n    };\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        console.log('Note selected:', note);\r\n        setSelectedNote(note);\r\n        setIsNoteModalOpen(true);\r\n        console.log('Modal opened');\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            console.log('Saving note:', noteData);\r\n            if (noteData.id) {\r\n                // Updating existing note\r\n                await api.updateNote(noteData.id, noteData);\r\n            } else {\r\n                // Creating new note\r\n                await api.createNote(noteData);\r\n            }\r\n            await loadAllNotes();\r\n            setSelectedNote(undefined);\r\n            setIsCreating(false);\r\n            console.log('Note saved successfully');\r\n            setIsNoteModalOpen(false);\r\n        } catch (err) {\r\n            console.error('Failed to save note:', err);\r\n            setError('Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            console.log('handleMakePublic called with noteId:', noteId);\r\n            if (!noteId) {\r\n                console.error('Invalid note ID:', noteId);\r\n                return;\r\n            }\r\n\r\n            const updatedNote = await api.makeNotePublic(noteId);\r\n            console.log('Note successfully made public:', updatedNote);\r\n\r\n            // Update both notes lists\r\n            setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\r\n            setPublicNotes(prevPublicNotes => [...prevPublicNotes, updatedNote]);\r\n\r\n            // Show success message\r\n            setMessage({ type: 'success', text: 'Note is now public' });\r\n\r\n            // Refresh lists\r\n            await loadAllNotes();\r\n            await loadPublicNotes();\r\n        } catch (error) {\r\n            console.error('Error making note public:', error);\r\n            setError(error instanceof Error ? error.message : 'Failed to make note public');\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notesToSort: Note[]): Note[] => {\r\n        return [...notesToSort].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    return a.category.localeCompare(b.category);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filteredAndSortedNotes = sortNotes(\r\n        notes.filter(note => {\r\n            // First filter by user\r\n            if (!user) return false;\r\n            const userId = user.id ?? 0;\r\n            const noteUserId = note.userId;\r\n            if (userId !== noteUserId) return false;\r\n            \r\n            // Then filter by search and category\r\n            if (!note?.title) return false;\r\n            \r\n            const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n            const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n            return matchesSearch && matchesCategory;\r\n        })\r\n    );\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredAndSortedNotes);\r\n    }, [notes, filteredAndSortedNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    // Add useEffect to monitor sharedNotes changes\r\n    useEffect(() => {\r\n        console.log('Shared notes updated:', sharedNotes);\r\n    }, [sharedNotes]);\r\n\r\n    const handleLogout = () => {\r\n        // Clear UI state\r\n        setSelectedNote(undefined);\r\n        setSearchTerm('');\r\n        setSelectedCategory('');\r\n        setSortBy('date-desc');\r\n        // Don't clear notes here, they'll be reloaded on next login\r\n        logout();\r\n    };\r\n\r\n    const handleShare = (noteId: number) => {\r\n        setShareDialogNoteId(noteId);\r\n    };\r\n\r\n    const handleShareComplete = async () => {\r\n        await loadAllNotes(); // Reload notes to update the UI\r\n        setShareDialogNoteId(null);\r\n    };\r\n\r\n    const loadPublicNotes = async () => {\r\n        try {\r\n            console.log('Loading public notes...');\r\n            const publicNotes = await api.getPublicNotes();\r\n            console.log('Public notes received:', publicNotes);\r\n            setPublicNotes(publicNotes);\r\n        } catch (err) {\r\n            console.error('Error loading public notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load public notes');\r\n        }\r\n    };\r\n\r\n    const loadSharedWithMeNotes = async () => {\r\n        try {\r\n            console.log('Loading shared notes...');\r\n            setIsLoading(true);\r\n            const shared = await api.getSharedWithMeNotes();\r\n            console.log('Shared notes received:', shared);\r\n            if (Array.isArray(shared)) {\r\n                setSharedWithMeNotes(shared);\r\n            } else {\r\n                console.error('Received invalid shared notes data:', shared);\r\n                setError('Invalid shared notes data received');\r\n            }\r\n        } catch (err) {\r\n            console.error('Failed to load shared notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load shared notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('Current view:', currentView);\r\n            switch (currentView) {\r\n                case 'my-notes':\r\n                    loadAllNotes();\r\n                    break;\r\n                case 'shared-notes':\r\n                    loadSharedWithMeNotes();\r\n                    break;\r\n                case 'public-notes':\r\n                    loadPublicNotes();\r\n                    break;\r\n            }\r\n        }\r\n    }, [currentView, user]);\r\n\r\n    // Update setCurrentView to also update the URL\r\n    const handleViewChange = (view: ViewType) => {\r\n        setCurrentView(view);\r\n        switch (view) {\r\n            case 'my-notes':\r\n                navigate('/notes');\r\n                break;\r\n            case 'shared-notes':\r\n                navigate('/shared-notes');\r\n                break;\r\n            case 'public-notes':\r\n                navigate('/public-notes');\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Add effect to sync URL with current view\r\n    useEffect(() => {\r\n        const path = location.pathname;\r\n        if (path === '/public-notes' && currentView !== 'public-notes') {\r\n            setCurrentView('public-notes');\r\n        } else if (path === '/shared-notes' && currentView !== 'shared-notes') {\r\n            setCurrentView('shared-notes');\r\n        } else if (path === '/notes' && currentView !== 'my-notes') {\r\n            setCurrentView('my-notes');\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    const handleShareNote = async (noteId: number, collaboratorId: number) => {\r\n        try {\r\n            const updatedNote = await api.shareNote(noteId, collaboratorId);\r\n            \r\n            // Update the notes list with the updated note\r\n            setNotes(notes.map(note => \r\n                note.id === noteId ? updatedNote : note\r\n            ));\r\n            \r\n            // Show success message\r\n            setMessage({ type: 'success', text: 'Note shared successfully' });\r\n        } catch (error) {\r\n            console.error('Error sharing note:', error);\r\n            setMessage({ type: 'error', text: error instanceof Error ? error.message : 'Failed to share note' });\r\n        }\r\n    };\r\n\r\n    const loadPersonalNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const fetchedNotes = await api.getNotes();\r\n            setNotes(fetchedNotes);\r\n        } catch (error) {\r\n            setError(error instanceof Error ? error.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadPersonalNotes();\r\n    }, []);\r\n\r\n    if (!user) {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1>Notepad+</h1>\r\n                </header>\r\n                <main className=\"auth-container\">\r\n                    {showRegister ? (\r\n                        <div>\r\n                            <Register />\r\n                            <button \r\n                                className=\"switch-auth-button\"\r\n                                onClick={() => setShowRegister(false)}\r\n                            >\r\n                                Already have an account? Login\r\n                            </button>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Login />\r\n                            <button \r\n                                className=\"switch-auth-button\"\r\n                                onClick={() => setShowRegister(true)}\r\n                            >\r\n                                Don't have an account? Register\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <Sidebar />\r\n                <div className=\"content\">\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<NotesPage />} />\r\n                        <Route path=\"/notes\" element={<NotesPage />} />\r\n                        <Route path=\"/shared-notes\" element={<NotesPage type=\"shared\" />} />\r\n                        <Route path=\"/public-notes\" element={<NotesPage type=\"public\" />} />\r\n                        <Route path=\"/drive\" element={<DrivePage />} />\r\n                        <Route path=\"/notes/new\" element={<NotesPage viewType=\"my-notes\" isCreating={true} />} />\r\n                        <Route path=\"/\" element={<Navigate to=\"/notes\" replace />} />\r\n                    </Routes>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}