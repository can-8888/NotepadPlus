{"ast":null,"code":"import React,{useEffect,useState}from'react';import NoteList from'../components/NoteList';import{api}from'../services/api';import'./NotesPage.css';import{useNavigate,useLocation}from'react-router-dom';import Modal from'../components/Modal';import NoteEditor from'../components/NoteEditor';import{ShareNoteDialog}from'../components/ShareNoteDialog';import{signalRService}from'../services/signalRService';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotesPage=_ref=>{let{type:propType,isCreating=false}=_ref;const location=useLocation();const locationState=location.state;// Use type from props or location state\nconst noteType=propType||(locationState===null||locationState===void 0?void 0:locationState.type)||'my-notes';const[notes,setNotes]=useState([]);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[selectedCategory,setSelectedCategory]=useState('');const[sortBy,setSortBy]=useState('date-desc');const[selectedNote,setSelectedNote]=useState(null);const[isNoteModalOpen,setIsNoteModalOpen]=useState(isCreating);const[shareNoteId,setShareNoteId]=useState(null);const navigate=useNavigate();const{user}=useAuth();// Move loadNotes outside useEffect\nconst loadNotes=async()=>{try{console.log('Loading notes...');setIsLoading(true);setError(null);let fetchedNotes;switch(noteType){case'shared':fetchedNotes=await api.getSharedNotes();console.log('Fetched shared notes:',fetchedNotes);break;case'public':fetchedNotes=await api.getPublicNotes();console.log('Fetched public notes:',fetchedNotes);break;default:fetchedNotes=await api.getNotes();console.log('Fetched personal notes:',fetchedNotes);}if(!Array.isArray(fetchedNotes)){console.warn('Fetched notes is not an array:',fetchedNotes);fetchedNotes=[];}setNotes(fetchedNotes);}catch(err){console.error('Error loading notes:',err);setError(err instanceof Error?err.message:'Failed to load notes');setNotes([]);}finally{setIsLoading(false);}};// Use loadNotes in useEffect\nuseEffect(()=>{console.log('NotesPage type:',noteType);// Load notes based on type\nif(noteType==='public'){loadNotes();}else if(noteType==='shared'){loadNotes();}else{loadNotes();}},[noteType]);useEffect(()=>{setIsNoteModalOpen(isCreating);},[isCreating]);useEffect(()=>{if(!user){navigate('/login');return;}const setupRealTimeUpdates=async()=>{try{await signalRService.startConnection();signalRService.addNoteUpdateListener(updatedNote=>{setNotes(prevNotes=>prevNotes.map(note=>note.id===updatedNote.id?updatedNote:note));});signalRService.addNoteDeleteListener(deletedNoteId=>{setNotes(prevNotes=>prevNotes.filter(note=>note.id!==deletedNoteId));});}catch(err){console.error('Failed to setup real-time updates:',err);}};setupRealTimeUpdates();return()=>{signalRService.stopConnection();};},[user,navigate]);const handleNoteSelect=note=>{setSelectedNote(note);setIsNoteModalOpen(true);};const handleDeleteNote=async id=>{try{await api.deleteNote(id);setNotes(notes.filter(note=>note.id!==id));}catch(err){console.error('Error deleting note:',err);}};const handleMakePublic=async noteId=>{try{console.log('NotesPage: Making note public:',noteId);console.log('Current notes:',notes);await api.makeNotePublic(noteId);console.log('Note made public successfully');await loadNotes();// Now this will work\n}catch(error){console.error('Error making note public:',error);}};const handleShare=async id=>{setShareNoteId(id);};const handleShareComplete=async collaboratorId=>{try{if(shareNoteId){await api.shareNote(shareNoteId,collaboratorId);// Refresh notes after sharing\nconst updatedNotes=await api.getNotes();setNotes(updatedNotes);setShareNoteId(null);}}catch(err){console.error('Error sharing note:',err);setError(err instanceof Error?err.message:'Failed to share note');}};const handleSaveNote=async note=>{try{setError(null);if(selectedNote){await api.updateNote(selectedNote.id,note);}else{await api.createNote(note);}// Refresh notes list immediately after saving\nconst updatedNotes=await api.getNotes();setNotes(updatedNotes);setIsNoteModalOpen(false);setSelectedNote(null);// Navigate back to the notes list\nnavigate('/notes',{replace:true});}catch(err){console.error('Error saving note:',err);setError(err instanceof Error?err.message:'Failed to save note');}};const handleCloseModal=()=>{setIsNoteModalOpen(false);setSelectedNote(null);// Navigate back to the notes list\nnavigate('/notes',{replace:true});};// Get unique categories using Object.keys and reduce\nconst categories=notes.reduce((acc,note)=>{if(note.category){acc[note.category]=true;}return acc;},{});const uniqueCategories=Object.keys(categories);// Filter and sort notes\nconst filteredNotes=notes.filter(note=>{const matchesSearch=note.title.toLowerCase().includes(searchTerm.toLowerCase())||note.content.toLowerCase().includes(searchTerm.toLowerCase());const matchesCategory=!selectedCategory||note.category===selectedCategory;return matchesSearch&&matchesCategory;});if(isLoading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading notes...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});return/*#__PURE__*/_jsxs(\"div\",{className:\"notes-page\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[noteType==='shared'&&'Shared Notes',noteType==='public'&&'Public Notes',noteType==='my-notes'&&'My Notes']}),isNoteModalOpen&&/*#__PURE__*/_jsx(Modal,{isOpen:isNoteModalOpen,title:\"Create New Note\",onClose:()=>{setIsNoteModalOpen(false);navigate('/notes');},children:/*#__PURE__*/_jsx(NoteEditor,{onSave:handleSaveNote,onCancel:()=>{setIsNoteModalOpen(false);navigate('/notes');}})}),shareNoteId&&/*#__PURE__*/_jsx(Modal,{isOpen:true,title:\"Share Note\",onClose:()=>setShareNoteId(null),children:/*#__PURE__*/_jsx(ShareNoteDialog,{noteId:shareNoteId,onShare:handleShareComplete,onClose:()=>setShareNoteId(null)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-filters\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search notes...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"search-input\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),className:\"category-filter\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),uniqueCategories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))]}),/*#__PURE__*/_jsxs(\"select\",{value:sortBy,onChange:e=>setSortBy(e.target.value),className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"date-desc\",children:\"Newest First\"}),/*#__PURE__*/_jsx(\"option\",{value:\"date-asc\",children:\"Oldest First\"}),/*#__PURE__*/_jsx(\"option\",{value:\"title\",children:\"Title\"}),/*#__PURE__*/_jsx(\"option\",{value:\"category\",children:\"Category\"})]})]}),notes.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"No \",noteType,\" notes found\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[noteType==='shared'&&'Notes shared with you will appear here',noteType==='public'&&'Public notes from other users will appear here',noteType==='my-notes'&&'Create your first note to get started']})]}):/*#__PURE__*/_jsx(\"div\",{className:\"notes-container\",children:/*#__PURE__*/_jsx(NoteList,{notes:filteredNotes,isLoading:isLoading,error:error,onNoteSelect:handleNoteSelect,onDeleteNote:handleDeleteNote,onMakePublic:handleMakePublic,onShare:handleShare})})]});};export default NotesPage;","map":{"version":3,"names":["React","useEffect","useState","NoteList","api","useNavigate","useLocation","Modal","NoteEditor","ShareNoteDialog","signalRService","useAuth","jsx","_jsx","jsxs","_jsxs","NotesPage","_ref","type","propType","isCreating","location","locationState","state","noteType","notes","setNotes","isLoading","setIsLoading","error","setError","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","selectedNote","setSelectedNote","isNoteModalOpen","setIsNoteModalOpen","shareNoteId","setShareNoteId","navigate","user","loadNotes","console","log","fetchedNotes","getSharedNotes","getPublicNotes","getNotes","Array","isArray","warn","err","Error","message","setupRealTimeUpdates","startConnection","addNoteUpdateListener","updatedNote","prevNotes","map","note","id","addNoteDeleteListener","deletedNoteId","filter","stopConnection","handleNoteSelect","handleDeleteNote","deleteNote","handleMakePublic","noteId","makeNotePublic","handleShare","handleShareComplete","collaboratorId","shareNote","updatedNotes","handleSaveNote","updateNote","createNote","replace","handleCloseModal","categories","reduce","acc","category","uniqueCategories","Object","keys","filteredNotes","matchesSearch","title","toLowerCase","includes","content","matchesCategory","children","className","isOpen","onClose","onSave","onCancel","onShare","placeholder","value","onChange","e","target","length","onNoteSelect","onDeleteNote","onMakePublic"],"sources":["D:/_master/v5/NotepadPlus/Frontend-React/src/pages/NotesPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NoteList from '../components/NoteList';\r\nimport { Note } from '../types/Note';\r\nimport { api } from '../services/api';\r\nimport './NotesPage.css';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Modal from '../components/Modal';\r\nimport NoteEditor from '../components/NoteEditor';\r\nimport { ShareNoteDialog } from '../components/ShareNoteDialog';\r\nimport { signalRService } from '../services/signalRService';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\ninterface LocationState {\r\n    type?: 'public' | 'shared';\r\n}\r\n\r\ninterface NotesPageProps {\r\n    type?: string;\r\n    isCreating?: boolean;\r\n}\r\n\r\nconst NotesPage: React.FC<NotesPageProps> = ({ type: propType, isCreating = false }) => {\r\n    const location = useLocation();\r\n    const locationState = location.state as LocationState;\r\n    \r\n    // Use type from props or location state\r\n    const noteType = propType || locationState?.type || 'my-notes';\r\n\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [sortBy, setSortBy] = useState('date-desc');\r\n    const [selectedNote, setSelectedNote] = useState<Note | null>(null);\r\n    const [isNoteModalOpen, setIsNoteModalOpen] = useState(isCreating);\r\n    const [shareNoteId, setShareNoteId] = useState<number | null>(null);\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n\r\n    // Move loadNotes outside useEffect\r\n    const loadNotes = async () => {\r\n        try {\r\n            console.log('Loading notes...');\r\n            setIsLoading(true);\r\n            setError(null);\r\n            let fetchedNotes: Note[];\r\n            \r\n            switch (noteType) {\r\n                case 'shared':\r\n                    fetchedNotes = await api.getSharedNotes();\r\n                    console.log('Fetched shared notes:', fetchedNotes);\r\n                    break;\r\n                case 'public':\r\n                    fetchedNotes = await api.getPublicNotes();\r\n                    console.log('Fetched public notes:', fetchedNotes);\r\n                    break;\r\n                default:\r\n                    fetchedNotes = await api.getNotes();\r\n                    console.log('Fetched personal notes:', fetchedNotes);\r\n            }\r\n            \r\n            if (!Array.isArray(fetchedNotes)) {\r\n                console.warn('Fetched notes is not an array:', fetchedNotes);\r\n                fetchedNotes = [];\r\n            }\r\n            \r\n            setNotes(fetchedNotes);\r\n        } catch (err) {\r\n            console.error('Error loading notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n            setNotes([]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Use loadNotes in useEffect\r\n    useEffect(() => {\r\n        console.log('NotesPage type:', noteType);\r\n        // Load notes based on type\r\n        if (noteType === 'public') {\r\n            loadNotes();\r\n        } else if (noteType === 'shared') {\r\n            loadNotes();\r\n        } else {\r\n            loadNotes();\r\n        }\r\n    }, [noteType]);\r\n\r\n    useEffect(() => {\r\n        setIsNoteModalOpen(isCreating);\r\n    }, [isCreating]);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        const setupRealTimeUpdates = async () => {\r\n            try {\r\n                await signalRService.startConnection();\r\n                signalRService.addNoteUpdateListener((updatedNote: Note) => {\r\n                    setNotes(prevNotes => \r\n                        prevNotes.map(note => \r\n                            note.id === updatedNote.id ? updatedNote : note\r\n                        )\r\n                    );\r\n                });\r\n\r\n                signalRService.addNoteDeleteListener((deletedNoteId: number) => {\r\n                    setNotes(prevNotes => \r\n                        prevNotes.filter(note => note.id !== deletedNoteId)\r\n                    );\r\n                });\r\n            } catch (err) {\r\n                console.error('Failed to setup real-time updates:', err);\r\n            }\r\n        };\r\n\r\n        setupRealTimeUpdates();\r\n\r\n        return () => {\r\n            signalRService.stopConnection();\r\n        };\r\n    }, [user, navigate]);\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        setSelectedNote(note);\r\n        setIsNoteModalOpen(true);\r\n    };\r\n\r\n    const handleDeleteNote = async (id: number) => {\r\n        try {\r\n            await api.deleteNote(id);\r\n            setNotes(notes.filter(note => note.id !== id));\r\n        } catch (err) {\r\n            console.error('Error deleting note:', err);\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            console.log('NotesPage: Making note public:', noteId);\r\n            console.log('Current notes:', notes);\r\n            await api.makeNotePublic(noteId);\r\n            console.log('Note made public successfully');\r\n            await loadNotes();  // Now this will work\r\n        } catch (error) {\r\n            console.error('Error making note public:', error);\r\n        }\r\n    };\r\n\r\n    const handleShare = async (id: number) => {\r\n        setShareNoteId(id);\r\n    };\r\n\r\n    const handleShareComplete = async (collaboratorId: number) => {\r\n        try {\r\n            if (shareNoteId) {\r\n                await api.shareNote(shareNoteId, collaboratorId);\r\n                // Refresh notes after sharing\r\n                const updatedNotes = await api.getNotes();\r\n                setNotes(updatedNotes);\r\n                setShareNoteId(null);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error sharing note:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to share note');\r\n        }\r\n    };\r\n\r\n    const handleSaveNote = async (note: Partial<Note>) => {\r\n        try {\r\n            setError(null);\r\n            if (selectedNote) {\r\n                await api.updateNote(selectedNote.id, note);\r\n            } else {\r\n                await api.createNote(note);\r\n            }\r\n            // Refresh notes list immediately after saving\r\n            const updatedNotes = await api.getNotes();\r\n            setNotes(updatedNotes);\r\n            setIsNoteModalOpen(false);\r\n            setSelectedNote(null);\r\n            // Navigate back to the notes list\r\n            navigate('/notes', { replace: true });\r\n        } catch (err) {\r\n            console.error('Error saving note:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setIsNoteModalOpen(false);\r\n        setSelectedNote(null);\r\n        // Navigate back to the notes list\r\n        navigate('/notes', { replace: true });\r\n    };\r\n\r\n    // Get unique categories using Object.keys and reduce\r\n    const categories = notes\r\n        .reduce((acc: { [key: string]: boolean }, note) => {\r\n            if (note.category) {\r\n                acc[note.category] = true;\r\n            }\r\n            return acc;\r\n        }, {});\r\n    const uniqueCategories = Object.keys(categories);\r\n\r\n    // Filter and sort notes\r\n    const filteredNotes = notes.filter(note => {\r\n        const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                            note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n        const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n        return matchesSearch && matchesCategory;\r\n    });\r\n\r\n    if (isLoading) return <div>Loading notes...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <div className=\"notes-page\">\r\n            <h1>\r\n                {noteType === 'shared' && 'Shared Notes'}\r\n                {noteType === 'public' && 'Public Notes'}\r\n                {noteType === 'my-notes' && 'My Notes'}\r\n            </h1>\r\n            {isNoteModalOpen && (\r\n                <Modal \r\n                    isOpen={isNoteModalOpen}\r\n                    title=\"Create New Note\"\r\n                    onClose={() => {\r\n                        setIsNoteModalOpen(false);\r\n                        navigate('/notes');\r\n                    }}\r\n                >\r\n                    <NoteEditor\r\n                        onSave={handleSaveNote}\r\n                        onCancel={() => {\r\n                            setIsNoteModalOpen(false);\r\n                            navigate('/notes');\r\n                        }}\r\n                    />\r\n                </Modal>\r\n            )}\r\n            {shareNoteId && (\r\n                <Modal\r\n                    isOpen={true}\r\n                    title=\"Share Note\"\r\n                    onClose={() => setShareNoteId(null)}\r\n                >\r\n                    <ShareNoteDialog\r\n                        noteId={shareNoteId}\r\n                        onShare={handleShareComplete}\r\n                        onClose={() => setShareNoteId(null)}\r\n                    />\r\n                </Modal>\r\n            )}\r\n            <div className=\"search-filters\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search notes...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-input\"\r\n                />\r\n                <select\r\n                    value={selectedCategory}\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                    className=\"category-filter\"\r\n                >\r\n                    <option value=\"\">All Categories</option>\r\n                    {uniqueCategories.map(category => (\r\n                        <option key={category} value={category}>\r\n                            {category}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select\r\n                    value={sortBy}\r\n                    onChange={(e) => setSortBy(e.target.value)}\r\n                    className=\"sort-select\"\r\n                >\r\n                    <option value=\"date-desc\">Newest First</option>\r\n                    <option value=\"date-asc\">Oldest First</option>\r\n                    <option value=\"title\">Title</option>\r\n                    <option value=\"category\">Category</option>\r\n                </select>\r\n            </div>\r\n            {notes.length === 0 ? (\r\n                <div className=\"empty-state\">\r\n                    <span>No {noteType} notes found</span>\r\n                    <span>\r\n                        {noteType === 'shared' && 'Notes shared with you will appear here'}\r\n                        {noteType === 'public' && 'Public notes from other users will appear here'}\r\n                        {noteType === 'my-notes' && 'Create your first note to get started'}\r\n                    </span>\r\n                </div>\r\n            ) : (\r\n                <div className=\"notes-container\">\r\n                    <NoteList \r\n                        notes={filteredNotes}\r\n                        isLoading={isLoading}\r\n                        error={error}\r\n                        onNoteSelect={handleNoteSelect}\r\n                        onDeleteNote={handleDeleteNote}\r\n                        onMakePublic={handleMakePublic}\r\n                        onShare={handleShare}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}