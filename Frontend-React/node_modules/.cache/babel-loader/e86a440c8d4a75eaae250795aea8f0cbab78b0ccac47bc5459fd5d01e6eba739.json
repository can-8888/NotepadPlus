{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\components\\\\NoteList.tsx\";\nimport React from 'react';\nimport { NoteStatus } from '../types/Note';\nimport './NoteList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteList = ({\n  notes,\n  selectedNote,\n  onNoteSelect,\n  onDeleteNote,\n  onMakePublic,\n  onShare,\n  isLoading,\n  error\n}) => {\n  // Helper function to get status class name\n  const getStatusClassName = status => {\n    switch (status) {\n      case NoteStatus.Public:\n        return 'public';\n      case NoteStatus.Shared:\n        return 'shared';\n      case NoteStatus.Personal:\n        return 'personal';\n      default:\n        return 'personal';\n    }\n  };\n\n  // Helper function to get status text\n  const getStatusText = status => {\n    switch (status) {\n      case NoteStatus.Public:\n        return 'Public';\n      case NoteStatus.Shared:\n        return 'Shared';\n      case NoteStatus.Personal:\n        return 'Personal';\n      default:\n        return 'Personal';\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-grid\",\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `note-card ${(selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === note.id ? 'selected' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-content\",\n        onClick: () => onNoteSelect(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `note-status ${getStatusClassName(note.status)}`,\n            children: getStatusText(note.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-metadata\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Category: \", note.category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), note.owner && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"note-owner\",\n            children: [\"Owner: \", note.owner]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onDeleteNote(note.id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onShare(note.id);\n          },\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), note.status !== NoteStatus.Public && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"public-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onMakePublic(note.id);\n          },\n          children: \"Make Public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","NoteStatus","jsxDEV","_jsxDEV","NoteList","notes","selectedNote","onNoteSelect","onDeleteNote","onMakePublic","onShare","isLoading","error","getStatusClassName","status","Public","Shared","Personal","getStatusText","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","note","id","onClick","title","content","category","owner","e","stopPropagation","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/components/NoteList.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Note, NoteStatus, getNoteStatus } from '../types/Note';\r\nimport './NoteList.css';\r\n\r\ninterface NoteListProps {\r\n    notes: Note[];\r\n    selectedNote?: Note;\r\n    onNoteSelect: (note: Note) => void;\r\n    onDeleteNote: (id: number) => void;\r\n    onMakePublic: (id: number) => void;\r\n    onShare: (id: number) => void;\r\n    viewType?: string;\r\n    isLoading?: boolean;\r\n    error?: string | null;\r\n}\r\n\r\nconst NoteList: React.FC<NoteListProps> = ({ \r\n    notes, \r\n    selectedNote,\r\n    onNoteSelect, \r\n    onDeleteNote, \r\n    onMakePublic,\r\n    onShare,\r\n    isLoading,\r\n    error \r\n}) => {\r\n    // Helper function to get status class name\r\n    const getStatusClassName = (status: NoteStatus): string => {\r\n        switch (status) {\r\n            case NoteStatus.Public:\r\n                return 'public';\r\n            case NoteStatus.Shared:\r\n                return 'shared';\r\n            case NoteStatus.Personal:\r\n                return 'personal';\r\n            default:\r\n                return 'personal';\r\n        }\r\n    };\r\n\r\n    // Helper function to get status text\r\n    const getStatusText = (status: NoteStatus): string => {\r\n        switch (status) {\r\n            case NoteStatus.Public:\r\n                return 'Public';\r\n            case NoteStatus.Shared:\r\n                return 'Shared';\r\n            case NoteStatus.Personal:\r\n                return 'Personal';\r\n            default:\r\n                return 'Personal';\r\n        }\r\n    };\r\n\r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div className=\"error\">{error}</div>;\r\n\r\n    return (\r\n        <div className=\"notes-grid\">\r\n            {notes.map((note) => (\r\n                <div \r\n                    key={note.id} \r\n                    className={`note-card ${selectedNote?.id === note.id ? 'selected' : ''}`}\r\n                >\r\n                    <div \r\n                        className=\"note-content\"\r\n                        onClick={() => onNoteSelect(note)}\r\n                    >\r\n                        <div className=\"note-header\">\r\n                            <h3>{note.title}</h3>\r\n                            <span className={`note-status ${getStatusClassName(note.status)}`}>\r\n                                {getStatusText(note.status)}\r\n                            </span>\r\n                        </div>\r\n                        <p>{note.content}</p>\r\n                        <div className=\"note-metadata\">\r\n                            <small>Category: {note.category}</small>\r\n                            {note.owner && <small className=\"note-owner\">Owner: {note.owner}</small>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"note-actions\">\r\n                        <button \r\n                            className=\"delete-button\"\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                onDeleteNote(note.id);\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                        <button \r\n                            className=\"share-button\"\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                onShare(note.id);\r\n                            }}\r\n                        >\r\n                            Share\r\n                        </button>\r\n                        {note.status !== NoteStatus.Public && (\r\n                            <button \r\n                                className=\"public-button\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    onMakePublic(note.id);\r\n                                }}\r\n                            >\r\n                                Make Public\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}