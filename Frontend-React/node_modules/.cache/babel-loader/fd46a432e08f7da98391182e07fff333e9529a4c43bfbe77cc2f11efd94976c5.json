{"ast":null,"code":"export let NoteStatus = /*#__PURE__*/function (NoteStatus) {\n  NoteStatus[\"Personal\"] = \"Personal\";\n  NoteStatus[\"Shared\"] = \"Shared\";\n  NoteStatus[\"Public\"] = \"Public\";\n  return NoteStatus;\n}({});\n// Helper function to convert API response to Note\nexport const convertApiResponseToNote = apiNote => ({\n  ...apiNote,\n  createdAt: new Date(apiNote.createdAt),\n  updatedAt: new Date(apiNote.updatedAt),\n  status: apiNote.status\n});\n\n// Helper function to ensure proper status conversion\nexport const getNoteStatus = status => {\n  if (typeof status === 'string') {\n    switch (status.toLowerCase()) {\n      case 'personal':\n        return NoteStatus.Personal;\n      case 'shared':\n        return NoteStatus.Shared;\n      case 'public':\n        return NoteStatus.Public;\n      default:\n        return NoteStatus.Personal;\n    }\n  }\n  return status;\n};","map":{"version":3,"names":["NoteStatus","convertApiResponseToNote","apiNote","createdAt","Date","updatedAt","status","getNoteStatus","toLowerCase","Personal","Shared","Public"],"sources":["D:/_master/v5/notepad-plus/src/types/Note.ts"],"sourcesContent":["export enum NoteStatus {\r\n    Personal = 'Personal',\r\n    Shared = 'Shared',\r\n    Public = 'Public'\r\n}\r\n\r\nexport interface User {\r\n    id: number;\r\n    username: string;\r\n    email: string;\r\n    createdAt: Date;\r\n}\r\n\r\nexport interface Note {\r\n    id: number;\r\n    title: string;\r\n    content: string;\r\n    category: string;\r\n    userId: number;\r\n    owner: string;\r\n    status: NoteStatus;\r\n    isPublic: boolean;\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n    user?: User;\r\n    collaborators?: User[];\r\n}\r\n\r\nexport interface NoteApiResponse {\r\n    id: number;\r\n    title: string;\r\n    content: string;\r\n    category: string;\r\n    createdAt: string;  // API returns dates as strings\r\n    updatedAt: string;\r\n    userId: number;\r\n    isPublic: boolean;\r\n    status: NoteStatus;\r\n    owner: string;  // Add owner to match Note interface\r\n    user?: User;\r\n}\r\n\r\n// Helper function to convert API response to Note\r\nexport const convertApiResponseToNote = (apiNote: NoteApiResponse): Note => ({\r\n    ...apiNote,\r\n    createdAt: new Date(apiNote.createdAt),\r\n    updatedAt: new Date(apiNote.updatedAt),\r\n    status: apiNote.status\r\n});\r\n\r\n// Helper function to ensure proper status conversion\r\nexport const getNoteStatus = (status: string | NoteStatus): NoteStatus => {\r\n    if (typeof status === 'string') {\r\n        switch (status.toLowerCase()) {\r\n            case 'personal':\r\n                return NoteStatus.Personal;\r\n            case 'shared':\r\n                return NoteStatus.Shared;\r\n            case 'public':\r\n                return NoteStatus.Public;\r\n            default:\r\n                return NoteStatus.Personal;\r\n        }\r\n    }\r\n    return status;\r\n};"],"mappings":"AAAA,WAAYA,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AA0CtB;AACA,OAAO,MAAMC,wBAAwB,GAAIC,OAAwB,KAAY;EACzE,GAAGA,OAAO;EACVC,SAAS,EAAE,IAAIC,IAAI,CAACF,OAAO,CAACC,SAAS,CAAC;EACtCE,SAAS,EAAE,IAAID,IAAI,CAACF,OAAO,CAACG,SAAS,CAAC;EACtCC,MAAM,EAAEJ,OAAO,CAACI;AACpB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAID,MAA2B,IAAiB;EACtE,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC5B,QAAQA,MAAM,CAACE,WAAW,CAAC,CAAC;MACxB,KAAK,UAAU;QACX,OAAOR,UAAU,CAACS,QAAQ;MAC9B,KAAK,QAAQ;QACT,OAAOT,UAAU,CAACU,MAAM;MAC5B,KAAK,QAAQ;QACT,OAAOV,UAAU,CAACW,MAAM;MAC5B;QACI,OAAOX,UAAU,CAACS,QAAQ;IAClC;EACJ;EACA,OAAOH,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}