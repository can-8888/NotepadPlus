{"ast":null,"code":"import * as signalR from '@microsoft/signalr';\nimport { getCurrentUser } from './api';\nclass SignalRService {\n  constructor() {\n    this.hubConnection = null;\n  }\n  async startConnection() {\n    try {\n      const user = getCurrentUser();\n      if (!user) return;\n      this.hubConnection = new signalR.HubConnectionBuilder().withUrl('http://localhost:5000/notificationHub', {\n        withCredentials: true\n      }).withAutomaticReconnect().build();\n      await this.hubConnection.start();\n      console.log('SignalR Connected!');\n\n      // Join user-specific group\n      await this.hubConnection.invoke('JoinUserGroup', user.id.toString());\n\n      // Handle notifications\n      this.hubConnection.on('ReceiveNotification', notification => {\n        // Dispatch to notification store/state\n        console.log('Received notification:', notification);\n        // You can emit an event or update state here\n      });\n    } catch (err) {\n      console.error('Error establishing SignalR connection:', err);\n    }\n  }\n  async stopConnection() {\n    if (this.hubConnection) {\n      const user = getCurrentUser();\n      if (user) {\n        await this.hubConnection.invoke('LeaveUserGroup', user.id.toString());\n      }\n      await this.hubConnection.stop();\n    }\n  }\n}\nexport const signalRService = new SignalRService();","map":{"version":3,"names":["signalR","getCurrentUser","SignalRService","constructor","hubConnection","startConnection","user","HubConnectionBuilder","withUrl","withCredentials","withAutomaticReconnect","build","start","console","log","invoke","id","toString","on","notification","err","error","stopConnection","stop","signalRService"],"sources":["D:/_master/v5/notepad-plus/src/services/signalRService.ts"],"sourcesContent":["import * as signalR from '@microsoft/signalr';\r\nimport { getCurrentUser } from './api';\r\n\r\nclass SignalRService {\r\n    private hubConnection: signalR.HubConnection | null = null;\r\n\r\n    public async startConnection() {\r\n        try {\r\n            const user = getCurrentUser();\r\n            if (!user) return;\r\n\r\n            this.hubConnection = new signalR.HubConnectionBuilder()\r\n                .withUrl('http://localhost:5000/notificationHub', {\r\n                    withCredentials: true\r\n                })\r\n                .withAutomaticReconnect()\r\n                .build();\r\n\r\n            await this.hubConnection.start();\r\n            console.log('SignalR Connected!');\r\n\r\n            // Join user-specific group\r\n            await this.hubConnection.invoke('JoinUserGroup', user.id.toString());\r\n\r\n            // Handle notifications\r\n            this.hubConnection.on('ReceiveNotification', (notification) => {\r\n                // Dispatch to notification store/state\r\n                console.log('Received notification:', notification);\r\n                // You can emit an event or update state here\r\n            });\r\n\r\n        } catch (err) {\r\n            console.error('Error establishing SignalR connection:', err);\r\n        }\r\n    }\r\n\r\n    public async stopConnection() {\r\n        if (this.hubConnection) {\r\n            const user = getCurrentUser();\r\n            if (user) {\r\n                await this.hubConnection.invoke('LeaveUserGroup', user.id.toString());\r\n            }\r\n            await this.hubConnection.stop();\r\n        }\r\n    }\r\n}\r\n\r\nexport const signalRService = new SignalRService(); "],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAC7C,SAASC,cAAc,QAAQ,OAAO;AAEtC,MAAMC,cAAc,CAAC;EAAAC,YAAA;IAAA,KACTC,aAAa,GAAiC,IAAI;EAAA;EAE1D,MAAaC,eAAeA,CAAA,EAAG;IAC3B,IAAI;MACA,MAAMC,IAAI,GAAGL,cAAc,CAAC,CAAC;MAC7B,IAAI,CAACK,IAAI,EAAE;MAEX,IAAI,CAACF,aAAa,GAAG,IAAIJ,OAAO,CAACO,oBAAoB,CAAC,CAAC,CAClDC,OAAO,CAAC,uCAAuC,EAAE;QAC9CC,eAAe,EAAE;MACrB,CAAC,CAAC,CACDC,sBAAsB,CAAC,CAAC,CACxBC,KAAK,CAAC,CAAC;MAEZ,MAAM,IAAI,CAACP,aAAa,CAACQ,KAAK,CAAC,CAAC;MAChCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;;MAEjC;MACA,MAAM,IAAI,CAACV,aAAa,CAACW,MAAM,CAAC,eAAe,EAAET,IAAI,CAACU,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC;;MAEpE;MACA,IAAI,CAACb,aAAa,CAACc,EAAE,CAAC,qBAAqB,EAAGC,YAAY,IAAK;QAC3D;QACAN,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEK,YAAY,CAAC;QACnD;MACJ,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVP,OAAO,CAACQ,KAAK,CAAC,wCAAwC,EAAED,GAAG,CAAC;IAChE;EACJ;EAEA,MAAaE,cAAcA,CAAA,EAAG;IAC1B,IAAI,IAAI,CAAClB,aAAa,EAAE;MACpB,MAAME,IAAI,GAAGL,cAAc,CAAC,CAAC;MAC7B,IAAIK,IAAI,EAAE;QACN,MAAM,IAAI,CAACF,aAAa,CAACW,MAAM,CAAC,gBAAgB,EAAET,IAAI,CAACU,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC;MACzE;MACA,MAAM,IAAI,CAACb,aAAa,CAACmB,IAAI,CAAC,CAAC;IACnC;EACJ;AACJ;AAEA,OAAO,MAAMC,cAAc,GAAG,IAAItB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}