{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    // Check token expiration\n    const checkToken = () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        // Verify token and refresh if needed\n      }\n    };\n    checkToken();\n  }, []);\n\n  // Add token management\n\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [user]);\n  const login = async (username, password) => {\n    try {\n      const userData = await api.login({\n        username,\n        password\n      });\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const userData = await api.register({\n        username,\n        email,\n        password\n      });\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"90zAo1h6WlJ02tR/rSFGLd6mXtc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","checkToken","storedToken","localStorage","getItem","setItem","JSON","stringify","removeItem","login","username","password","userData","error","console","register","email","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User } from '../types/Note';\r\nimport { api } from '../services/api';\r\n\r\ninterface AuthContextType {\r\n    user: User | null;\r\n    login: (username: string, password: string) => Promise<void>;\r\n    logout: () => void;\r\n    register: (username: string, email: string, password: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [user, setUser] = useState<User | null>(null);\r\n    const [token, setToken] = useState<string | null>(null);\r\n    \r\n    useEffect(() => {\r\n        // Check token expiration\r\n        const checkToken = () => {\r\n            const storedToken = localStorage.getItem('token');\r\n            if (storedToken) {\r\n                // Verify token and refresh if needed\r\n            }\r\n        };\r\n        checkToken();\r\n    }, []);\r\n    \r\n    // Add token management\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n        } else {\r\n            localStorage.removeItem('user');\r\n        }\r\n    }, [user]);\r\n\r\n    const login = async (username: string, password: string) => {\r\n        try {\r\n            const userData = await api.login({ username, password });\r\n            setUser(userData);\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n        } catch (error) {\r\n            console.error('Login failed:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (username: string, email: string, password: string) => {\r\n        try {\r\n            const userData = await api.register({ username, email, password });\r\n            setUser(userData);\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n        } catch (error) {\r\n            console.error('Registration failed:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('user');\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout, register }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}