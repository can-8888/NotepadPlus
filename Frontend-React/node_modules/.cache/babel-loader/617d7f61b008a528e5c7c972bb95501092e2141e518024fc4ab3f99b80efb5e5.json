{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\NotepadPlus\\\\Frontend-React\\\\src\\\\pages\\\\NotesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NoteList from '../components/NoteList';\nimport { api } from '../services/api';\nimport './NotesPage.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Modal from '../components/Modal';\nimport NoteEditor from '../components/NoteEditor';\nimport { ShareNoteDialog } from '../components/ShareNoteDialog';\nimport { signalRService } from '../services/signalRService';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesPage = ({\n  type: propType,\n  isCreating = false\n}) => {\n  _s();\n  const location = useLocation();\n  const locationState = location.state;\n\n  // Use type from props or location state\n  const noteType = propType || (locationState === null || locationState === void 0 ? void 0 : locationState.type) || 'my-notes';\n  const [notes, setNotes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [isNoteModalOpen, setIsNoteModalOpen] = useState(isCreating);\n  const [shareNoteId, setShareNoteId] = useState(null);\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n\n  // Move loadNotes outside useEffect\n  const loadNotes = async () => {\n    try {\n      console.log('Loading notes...');\n      setIsLoading(true);\n      setError(null);\n      let fetchedNotes;\n      switch (noteType) {\n        case 'shared':\n          fetchedNotes = await api.getSharedNotes();\n          console.log('Fetched shared notes:', fetchedNotes);\n          break;\n        case 'public':\n          fetchedNotes = await api.getPublicNotes();\n          console.log('Fetched public notes:', fetchedNotes);\n          break;\n        default:\n          fetchedNotes = await api.getNotes();\n          console.log('Fetched personal notes:', fetchedNotes);\n      }\n      if (!Array.isArray(fetchedNotes)) {\n        console.warn('Fetched notes is not an array:', fetchedNotes);\n        fetchedNotes = [];\n      }\n      setNotes(fetchedNotes);\n    } catch (err) {\n      console.error('Error loading notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load notes');\n      setNotes([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Use loadNotes in useEffect\n  useEffect(() => {\n    console.log('NotesPage type:', noteType);\n    // Load notes based on type\n    if (noteType === 'public') {\n      loadNotes();\n    } else if (noteType === 'shared') {\n      loadNotes();\n    } else {\n      loadNotes();\n    }\n  }, [noteType]);\n  useEffect(() => {\n    setIsNoteModalOpen(isCreating);\n  }, [isCreating]);\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n    const setupRealTimeUpdates = async () => {\n      try {\n        await signalRService.startConnection();\n        signalRService.addNoteUpdateListener(updatedNote => {\n          setNotes(prevNotes => prevNotes.map(note => note.id === updatedNote.id ? updatedNote : note));\n        });\n        signalRService.addNoteDeleteListener(deletedNoteId => {\n          setNotes(prevNotes => prevNotes.filter(note => note.id !== deletedNoteId));\n        });\n      } catch (err) {\n        console.error('Failed to setup real-time updates:', err);\n      }\n    };\n    setupRealTimeUpdates();\n    return () => {\n      signalRService.stopConnection();\n    };\n  }, [user, navigate]);\n  const handleNoteSelect = note => {\n    setSelectedNote(note);\n    setIsNoteModalOpen(true);\n  };\n  const handleDeleteNote = async id => {\n    try {\n      await api.deleteNote(id);\n      setNotes(notes.filter(note => note.id !== id));\n    } catch (err) {\n      console.error('Error deleting note:', err);\n    }\n  };\n  const handleMakePublic = async noteId => {\n    try {\n      console.log('NotesPage: Making note public:', noteId);\n      console.log('Current notes:', notes);\n      await api.makeNotePublic(noteId);\n      console.log('Note made public successfully');\n      await loadNotes(); // Now this will work\n    } catch (error) {\n      console.error('Error making note public:', error);\n    }\n  };\n  const handleShare = async id => {\n    setShareNoteId(id);\n  };\n  const handleShareComplete = async collaboratorId => {\n    try {\n      if (shareNoteId) {\n        await api.shareNote(shareNoteId, collaboratorId);\n        // Refresh notes after sharing\n        const updatedNotes = await api.getNotes();\n        setNotes(updatedNotes);\n        setShareNoteId(null);\n      }\n    } catch (err) {\n      console.error('Error sharing note:', err);\n      setError(err instanceof Error ? err.message : 'Failed to share note');\n    }\n  };\n  const handleSaveNote = async note => {\n    try {\n      setError(null);\n      if (selectedNote) {\n        await api.updateNote(selectedNote.id, note);\n      } else {\n        await api.createNote(note);\n      }\n      // Refresh notes list immediately after saving\n      const updatedNotes = await api.getNotes();\n      setNotes(updatedNotes);\n      setIsNoteModalOpen(false);\n      setSelectedNote(null);\n      // Navigate back to the notes list\n      navigate('/notes', {\n        replace: true\n      });\n    } catch (err) {\n      console.error('Error saving note:', err);\n      setError(err instanceof Error ? err.message : 'Failed to save note');\n    }\n  };\n  const handleCloseModal = () => {\n    setIsNoteModalOpen(false);\n    setSelectedNote(null);\n    // Navigate back to the notes list\n    navigate('/notes', {\n      replace: true\n    });\n  };\n\n  // Get unique categories using Object.keys and reduce\n  const categories = notes.reduce((acc, note) => {\n    if (note.category) {\n      acc[note.category] = true;\n    }\n    return acc;\n  }, {});\n  const uniqueCategories = Object.keys(categories);\n\n  // Filter and sort notes\n  const filteredNotes = notes.filter(note => {\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !selectedCategory || note.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading notes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [noteType === 'shared' && 'Shared Notes', noteType === 'public' && 'Public Notes', noteType === 'my-notes' && 'My Notes']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), isNoteModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isNoteModalOpen,\n      title: \"Create New Note\",\n      onClose: () => {\n        setIsNoteModalOpen(false);\n        navigate('/notes');\n      },\n      children: /*#__PURE__*/_jsxDEV(NoteEditor, {\n        onSave: handleSaveNote,\n        onCancel: () => {\n          setIsNoteModalOpen(false);\n          navigate('/notes');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this), shareNoteId && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: true,\n      title: \"Share Note\",\n      onClose: () => setShareNoteId(null),\n      children: /*#__PURE__*/_jsxDEV(ShareNoteDialog, {\n        noteId: shareNoteId,\n        onShare: handleShareComplete,\n        onClose: () => setShareNoteId(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search notes...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"category-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), uniqueCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        className: \"sort-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date-desc\",\n          children: \"Newest First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date-asc\",\n          children: \"Oldest First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"category\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), notes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"No \", noteType, \" notes found\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [noteType === 'shared' && 'Notes shared with you will appear here', noteType === 'public' && 'Public notes from other users will appear here', noteType === 'my-notes' && 'Create your first note to get started']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: filteredNotes,\n        isLoading: isLoading,\n        error: error,\n        onNoteSelect: handleNoteSelect,\n        onDeleteNote: handleDeleteNote,\n        onMakePublic: handleMakePublic,\n        onShare: handleShare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n};\n_s(NotesPage, \"fZZCPlD9xUfg1G4LsdaEGRYcRQ0=\", false, function () {\n  return [useLocation, useNavigate, useAuth];\n});\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useEffect","useState","NoteList","api","useNavigate","useLocation","Modal","NoteEditor","ShareNoteDialog","signalRService","useAuth","jsxDEV","_jsxDEV","NotesPage","type","propType","isCreating","_s","location","locationState","state","noteType","notes","setNotes","isLoading","setIsLoading","error","setError","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","selectedNote","setSelectedNote","isNoteModalOpen","setIsNoteModalOpen","shareNoteId","setShareNoteId","navigate","user","loadNotes","console","log","fetchedNotes","getSharedNotes","getPublicNotes","getNotes","Array","isArray","warn","err","Error","message","setupRealTimeUpdates","startConnection","addNoteUpdateListener","updatedNote","prevNotes","map","note","id","addNoteDeleteListener","deletedNoteId","filter","stopConnection","handleNoteSelect","handleDeleteNote","deleteNote","handleMakePublic","noteId","makeNotePublic","handleShare","handleShareComplete","collaboratorId","shareNote","updatedNotes","handleSaveNote","updateNote","createNote","replace","handleCloseModal","categories","reduce","acc","category","uniqueCategories","Object","keys","filteredNotes","matchesSearch","title","toLowerCase","includes","content","matchesCategory","children","fileName","_jsxFileName","lineNumber","columnNumber","className","isOpen","onClose","onSave","onCancel","onShare","placeholder","value","onChange","e","target","length","onNoteSelect","onDeleteNote","onMakePublic","_c","$RefreshReg$"],"sources":["D:/_master/v5/NotepadPlus/Frontend-React/src/pages/NotesPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NoteList from '../components/NoteList';\r\nimport { Note } from '../types/Note';\r\nimport { api } from '../services/api';\r\nimport './NotesPage.css';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Modal from '../components/Modal';\r\nimport NoteEditor from '../components/NoteEditor';\r\nimport { ShareNoteDialog } from '../components/ShareNoteDialog';\r\nimport { signalRService } from '../services/signalRService';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\ninterface LocationState {\r\n    type?: 'public' | 'shared';\r\n}\r\n\r\ninterface NotesPageProps {\r\n    type?: string;\r\n    isCreating?: boolean;\r\n}\r\n\r\nconst NotesPage: React.FC<NotesPageProps> = ({ type: propType, isCreating = false }) => {\r\n    const location = useLocation();\r\n    const locationState = location.state as LocationState;\r\n    \r\n    // Use type from props or location state\r\n    const noteType = propType || locationState?.type || 'my-notes';\r\n\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [sortBy, setSortBy] = useState('date-desc');\r\n    const [selectedNote, setSelectedNote] = useState<Note | null>(null);\r\n    const [isNoteModalOpen, setIsNoteModalOpen] = useState(isCreating);\r\n    const [shareNoteId, setShareNoteId] = useState<number | null>(null);\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n\r\n    // Move loadNotes outside useEffect\r\n    const loadNotes = async () => {\r\n        try {\r\n            console.log('Loading notes...');\r\n            setIsLoading(true);\r\n            setError(null);\r\n            let fetchedNotes: Note[];\r\n            \r\n            switch (noteType) {\r\n                case 'shared':\r\n                    fetchedNotes = await api.getSharedNotes();\r\n                    console.log('Fetched shared notes:', fetchedNotes);\r\n                    break;\r\n                case 'public':\r\n                    fetchedNotes = await api.getPublicNotes();\r\n                    console.log('Fetched public notes:', fetchedNotes);\r\n                    break;\r\n                default:\r\n                    fetchedNotes = await api.getNotes();\r\n                    console.log('Fetched personal notes:', fetchedNotes);\r\n            }\r\n            \r\n            if (!Array.isArray(fetchedNotes)) {\r\n                console.warn('Fetched notes is not an array:', fetchedNotes);\r\n                fetchedNotes = [];\r\n            }\r\n            \r\n            setNotes(fetchedNotes);\r\n        } catch (err) {\r\n            console.error('Error loading notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n            setNotes([]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Use loadNotes in useEffect\r\n    useEffect(() => {\r\n        console.log('NotesPage type:', noteType);\r\n        // Load notes based on type\r\n        if (noteType === 'public') {\r\n            loadNotes();\r\n        } else if (noteType === 'shared') {\r\n            loadNotes();\r\n        } else {\r\n            loadNotes();\r\n        }\r\n    }, [noteType]);\r\n\r\n    useEffect(() => {\r\n        setIsNoteModalOpen(isCreating);\r\n    }, [isCreating]);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        const setupRealTimeUpdates = async () => {\r\n            try {\r\n                await signalRService.startConnection();\r\n                signalRService.addNoteUpdateListener((updatedNote: Note) => {\r\n                    setNotes(prevNotes => \r\n                        prevNotes.map(note => \r\n                            note.id === updatedNote.id ? updatedNote : note\r\n                        )\r\n                    );\r\n                });\r\n\r\n                signalRService.addNoteDeleteListener((deletedNoteId: number) => {\r\n                    setNotes(prevNotes => \r\n                        prevNotes.filter(note => note.id !== deletedNoteId)\r\n                    );\r\n                });\r\n            } catch (err) {\r\n                console.error('Failed to setup real-time updates:', err);\r\n            }\r\n        };\r\n\r\n        setupRealTimeUpdates();\r\n\r\n        return () => {\r\n            signalRService.stopConnection();\r\n        };\r\n    }, [user, navigate]);\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        setSelectedNote(note);\r\n        setIsNoteModalOpen(true);\r\n    };\r\n\r\n    const handleDeleteNote = async (id: number) => {\r\n        try {\r\n            await api.deleteNote(id);\r\n            setNotes(notes.filter(note => note.id !== id));\r\n        } catch (err) {\r\n            console.error('Error deleting note:', err);\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            console.log('NotesPage: Making note public:', noteId);\r\n            console.log('Current notes:', notes);\r\n            await api.makeNotePublic(noteId);\r\n            console.log('Note made public successfully');\r\n            await loadNotes();  // Now this will work\r\n        } catch (error) {\r\n            console.error('Error making note public:', error);\r\n        }\r\n    };\r\n\r\n    const handleShare = async (id: number) => {\r\n        setShareNoteId(id);\r\n    };\r\n\r\n    const handleShareComplete = async (collaboratorId: number) => {\r\n        try {\r\n            if (shareNoteId) {\r\n                await api.shareNote(shareNoteId, collaboratorId);\r\n                // Refresh notes after sharing\r\n                const updatedNotes = await api.getNotes();\r\n                setNotes(updatedNotes);\r\n                setShareNoteId(null);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error sharing note:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to share note');\r\n        }\r\n    };\r\n\r\n    const handleSaveNote = async (note: Partial<Note>) => {\r\n        try {\r\n            setError(null);\r\n            if (selectedNote) {\r\n                await api.updateNote(selectedNote.id, note);\r\n            } else {\r\n                await api.createNote(note);\r\n            }\r\n            // Refresh notes list immediately after saving\r\n            const updatedNotes = await api.getNotes();\r\n            setNotes(updatedNotes);\r\n            setIsNoteModalOpen(false);\r\n            setSelectedNote(null);\r\n            // Navigate back to the notes list\r\n            navigate('/notes', { replace: true });\r\n        } catch (err) {\r\n            console.error('Error saving note:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setIsNoteModalOpen(false);\r\n        setSelectedNote(null);\r\n        // Navigate back to the notes list\r\n        navigate('/notes', { replace: true });\r\n    };\r\n\r\n    // Get unique categories using Object.keys and reduce\r\n    const categories = notes\r\n        .reduce((acc: { [key: string]: boolean }, note) => {\r\n            if (note.category) {\r\n                acc[note.category] = true;\r\n            }\r\n            return acc;\r\n        }, {});\r\n    const uniqueCategories = Object.keys(categories);\r\n\r\n    // Filter and sort notes\r\n    const filteredNotes = notes.filter(note => {\r\n        const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                            note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n        const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n        return matchesSearch && matchesCategory;\r\n    });\r\n\r\n    if (isLoading) return <div>Loading notes...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <div className=\"notes-page\">\r\n            <h1>\r\n                {noteType === 'shared' && 'Shared Notes'}\r\n                {noteType === 'public' && 'Public Notes'}\r\n                {noteType === 'my-notes' && 'My Notes'}\r\n            </h1>\r\n            {isNoteModalOpen && (\r\n                <Modal \r\n                    isOpen={isNoteModalOpen}\r\n                    title=\"Create New Note\"\r\n                    onClose={() => {\r\n                        setIsNoteModalOpen(false);\r\n                        navigate('/notes');\r\n                    }}\r\n                >\r\n                    <NoteEditor\r\n                        onSave={handleSaveNote}\r\n                        onCancel={() => {\r\n                            setIsNoteModalOpen(false);\r\n                            navigate('/notes');\r\n                        }}\r\n                    />\r\n                </Modal>\r\n            )}\r\n            {shareNoteId && (\r\n                <Modal\r\n                    isOpen={true}\r\n                    title=\"Share Note\"\r\n                    onClose={() => setShareNoteId(null)}\r\n                >\r\n                    <ShareNoteDialog\r\n                        noteId={shareNoteId}\r\n                        onShare={handleShareComplete}\r\n                        onClose={() => setShareNoteId(null)}\r\n                    />\r\n                </Modal>\r\n            )}\r\n            <div className=\"search-filters\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search notes...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-input\"\r\n                />\r\n                <select\r\n                    value={selectedCategory}\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                    className=\"category-filter\"\r\n                >\r\n                    <option value=\"\">All Categories</option>\r\n                    {uniqueCategories.map(category => (\r\n                        <option key={category} value={category}>\r\n                            {category}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select\r\n                    value={sortBy}\r\n                    onChange={(e) => setSortBy(e.target.value)}\r\n                    className=\"sort-select\"\r\n                >\r\n                    <option value=\"date-desc\">Newest First</option>\r\n                    <option value=\"date-asc\">Oldest First</option>\r\n                    <option value=\"title\">Title</option>\r\n                    <option value=\"category\">Category</option>\r\n                </select>\r\n            </div>\r\n            {notes.length === 0 ? (\r\n                <div className=\"empty-state\">\r\n                    <span>No {noteType} notes found</span>\r\n                    <span>\r\n                        {noteType === 'shared' && 'Notes shared with you will appear here'}\r\n                        {noteType === 'public' && 'Public notes from other users will appear here'}\r\n                        {noteType === 'my-notes' && 'Create your first note to get started'}\r\n                    </span>\r\n                </div>\r\n            ) : (\r\n                <div className=\"notes-container\">\r\n                    <NoteList \r\n                        notes={filteredNotes}\r\n                        isLoading={isLoading}\r\n                        error={error}\r\n                        onNoteSelect={handleNoteSelect}\r\n                        onDeleteNote={handleDeleteNote}\r\n                        onMakePublic={handleMakePublic}\r\n                        onShare={handleShare}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}