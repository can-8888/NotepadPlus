{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import'./App.css';import{useAuth}from'./contexts/AuthContext';import{api}from'./services/api';import{Routes,Route,Navigate,useNavigate,useLocation}from'react-router-dom';import NotesPage from'./pages/NotesPage';import Sidebar from'./components/Sidebar';import DrivePage from'./pages/DrivePage';import LoginPage from'./pages/LoginPage';import RegisterPage from'./pages/RegisterPage';import NotificationBell from'./components/NotificationBell';import{signalRService}from'./services/signalRService';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";// Add this near the top of the file with other components\nconst AuthRoute=_ref=>{let{children}=_ref;const{user}=useAuth();const location=useLocation();if(user){return/*#__PURE__*/_jsx(Navigate,{to:\"/notes\",state:{from:location},replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};// Add this new Layout component\nconst Layout=_ref2=>{let{children}=_ref2;const{user,logout}=useAuth();const navigate=useNavigate();const handleLogout=()=>{logout();navigate('/login');};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Notepad+\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-right\",children:[/*#__PURE__*/_jsx(NotificationBell,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"welcome-text\",children:[\"Welcome, \",user===null||user===void 0?void 0:user.username,\"!\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"logout-button\",onClick:handleLogout,children:\"Logout\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-layout\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:children})]})]});};function App(){const{user,isInitialized}=useAuth();const[showRegister,setShowRegister]=useState(false);const[notes,setNotes]=useState([]);const[sharedNotes,setSharedNotes]=useState([]);const[selectedNote,setSelectedNote]=useState(undefined);const[searchTerm,setSearchTerm]=useState('');const[selectedCategory,setSelectedCategory]=useState('');const[sortBy,setSortBy]=useState('date-desc');const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[shareDialogNoteId,setShareDialogNoteId]=useState(null);const[currentView,setCurrentView]=useState('my-notes');const[publicNotes,setPublicNotes]=useState([]);const[sharedWithMeNotes,setSharedWithMeNotes]=useState([]);const[message,setMessage]=useState(null);const navigate=useNavigate();const location=useLocation();useEffect(()=>{if(user){console.log('User logged in, loading notes...');// Debug log\nloadAllNotes();}},[user]);// Only depend on user\nconst loadAllNotes=async()=>{try{setIsLoading(true);setError(null);const notesData=await api.getNotes();setNotes(notesData||[]);}catch(err){var _err$response;// Type as any for now\nif((err===null||err===void 0?void 0:(_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===401){// Handle unauthorized error\nnavigate('/login');}else{setError(err instanceof Error?err.message:'Failed to load notes');console.error('Error loading notes:',err);}setNotes([]);}finally{setIsLoading(false);}};const handleDeleteNote=async noteId=>{try{setError(null);await api.deleteNote(noteId);setNotes(notes.filter(note=>note.id!==noteId));if((selectedNote===null||selectedNote===void 0?void 0:selectedNote.id)===noteId){setSelectedNote(undefined);}}catch(err){setError('Failed to delete note');console.error(err);}};const handleCloseModal=()=>{console.log('Modal close triggered');setSelectedNote(undefined);};const handleNoteSelect=note=>{console.log('Note selected:',note);setSelectedNote(note);console.log('Modal opened');};const handleSaveNote=async noteData=>{try{console.log('Saving note:',noteData);if(noteData.id){// Updating existing note\nawait api.updateNote(noteData.id,noteData);}else{// Creating new note\nawait api.createNote(noteData);}await loadAllNotes();setSelectedNote(undefined);console.log('Note saved successfully');}catch(err){console.error('Failed to save note:',err);setError('Failed to save note');}};const handleMakePublic=async noteId=>{try{console.log('handleMakePublic called with noteId:',noteId);if(!noteId){console.error('Invalid note ID:',noteId);return;}const updatedNote=await api.makeNotePublic(noteId);console.log('Note successfully made public:',updatedNote);// Update both notes lists\nsetNotes(prevNotes=>prevNotes.filter(note=>note.id!==noteId));setPublicNotes(prevPublicNotes=>[...prevPublicNotes,updatedNote]);// Show success message\nsetMessage({type:'success',text:'Note is now public'});// Refresh lists\nawait loadAllNotes();await loadPublicNotes();}catch(error){console.error('Error making note public:',error);setError(error instanceof Error?error.message:'Failed to make note public');}};const sortNotes=notes=>{return[...notes].sort((a,b)=>{switch(sortBy){case'date-desc':return new Date(b.createdAt).getTime()-new Date(a.createdAt).getTime();case'date-asc':return new Date(a.createdAt).getTime()-new Date(b.createdAt).getTime();case'title':return a.title.localeCompare(b.title);case'category':// Handle undefined categories\nconst categoryA=a.category||'';const categoryB=b.category||'';return categoryA.localeCompare(categoryB);default:return 0;}});};const filterNotes=useCallback(notesToFilter=>{if(!notesToFilter)return[];let filtered=[...notesToFilter];// Apply search filter\nif(searchTerm){filtered=filtered.filter(note=>note.title.toLowerCase().includes(searchTerm.toLowerCase())||note.content.toLowerCase().includes(searchTerm.toLowerCase()));}// Apply category filter\nif(selectedCategory){filtered=filtered.filter(note=>note.category===selectedCategory);}// Apply sorting\nfiltered.sort((a,b)=>{switch(sortBy){case'date-asc':return new Date(a.createdAt).getTime()-new Date(b.createdAt).getTime();case'date-desc':return new Date(b.createdAt).getTime()-new Date(a.createdAt).getTime();case'title-asc':return a.title.localeCompare(b.title);case'title-desc':return b.title.localeCompare(a.title);case'title':return a.title.localeCompare(b.title);case'category':return(a.category||'').localeCompare(b.category||'');default:return 0;}});return filtered;},[searchTerm,selectedCategory,sortBy]);const filteredNotes=filterNotes(notes);const renderSortOptions=()=>{const options=[{value:'date-desc',label:'Newest First'},{value:'date-asc',label:'Oldest First'},{value:'title',label:'Title'},{value:'category',label:'Category'}];return options.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value));};const renderCategoryOptions=()=>{const categories=Array.from(new Set(notes.map(note=>note.category))).filter(category=>category);return[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"},\"all\"),...categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))];};// Add debug logging for filtered notes\nuseEffect(()=>{console.log('Current notes:',notes);console.log('Filtered notes:',filteredNotes);},[notes,filteredNotes]);useEffect(()=>{console.log('Notes state updated:',notes);},[notes]);// Add useEffect to monitor sharedNotes changes\nuseEffect(()=>{console.log('Shared notes updated:',sharedNotes);},[sharedNotes]);const handleShare=noteId=>{setShareDialogNoteId(noteId);};const handleShareComplete=async()=>{await loadAllNotes();// Reload notes to update the UI\nsetShareDialogNoteId(null);};const loadPublicNotes=async()=>{try{console.log('Loading public notes...');const publicNotes=await api.getPublicNotes();console.log('Public notes received:',publicNotes);setPublicNotes(publicNotes);}catch(err){console.error('Error loading public notes:',err);setError(err instanceof Error?err.message:'Failed to load public notes');}};const loadSharedNotes=async()=>{try{console.log('Loading shared notes...');setIsLoading(true);const shared=await api.getSharedNotes();console.log('Shared notes received:',shared);if(Array.isArray(shared)){setSharedWithMeNotes(shared);}}catch(err){console.error('Error loading shared notes:',err);setError(err instanceof Error?err.message:'Failed to load shared notes');}finally{setIsLoading(false);}};useEffect(()=>{if(user){console.log('Current view:',currentView);switch(currentView){case'my-notes':loadAllNotes();break;case'shared-notes':loadSharedNotes();break;case'public-notes':loadPublicNotes();break;}}},[currentView,user]);// Update setCurrentView to also update the URL\nconst handleViewChange=view=>{setCurrentView(view);switch(view){case'my-notes':navigate('/notes');break;case'shared-notes':navigate('/shared-notes');break;case'public-notes':navigate('/public-notes');break;}};// Add effect to sync URL with current view\nuseEffect(()=>{const path=location.pathname;if(path==='/public-notes'&&currentView!=='public-notes'){setCurrentView('public-notes');}else if(path==='/shared-notes'&&currentView!=='shared-notes'){setCurrentView('shared-notes');}else if(path==='/notes'&&currentView!=='my-notes'){setCurrentView('my-notes');}},[location.pathname]);const handleShareNote=async(noteId,collaboratorId)=>{try{const updatedNote=await api.shareNote(noteId,collaboratorId);// Update the notes list with the updated note\nsetNotes(notes.map(note=>note.id===noteId?updatedNote:note));// Show success message\nsetMessage({type:'success',text:'Note shared successfully'});}catch(error){console.error('Error sharing note:',error);setMessage({type:'error',text:error instanceof Error?error.message:'Failed to share note'});}};useEffect(()=>{let mounted=true;const initializeSignalR=async()=>{if(user){// Only connect if user is logged in\nawait signalRService.startConnection();}};initializeSignalR();return()=>{mounted=false;signalRService.stopConnection();};},[user]);// Add user as dependency to reconnect when user changes\n// Show loading state while auth is initializing\nif(!isInitialized){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}// If not authenticated, only render auth routes\nif(!user){return/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(RegisterPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true})})]});}// Rest of your render logic for authenticated users\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(Navigate,{to:\"/notes\",replace:true})})}),/*#__PURE__*/_jsx(Route,{path:\"/notes\",element:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(NotesPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/notes/new\",element:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(NotesPage,{isCreating:true})})}),/*#__PURE__*/_jsx(Route,{path:\"/notes/shared\",element:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(NotesPage,{type:\"shared\"})})}),/*#__PURE__*/_jsx(Route,{path:\"/notes/public\",element:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(NotesPage,{type:\"public\"})})}),/*#__PURE__*/_jsx(Route,{path:\"/drive\",element:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(DrivePage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/drive/:folderName\",element:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(DrivePage,{})})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","api","Routes","Route","Navigate","useNavigate","useLocation","NotesPage","Sidebar","DrivePage","LoginPage","RegisterPage","NotificationBell","signalRService","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","AuthRoute","_ref","children","user","location","to","state","from","replace","Layout","_ref2","logout","navigate","handleLogout","className","username","onClick","App","isInitialized","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","shareDialogNoteId","setShareDialogNoteId","currentView","setCurrentView","publicNotes","setPublicNotes","sharedWithMeNotes","setSharedWithMeNotes","message","setMessage","console","log","loadAllNotes","notesData","getNotes","err","_err$response","response","status","Error","handleDeleteNote","noteId","deleteNote","filter","note","id","handleCloseModal","handleNoteSelect","handleSaveNote","noteData","updateNote","createNote","handleMakePublic","updatedNote","makeNotePublic","prevNotes","prevPublicNotes","type","text","loadPublicNotes","sortNotes","sort","a","b","Date","createdAt","getTime","title","localeCompare","categoryA","category","categoryB","filterNotes","notesToFilter","filtered","toLowerCase","includes","content","filteredNotes","renderSortOptions","options","value","label","map","option","renderCategoryOptions","categories","Array","Set","handleShare","handleShareComplete","getPublicNotes","loadSharedNotes","shared","getSharedNotes","isArray","handleViewChange","view","path","pathname","handleShareNote","collaboratorId","shareNote","mounted","initializeSignalR","startConnection","stopConnection","element","isCreating"],"sources":["D:/_master/v5/NotepadPlus/Frontend-React/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note, NoteApiResponse, NoteStatus } from './types/Note';\r\nimport { api, getCurrentUser } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\nimport Modal from './components/Modal';\r\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom';\r\nimport NotesPage from './pages/NotesPage';\r\nimport Sidebar from './components/Sidebar';\r\nimport DrivePage from './pages/DrivePage';\r\nimport axios from 'axios';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport NotificationBell from './components/NotificationBell';\r\nimport { signalRService } from './services/signalRService';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title-asc' | 'title-desc' | 'title' | 'category';\r\ntype ViewType = 'my-notes' | 'shared-notes' | 'public-notes';\r\n\r\n// Add this near the top of the file with other components\r\nconst AuthRoute = ({ children }: { children: React.ReactNode }) => {\r\n    const { user } = useAuth();\r\n    const location = useLocation();\r\n\r\n    if (user) {\r\n        return <Navigate to=\"/notes\" state={{ from: location }} replace />;\r\n    }\r\n\r\n    return <>{children}</>;\r\n};\r\n\r\n// Add this new Layout component\r\nconst Layout = ({ children }: { children: React.ReactNode }) => {\r\n    const { user, logout } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        navigate('/login');\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <header className=\"app-header\">\r\n                <h1>Notepad+</h1>\r\n                <div className=\"header-right\">\r\n                    <NotificationBell />\r\n                    <div className=\"user-info\">\r\n                        <span className=\"welcome-text\">Welcome, {user?.username}!</span>\r\n                        <button className=\"logout-button\" onClick={handleLogout}>\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <div className=\"app-layout\">\r\n                <Sidebar />\r\n                <main className=\"main-content\">\r\n                    {children}\r\n                </main>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction App() {\r\n    const { user, isInitialized } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [shareDialogNoteId, setShareDialogNoteId] = useState<number | null>(null);\r\n    const [currentView, setCurrentView] = useState<ViewType>('my-notes');\r\n    const [publicNotes, setPublicNotes] = useState<Note[]>([]);\r\n    const [sharedWithMeNotes, setSharedWithMeNotes] = useState<Note[]>([]);\r\n    const [message, setMessage] = useState<{ type: string; text: string } | null>(null);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            const notesData = await api.getNotes();\r\n            setNotes(notesData || []);\r\n        } catch (err: any) { // Type as any for now\r\n            if (err?.response?.status === 401) {\r\n                // Handle unauthorized error\r\n                navigate('/login');\r\n            } else {\r\n                setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n                console.error('Error loading notes:', err);\r\n            }\r\n            setNotes([]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        console.log('Modal close triggered');\r\n        setSelectedNote(undefined);\r\n    };\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        console.log('Note selected:', note);\r\n        setSelectedNote(note);\r\n        console.log('Modal opened');\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            console.log('Saving note:', noteData);\r\n            if (noteData.id) {\r\n                // Updating existing note\r\n                await api.updateNote(noteData.id, noteData);\r\n            } else {\r\n                // Creating new note\r\n                await api.createNote(noteData);\r\n            }\r\n            await loadAllNotes();\r\n            setSelectedNote(undefined);\r\n            console.log('Note saved successfully');\r\n        } catch (err) {\r\n            console.error('Failed to save note:', err);\r\n            setError('Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            console.log('handleMakePublic called with noteId:', noteId);\r\n            if (!noteId) {\r\n                console.error('Invalid note ID:', noteId);\r\n                return;\r\n            }\r\n\r\n            const updatedNote: Note = await api.makeNotePublic(noteId);\r\n            console.log('Note successfully made public:', updatedNote);\r\n\r\n            // Update both notes lists\r\n            setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\r\n            setPublicNotes(prevPublicNotes => [...prevPublicNotes, updatedNote]);\r\n\r\n            // Show success message\r\n            setMessage({ type: 'success', text: 'Note is now public' });\r\n\r\n            // Refresh lists\r\n            await loadAllNotes();\r\n            await loadPublicNotes();\r\n        } catch (error) {\r\n            console.error('Error making note public:', error);\r\n            setError(error instanceof Error ? error.message : 'Failed to make note public');\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notes: Note[]): Note[] => {\r\n        return [...notes].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    // Handle undefined categories\r\n                    const categoryA = a.category || '';\r\n                    const categoryB = b.category || '';\r\n                    return categoryA.localeCompare(categoryB);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filterNotes = useCallback((notesToFilter: Note[]) => {\r\n        if (!notesToFilter) return [];\r\n        \r\n        let filtered = [...notesToFilter];\r\n\r\n        // Apply search filter\r\n        if (searchTerm) {\r\n            filtered = filtered.filter(note =>\r\n                note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                note.content.toLowerCase().includes(searchTerm.toLowerCase())\r\n            );\r\n        }\r\n\r\n        // Apply category filter\r\n        if (selectedCategory) {\r\n            filtered = filtered.filter(note => note.category === selectedCategory);\r\n        }\r\n\r\n        // Apply sorting\r\n        filtered.sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-asc':\r\n                    return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\r\n                case 'date-desc':\r\n                    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n                case 'title-asc':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'title-desc':\r\n                    return b.title.localeCompare(a.title);\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    return (a.category || '').localeCompare(b.category || '');\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n\r\n        return filtered;\r\n    }, [searchTerm, selectedCategory, sortBy]);\r\n\r\n    const filteredNotes = filterNotes(notes);\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredNotes);\r\n    }, [notes, filteredNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    // Add useEffect to monitor sharedNotes changes\r\n    useEffect(() => {\r\n        console.log('Shared notes updated:', sharedNotes);\r\n    }, [sharedNotes]);\r\n\r\n    const handleShare = (noteId: number) => {\r\n        setShareDialogNoteId(noteId);\r\n    };\r\n\r\n    const handleShareComplete = async () => {\r\n        await loadAllNotes(); // Reload notes to update the UI\r\n        setShareDialogNoteId(null);\r\n    };\r\n\r\n    const loadPublicNotes = async () => {\r\n        try {\r\n            console.log('Loading public notes...');\r\n            const publicNotes = await api.getPublicNotes();\r\n            console.log('Public notes received:', publicNotes);\r\n            setPublicNotes(publicNotes);\r\n        } catch (err) {\r\n            console.error('Error loading public notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load public notes');\r\n        }\r\n    };\r\n\r\n    const loadSharedNotes = async () => {\r\n        try {\r\n            console.log('Loading shared notes...');\r\n            setIsLoading(true);\r\n            const shared = await api.getSharedNotes();\r\n            console.log('Shared notes received:', shared);\r\n            if (Array.isArray(shared)) {\r\n                setSharedWithMeNotes(shared);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error loading shared notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load shared notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('Current view:', currentView);\r\n            switch (currentView) {\r\n                case 'my-notes':\r\n                    loadAllNotes();\r\n                    break;\r\n                case 'shared-notes':\r\n                    loadSharedNotes();\r\n                    break;\r\n                case 'public-notes':\r\n                    loadPublicNotes();\r\n                    break;\r\n            }\r\n        }\r\n    }, [currentView, user]);\r\n\r\n    // Update setCurrentView to also update the URL\r\n    const handleViewChange = (view: ViewType) => {\r\n        setCurrentView(view);\r\n        switch (view) {\r\n            case 'my-notes':\r\n                navigate('/notes');\r\n                break;\r\n            case 'shared-notes':\r\n                navigate('/shared-notes');\r\n                break;\r\n            case 'public-notes':\r\n                navigate('/public-notes');\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Add effect to sync URL with current view\r\n    useEffect(() => {\r\n        const path = location.pathname;\r\n        if (path === '/public-notes' && currentView !== 'public-notes') {\r\n            setCurrentView('public-notes');\r\n        } else if (path === '/shared-notes' && currentView !== 'shared-notes') {\r\n            setCurrentView('shared-notes');\r\n        } else if (path === '/notes' && currentView !== 'my-notes') {\r\n            setCurrentView('my-notes');\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    const handleShareNote = async (noteId: number, collaboratorId: number) => {\r\n        try {\r\n            const updatedNote = await api.shareNote(noteId, collaboratorId);\r\n            \r\n            // Update the notes list with the updated note\r\n            setNotes(notes.map(note => \r\n                note.id === noteId ? updatedNote : note\r\n            ));\r\n            \r\n            // Show success message\r\n            setMessage({ type: 'success', text: 'Note shared successfully' });\r\n        } catch (error) {\r\n            console.error('Error sharing note:', error);\r\n            setMessage({ type: 'error', text: error instanceof Error ? error.message : 'Failed to share note' });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        const initializeSignalR = async () => {\r\n            if (user) {  // Only connect if user is logged in\r\n                await signalRService.startConnection();\r\n            }\r\n        };\r\n\r\n        initializeSignalR();\r\n\r\n        return () => {\r\n            mounted = false;\r\n            signalRService.stopConnection();\r\n        };\r\n    }, [user]); // Add user as dependency to reconnect when user changes\r\n\r\n    // Show loading state while auth is initializing\r\n    if (!isInitialized) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // If not authenticated, only render auth routes\r\n    if (!user) {\r\n        return (\r\n            <Routes>\r\n                <Route path=\"/login\" element={<LoginPage />} />\r\n                <Route path=\"/register\" element={<RegisterPage />} />\r\n                <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\r\n            </Routes>\r\n        );\r\n    }\r\n\r\n    // Rest of your render logic for authenticated users\r\n    return (\r\n        <div className=\"App\">\r\n            <Routes>\r\n                {/* Protected routes */}\r\n                <Route path=\"/\" element={\r\n                    <Layout>\r\n                        <Navigate to=\"/notes\" replace />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/notes\" element={\r\n                    <Layout>\r\n                        <NotesPage />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/notes/new\" element={\r\n                    <Layout>\r\n                        <NotesPage isCreating={true} />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/notes/shared\" element={\r\n                    <Layout>\r\n                        <NotesPage type=\"shared\" />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/notes/public\" element={\r\n                    <Layout>\r\n                        <NotesPage type=\"public\" />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/drive\" element={\r\n                    <Layout>\r\n                        <DrivePage />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/drive/:folderName\" element={\r\n                    <Layout>\r\n                        <DrivePage />\r\n                    </Layout>\r\n                } />\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}