{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\components\\\\NoteList.tsx\";\nimport React from 'react';\nimport { NoteStatus } from '../types/Note';\nimport './NoteList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteList = ({\n  notes,\n  selectedNote,\n  onNoteSelect,\n  onDeleteNote,\n  onMakePublic,\n  onShare,\n  isLoading,\n  error\n}) => {\n  // Add debug logging\n  console.log('NoteList render:', {\n    notesCount: notes.length,\n    notes,\n    isLoading,\n    error\n  });\n\n  // Helper function to get status class name\n  const getStatusClassName = (status, isPublic) => {\n    if (isPublic) return 'public';\n    return status.toLowerCase();\n  };\n\n  // Helper function to get status text\n  const getStatusText = (status, isPublic) => {\n    if (isPublic) return 'Public';\n    switch (status) {\n      case NoteStatus.Shared:\n        return 'Shared';\n      case NoteStatus.Personal:\n        return 'Personal';\n      default:\n        return 'Personal';\n    }\n  };\n  if (isLoading) {\n    console.log('Loading state');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    console.log('Error state:', error);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n  if (notes.length === 0) {\n    console.log('No notes state');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes-message\",\n      children: \"No notes found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-grid\",\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `note-card ${(selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === note.id ? 'selected' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"note-title\",\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-right-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `note-status ${getStatusClassName(note.status, note.isPublic)}`,\n          children: getStatusText(note.status, note.isPublic)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: e => {\n              e.stopPropagation();\n              onDeleteNote(note.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"share-button\",\n            onClick: e => {\n              e.stopPropagation();\n              onShare(note.id);\n            },\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), note.status !== NoteStatus.Public && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"public-button\",\n            onClick: e => {\n              e.stopPropagation();\n              onMakePublic(note.id);\n            },\n            children: \"Make Public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-content\",\n        onClick: () => onNoteSelect(note),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-metadata\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Category: \", note.category || 'Uncategorized']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Owner: \", note.owner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","NoteStatus","jsxDEV","_jsxDEV","NoteList","notes","selectedNote","onNoteSelect","onDeleteNote","onMakePublic","onShare","isLoading","error","console","log","notesCount","length","getStatusClassName","status","isPublic","toLowerCase","getStatusText","Shared","Personal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","note","id","title","onClick","e","stopPropagation","Public","content","category","owner","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/components/NoteList.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Note, NoteStatus, getNoteStatus } from '../types/Note';\r\nimport './NoteList.css';\r\n\r\ninterface NoteListProps {\r\n    notes: Note[];\r\n    selectedNote?: Note;\r\n    onNoteSelect: (note: Note) => void;\r\n    onDeleteNote: (id: number) => void;\r\n    onMakePublic: (id: number) => void;\r\n    onShare: (id: number) => void;\r\n    viewType?: string;\r\n    isLoading?: boolean;\r\n    error?: string | null;\r\n}\r\n\r\nconst NoteList: React.FC<NoteListProps> = ({ \r\n    notes, \r\n    selectedNote,\r\n    onNoteSelect, \r\n    onDeleteNote, \r\n    onMakePublic,\r\n    onShare,\r\n    isLoading,\r\n    error \r\n}) => {\r\n    // Add debug logging\r\n    console.log('NoteList render:', {\r\n        notesCount: notes.length,\r\n        notes,\r\n        isLoading,\r\n        error\r\n    });\r\n\r\n    // Helper function to get status class name\r\n    const getStatusClassName = (status: NoteStatus, isPublic: boolean): string => {\r\n        if (isPublic) return 'public';\r\n        return status.toLowerCase();\r\n    };\r\n\r\n    // Helper function to get status text\r\n    const getStatusText = (status: NoteStatus, isPublic: boolean): string => {\r\n        if (isPublic) return 'Public';\r\n        switch (status) {\r\n            case NoteStatus.Shared:\r\n                return 'Shared';\r\n            case NoteStatus.Personal:\r\n                return 'Personal';\r\n            default:\r\n                return 'Personal';\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        console.log('Loading state');\r\n        return <div>Loading...</div>;\r\n    }\r\n    if (error) {\r\n        console.log('Error state:', error);\r\n        return <div className=\"error\">{error}</div>;\r\n    }\r\n    if (notes.length === 0) {\r\n        console.log('No notes state');\r\n        return <div className=\"no-notes-message\">No notes found</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes-grid\">\r\n            {notes.map((note) => (\r\n                <div \r\n                    key={note.id} \r\n                    className={`note-card ${selectedNote?.id === note.id ? 'selected' : ''}`}\r\n                >\r\n                    <div className=\"note-header\">\r\n                        <h3 className=\"note-title\">{note.title}</h3>\r\n                    </div>\r\n                    \r\n                    <div className=\"note-right-content\">\r\n                        <span className={`note-status ${getStatusClassName(note.status, note.isPublic)}`}>\r\n                            {getStatusText(note.status, note.isPublic)}\r\n                        </span>\r\n                        <div className=\"note-actions\">\r\n                            <button className=\"delete-button\" onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                onDeleteNote(note.id);\r\n                            }}>\r\n                                Delete\r\n                            </button>\r\n                            <button className=\"share-button\" onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                onShare(note.id);\r\n                            }}>\r\n                                Share\r\n                            </button>\r\n                            {note.status !== NoteStatus.Public && (\r\n                                <button className=\"public-button\" onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    onMakePublic(note.id);\r\n                                }}>\r\n                                    Make Public\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"note-content\" onClick={() => onNoteSelect(note)}>\r\n                        <p>{note.content}</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"note-metadata\">\r\n                        <div>Category: {note.category || 'Uncategorized'}</div>\r\n                        <div>Owner: {note.owner}</div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}