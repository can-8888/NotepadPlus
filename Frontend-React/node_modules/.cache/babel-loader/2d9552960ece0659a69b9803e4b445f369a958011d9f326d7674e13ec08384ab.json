{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\components\\\\NoteList.tsx\";\nimport React from 'react';\nimport { getCurrentUser } from '../services/api';\nimport './NoteList.css';\nimport { NoteStatusIndicator } from './NoteStatusIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteList = ({\n  notes,\n  selectedNote,\n  onNoteSelect,\n  onDeleteNote,\n  onMakePublic,\n  onShare,\n  isLoading,\n  error,\n  viewType = 'my-notes'\n}) => {\n  console.log('NoteList received notes:', notes);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-message\",\n      children: \"Loading notes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-lists-container\",\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => {\n        var _getCurrentUser;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `note-card ${(selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === note.id ? 'selected' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-content\",\n            onClick: () => onNoteSelect(note),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: note.title || 'Untitled'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), viewType === 'my-notes' && /*#__PURE__*/_jsxDEV(NoteStatusIndicator, {\n                note: note\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: note.content ? note.content.substring(0, 100) + '...' : 'No content'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-metadata\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Category: \", note.category || 'Uncategorized']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this), note.user && /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"By: \", note.user.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), viewType === 'my-notes' && note.userId === ((_getCurrentUser = getCurrentUser()) === null || _getCurrentUser === void 0 ? void 0 : _getCurrentUser.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onDeleteNote(note.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onShare(note.id),\n              children: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), !note.isPublic && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onMakePublic(note.id),\n              children: \"Make Public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)]\n        }, note.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-notes-message\",\n      children: \"No notes available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","getCurrentUser","NoteStatusIndicator","jsxDEV","_jsxDEV","NoteList","notes","selectedNote","onNoteSelect","onDeleteNote","onMakePublic","onShare","isLoading","error","viewType","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","note","_getCurrentUser","id","onClick","title","content","substring","category","user","username","userId","isPublic","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/components/NoteList.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Note } from '../types/Note';\r\nimport { getCurrentUser } from '../services/api';\r\nimport './NoteList.css';\r\nimport { NoteStatusIndicator } from './NoteStatusIndicator';\r\n\r\ninterface NoteListProps {\r\n    notes: Note[];\r\n    selectedNote?: Note;\r\n    onNoteSelect: (note: Note) => void;\r\n    onDeleteNote: (noteId: number) => Promise<void>;\r\n    onMakePublic: (noteId: number) => Promise<void>;\r\n    onShare: (noteId: number) => void;\r\n    isLoading?: boolean;\r\n    error?: string | null;\r\n    viewType?: 'my-notes' | 'shared-notes' | 'public-notes';\r\n}\r\n\r\nconst NoteList: React.FC<NoteListProps> = ({\r\n    notes,\r\n    selectedNote,\r\n    onNoteSelect,\r\n    onDeleteNote,\r\n    onMakePublic,\r\n    onShare,\r\n    isLoading,\r\n    error,\r\n    viewType = 'my-notes'\r\n}) => {\r\n    console.log('NoteList received notes:', notes);\r\n\r\n    if (isLoading) {\r\n        return <div className=\"loading-message\">Loading notes...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"error-message\">{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"note-lists-container\">\r\n            {notes.length > 0 ? (\r\n                <div className=\"notes-grid\">\r\n                    {notes.map((note) => (\r\n                        <div \r\n                            key={note.id} \r\n                            className={`note-card ${selectedNote?.id === note.id ? 'selected' : ''}`}\r\n                        >\r\n                            <div className=\"note-content\" onClick={() => onNoteSelect(note)}>\r\n                                <div className=\"note-header\">\r\n                                    <h3>{note.title || 'Untitled'}</h3>\r\n                                    {viewType === 'my-notes' && <NoteStatusIndicator note={note} />}\r\n                                </div>\r\n                                <p>{note.content ? note.content.substring(0, 100) + '...' : 'No content'}</p>\r\n                                <div className=\"note-metadata\">\r\n                                    <small>Category: {note.category || 'Uncategorized'}</small>\r\n                                    {note.user && <small>By: {note.user.username}</small>}\r\n                                </div>\r\n                            </div>\r\n                            {/* Only show actions for notes owned by the current user in My Notes section */}\r\n                            {viewType === 'my-notes' && note.userId === getCurrentUser()?.id && (\r\n                                <div className=\"note-actions\">\r\n                                    <button onClick={() => onDeleteNote(note.id)}>Delete</button>\r\n                                    <button onClick={() => onShare(note.id)}>Share</button>\r\n                                    {!note.isPublic && (\r\n                                        <button onClick={() => onMakePublic(note.id)}>Make Public</button>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p className=\"no-notes-message\">No notes available</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}