{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import NoteList from'./components/NoteList';import NoteEditor from'./components/NoteEditor';import Login from'./components/auth/Login';import Register from'./components/auth/Register';import{useAuth}from'./contexts/AuthContext';import{api}from'./services/api';import{ShareNoteDialog}from'./components/ShareNoteDialog';import Modal from'./components/Modal';import{Routes,Route,useNavigate,useLocation}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function AppContent(){const{user,logout}=useAuth();const[showRegister,setShowRegister]=useState(false);const[notes,setNotes]=useState([]);const[sharedNotes,setSharedNotes]=useState([]);const[selectedNote,setSelectedNote]=useState(undefined);const[searchTerm,setSearchTerm]=useState('');const[selectedCategory,setSelectedCategory]=useState('');const[sortBy,setSortBy]=useState('date-desc');const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[shareDialogNoteId,setShareDialogNoteId]=useState(null);const[isCreating,setIsCreating]=useState(false);const[isNoteModalOpen,setIsNoteModalOpen]=useState(false);const[currentView,setCurrentView]=useState('my-notes');const[publicNotes,setPublicNotes]=useState([]);const[sharedWithMeNotes,setSharedWithMeNotes]=useState([]);const navigate=useNavigate();const location=useLocation();useEffect(()=>{if(user){console.log('User logged in, loading notes...');// Debug log\nloadAllNotes();}},[user]);// Only depend on user\nconst loadAllNotes=async()=>{try{setIsLoading(true);setError(null);console.log('Loading notes for user:',user);const[myNotesResponse,shared]=await Promise.all([api.getNotes(),api.getSharedNotes()]);console.log('API Response - myNotes:',myNotesResponse);console.log('API Response - shared:',shared);// Convert API response to Note format\nconst formattedMyNotes=myNotesResponse.map(note=>{var _ref,_note$id,_ref2,_note$title,_ref3,_note$content,_ref4,_note$category,_ref5,_note$createdAt,_ref6,_note$updatedAt,_ref7,_note$userId,_ref8,_note$isPublic,_note$user;return{id:(_ref=(_note$id=note.id)!==null&&_note$id!==void 0?_note$id:note.Id)!==null&&_ref!==void 0?_ref:0,title:(_ref2=(_note$title=note.title)!==null&&_note$title!==void 0?_note$title:note.Title)!==null&&_ref2!==void 0?_ref2:'',content:(_ref3=(_note$content=note.content)!==null&&_note$content!==void 0?_note$content:note.Content)!==null&&_ref3!==void 0?_ref3:'',category:(_ref4=(_note$category=note.category)!==null&&_note$category!==void 0?_note$category:note.Category)!==null&&_ref4!==void 0?_ref4:'',createdAt:new Date((_ref5=(_note$createdAt=note.createdAt)!==null&&_note$createdAt!==void 0?_note$createdAt:note.CreatedAt)!==null&&_ref5!==void 0?_ref5:''),updatedAt:new Date((_ref6=(_note$updatedAt=note.updatedAt)!==null&&_note$updatedAt!==void 0?_note$updatedAt:note.UpdatedAt)!==null&&_ref6!==void 0?_ref6:''),userId:(_ref7=(_note$userId=note.userId)!==null&&_note$userId!==void 0?_note$userId:note.UserId)!==null&&_ref7!==void 0?_ref7:0,isPublic:(_ref8=(_note$isPublic=note.isPublic)!==null&&_note$isPublic!==void 0?_note$isPublic:note.IsPublic)!==null&&_ref8!==void 0?_ref8:false,user:(_note$user=note.user)!==null&&_note$user!==void 0?_note$user:note.User};});console.log('Setting notes state with:',formattedMyNotes);setNotes(formattedMyNotes);setSharedNotes(Array.isArray(shared)?shared:[]);}catch(err){console.error('Error loading notes:',err);setError(err instanceof Error?err.message:'Failed to load notes');}finally{setIsLoading(false);}};const handleDeleteNote=async noteId=>{try{setError(null);await api.deleteNote(noteId);setNotes(notes.filter(note=>note.id!==noteId));if((selectedNote===null||selectedNote===void 0?void 0:selectedNote.id)===noteId){setSelectedNote(undefined);}}catch(err){setError('Failed to delete note');console.error(err);}};const handleCreateNote=()=>{setSelectedNote(undefined);setIsCreating(true);setIsNoteModalOpen(true);};const handleCloseModal=()=>{console.log('Modal close triggered');setIsNoteModalOpen(false);setIsCreating(false);setSelectedNote(undefined);};const handleNoteSelect=note=>{console.log('Note selected:',note);setSelectedNote(note);setIsNoteModalOpen(true);console.log('Modal opened');};const handleSaveNote=async noteData=>{try{console.log('Saving note:',noteData);if(noteData.id){// Updating existing note\nawait api.updateNote(noteData.id,noteData);}else{// Creating new note\nawait api.createNote(noteData);}await loadAllNotes();setSelectedNote(undefined);setIsCreating(false);console.log('Note saved successfully');setIsNoteModalOpen(false);}catch(err){console.error('Failed to save note:',err);setError('Failed to save note');}};const handleMakePublic=async noteId=>{try{setError(null);await api.makeNotePublic(noteId);// Reload both regular and shared notes\nawait loadAllNotes();// Update the selected note if it was made public\nif((selectedNote===null||selectedNote===void 0?void 0:selectedNote.id)===noteId){const apiNote=await api.getNotes().then(notes=>notes.find(n=>n.id===noteId||n.Id===noteId));if(apiNote){var _ref9,_apiNote$id,_ref10,_apiNote$title,_ref11,_apiNote$content,_ref12,_apiNote$category,_ref13,_apiNote$createdAt,_ref14,_apiNote$updatedAt,_ref15,_apiNote$userId,_ref16,_apiNote$isPublic,_apiNote$user;// Convert API response to Note format\nconst updatedNote={id:(_ref9=(_apiNote$id=apiNote.id)!==null&&_apiNote$id!==void 0?_apiNote$id:apiNote.Id)!==null&&_ref9!==void 0?_ref9:0,title:(_ref10=(_apiNote$title=apiNote.title)!==null&&_apiNote$title!==void 0?_apiNote$title:apiNote.Title)!==null&&_ref10!==void 0?_ref10:'',content:(_ref11=(_apiNote$content=apiNote.content)!==null&&_apiNote$content!==void 0?_apiNote$content:apiNote.Content)!==null&&_ref11!==void 0?_ref11:'',category:(_ref12=(_apiNote$category=apiNote.category)!==null&&_apiNote$category!==void 0?_apiNote$category:apiNote.Category)!==null&&_ref12!==void 0?_ref12:'',createdAt:new Date((_ref13=(_apiNote$createdAt=apiNote.createdAt)!==null&&_apiNote$createdAt!==void 0?_apiNote$createdAt:apiNote.CreatedAt)!==null&&_ref13!==void 0?_ref13:''),updatedAt:new Date((_ref14=(_apiNote$updatedAt=apiNote.updatedAt)!==null&&_apiNote$updatedAt!==void 0?_apiNote$updatedAt:apiNote.UpdatedAt)!==null&&_ref14!==void 0?_ref14:''),userId:(_ref15=(_apiNote$userId=apiNote.userId)!==null&&_apiNote$userId!==void 0?_apiNote$userId:apiNote.UserId)!==null&&_ref15!==void 0?_ref15:0,isPublic:(_ref16=(_apiNote$isPublic=apiNote.isPublic)!==null&&_apiNote$isPublic!==void 0?_apiNote$isPublic:apiNote.IsPublic)!==null&&_ref16!==void 0?_ref16:false,user:(_apiNote$user=apiNote.user)!==null&&_apiNote$user!==void 0?_apiNote$user:apiNote.User};setSelectedNote(updatedNote);}}}catch(err){setError('Failed to make note public');console.error(err);}};const sortNotes=notesToSort=>{return[...notesToSort].sort((a,b)=>{switch(sortBy){case'date-desc':return new Date(b.updatedAt).getTime()-new Date(a.updatedAt).getTime();case'date-asc':return new Date(a.updatedAt).getTime()-new Date(b.updatedAt).getTime();case'title':return a.title.localeCompare(b.title);case'category':return a.category.localeCompare(b.category);default:return 0;}});};const filteredAndSortedNotes=sortNotes(notes.filter(note=>{var _ref17,_user$id;// First filter by user\nif(!user)return false;const userId=(_ref17=(_user$id=user.id)!==null&&_user$id!==void 0?_user$id:user.Id)!==null&&_ref17!==void 0?_ref17:0;const noteUserId=note.userId;if(userId!==noteUserId)return false;// Then filter by search and category\nif(!(note!==null&&note!==void 0&&note.title))return false;const matchesSearch=note.title.toLowerCase().includes(searchTerm.toLowerCase())||note.content.toLowerCase().includes(searchTerm.toLowerCase());const matchesCategory=!selectedCategory||note.category===selectedCategory;return matchesSearch&&matchesCategory;}));const renderSortOptions=()=>{const options=[{value:'date-desc',label:'Newest First'},{value:'date-asc',label:'Oldest First'},{value:'title',label:'Title'},{value:'category',label:'Category'}];return options.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value));};const renderCategoryOptions=()=>{const categories=Array.from(new Set(notes.map(note=>note.category))).filter(category=>category);return[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"},\"all\"),...categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))];};// Add debug logging for filtered notes\nuseEffect(()=>{console.log('Current notes:',notes);console.log('Filtered notes:',filteredAndSortedNotes);},[notes,filteredAndSortedNotes]);useEffect(()=>{console.log('Notes state updated:',notes);},[notes]);// Add useEffect to monitor sharedNotes changes\nuseEffect(()=>{console.log('Shared notes updated:',sharedNotes);},[sharedNotes]);const handleLogout=()=>{// Clear UI state\nsetSelectedNote(undefined);setSearchTerm('');setSelectedCategory('');setSortBy('date-desc');// Don't clear notes here, they'll be reloaded on next login\nlogout();};const handleShare=noteId=>{setShareDialogNoteId(noteId);};const handleShareComplete=async()=>{await loadAllNotes();// Reload notes to update the UI\nsetShareDialogNoteId(null);};const loadPublicNotes=async()=>{try{console.log('Loading public notes...');const response=await api.getPublicNotes();console.log('Public notes received:',response);setPublicNotes(response);}catch(err){console.error('Failed to load public notes:',err);setError('Failed to load public notes');}};const loadSharedWithMeNotes=async()=>{try{console.log('Loading shared notes...');setIsLoading(true);const shared=await api.getSharedWithMeNotes();console.log('Shared notes received:',shared);if(Array.isArray(shared)){setSharedWithMeNotes(shared);}else{console.error('Received invalid shared notes data:',shared);setError('Invalid shared notes data received');}}catch(err){console.error('Failed to load shared notes:',err);setError(err instanceof Error?err.message:'Failed to load shared notes');}finally{setIsLoading(false);}};useEffect(()=>{if(user){console.log('Current view:',currentView);switch(currentView){case'my-notes':loadAllNotes();break;case'shared-notes':loadSharedWithMeNotes();break;case'public-notes':loadPublicNotes();break;}}},[currentView,user]);// Update setCurrentView to also update the URL\nconst handleViewChange=view=>{setCurrentView(view);switch(view){case'my-notes':navigate('/notes');break;case'shared-notes':navigate('/notes/shared');break;case'public-notes':navigate('/notes/public');break;}};// Add effect to sync URL with current view\nuseEffect(()=>{const path=location.pathname;if(path==='/notes/public'&&currentView!=='public-notes'){setCurrentView('public-notes');}else if(path==='/notes/shared'&&currentView!=='shared-notes'){setCurrentView('shared-notes');}else if(path==='/notes'&&currentView!=='my-notes'){setCurrentView('my-notes');}},[location.pathname]);if(!user){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Notepad+\"})}),/*#__PURE__*/_jsx(\"main\",{className:\"auth-container\",children:showRegister?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Register,{}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account?\",' ',/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowRegister(false),children:\"Login\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Login,{}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account?\",' ',/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowRegister(true),children:\"Register\"})]})]})})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Notepad+\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Welcome, \",(user===null||user===void 0?void 0:user.username)||(user===null||user===void 0?void 0:user.Username),\"!\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"logout-button\",onClick:handleLogout,children:\"Logout\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"App-layout\",children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"sidebar\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"create-note-button sidebar-create\",onClick:handleCreateNote,children:\"Create New Note\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"nav-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"nav-item \".concat(currentView==='my-notes'?'active':''),onClick:()=>handleViewChange('my-notes'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"nav-icon\",children:\"\\uD83D\\uDCC1\"}),\"My Notes\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"nav-item \".concat(currentView==='shared-notes'?'active':''),onClick:()=>handleViewChange('shared-notes'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"nav-icon\",children:\"\\uD83D\\uDD04\"}),\"Notes Shared With Me\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"nav-item \".concat(currentView==='public-notes'?'active':''),onClick:()=>handleViewChange('public-notes'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"nav-icon\",children:\"\\uD83C\\uDF10\"}),\"Public Notes\"]})]})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"main-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-filters\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search notes...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"search-input\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),className:\"category-filter\",children:renderCategoryOptions()}),/*#__PURE__*/_jsx(\"select\",{value:sortBy,onChange:e=>setSortBy(e.target.value),className:\"sort-select\",children:renderSortOptions()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"notes-container\",children:[currentView==='my-notes'&&/*#__PURE__*/_jsx(NoteList,{notes:filteredAndSortedNotes,selectedNote:selectedNote,onNoteSelect:handleNoteSelect,onDeleteNote:handleDeleteNote,onMakePublic:handleMakePublic,onShare:handleShare}),currentView==='shared-notes'&&/*#__PURE__*/_jsx(NoteList,{notes:sharedWithMeNotes,selectedNote:selectedNote,onNoteSelect:handleNoteSelect,onDeleteNote:handleDeleteNote,onMakePublic:handleMakePublic,onShare:handleShare,isLoading:isLoading,error:error}),currentView==='public-notes'&&/*#__PURE__*/_jsx(NoteList,{notes:publicNotes,selectedNote:selectedNote,onNoteSelect:handleNoteSelect,onDeleteNote:handleDeleteNote,onMakePublic:handleMakePublic,onShare:handleShare})]})]})]}),/*#__PURE__*/_jsx(Modal,{isOpen:isNoteModalOpen,onClose:handleCloseModal,title:isCreating?'Create New Note':'Edit Note',children:/*#__PURE__*/_jsx(NoteEditor,{note:selectedNote,onSave:async note=>{console.log('Save triggered from NoteEditor');await handleSaveNote(note);},onCancel:()=>{console.log('Cancel triggered from NoteEditor');handleCloseModal();}})}),shareDialogNoteId&&/*#__PURE__*/_jsx(ShareNoteDialog,{noteId:shareDialogNoteId,onClose:()=>setShareDialogNoteId(null),onShare:handleShareComplete})]});}function App(){return/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(AppContent,{})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","NoteList","NoteEditor","Login","Register","useAuth","api","ShareNoteDialog","Modal","Routes","Route","useNavigate","useLocation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AppContent","user","logout","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","shareDialogNoteId","setShareDialogNoteId","isCreating","setIsCreating","isNoteModalOpen","setIsNoteModalOpen","currentView","setCurrentView","publicNotes","setPublicNotes","sharedWithMeNotes","setSharedWithMeNotes","navigate","location","console","log","loadAllNotes","myNotesResponse","shared","Promise","all","getNotes","getSharedNotes","formattedMyNotes","map","note","_ref","_note$id","_ref2","_note$title","_ref3","_note$content","_ref4","_note$category","_ref5","_note$createdAt","_ref6","_note$updatedAt","_ref7","_note$userId","_ref8","_note$isPublic","_note$user","id","Id","title","Title","content","Content","category","Category","createdAt","Date","CreatedAt","updatedAt","UpdatedAt","userId","UserId","isPublic","IsPublic","User","Array","isArray","err","Error","message","handleDeleteNote","noteId","deleteNote","filter","handleCreateNote","handleCloseModal","handleNoteSelect","handleSaveNote","noteData","updateNote","createNote","handleMakePublic","makeNotePublic","apiNote","then","find","n","_ref9","_apiNote$id","_ref10","_apiNote$title","_ref11","_apiNote$content","_ref12","_apiNote$category","_ref13","_apiNote$createdAt","_ref14","_apiNote$updatedAt","_ref15","_apiNote$userId","_ref16","_apiNote$isPublic","_apiNote$user","updatedNote","sortNotes","notesToSort","sort","a","b","getTime","localeCompare","filteredAndSortedNotes","_ref17","_user$id","noteUserId","matchesSearch","toLowerCase","includes","matchesCategory","renderSortOptions","options","value","label","option","children","renderCategoryOptions","categories","from","Set","handleLogout","handleShare","handleShareComplete","loadPublicNotes","response","getPublicNotes","loadSharedWithMeNotes","getSharedWithMeNotes","handleViewChange","view","path","pathname","className","onClick","username","Username","concat","type","placeholder","onChange","e","target","onNoteSelect","onDeleteNote","onMakePublic","onShare","isOpen","onClose","onSave","onCancel","App","element"],"sources":["D:/_master/v5/notepad-plus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note, NoteApiResponse } from './types/Note';\r\nimport { api } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\nimport Modal from './components/Modal';\r\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title' | 'category';\r\ntype ViewType = 'my-notes' | 'shared-notes' | 'public-notes';\r\n\r\nfunction AppContent() {\r\n    const { user, logout } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [shareDialogNoteId, setShareDialogNoteId] = useState<number | null>(null);\r\n    const [isCreating, setIsCreating] = useState(false);\r\n    const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\r\n    const [currentView, setCurrentView] = useState<ViewType>('my-notes');\r\n    const [publicNotes, setPublicNotes] = useState<Note[]>([]);\r\n    const [sharedWithMeNotes, setSharedWithMeNotes] = useState<Note[]>([]);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            \r\n            console.log('Loading notes for user:', user);\r\n            \r\n            const [myNotesResponse, shared] = await Promise.all([\r\n                api.getNotes(),\r\n                api.getSharedNotes()\r\n            ]) as [NoteApiResponse[], Note[]];\r\n            \r\n            console.log('API Response - myNotes:', myNotesResponse);\r\n            console.log('API Response - shared:', shared);\r\n            \r\n            // Convert API response to Note format\r\n            const formattedMyNotes: Note[] = myNotesResponse.map(note => ({\r\n                id: note.id ?? note.Id ?? 0,\r\n                title: note.title ?? note.Title ?? '',\r\n                content: note.content ?? note.Content ?? '',\r\n                category: note.category ?? note.Category ?? '',\r\n                createdAt: new Date(note.createdAt ?? note.CreatedAt ?? ''),\r\n                updatedAt: new Date(note.updatedAt ?? note.UpdatedAt ?? ''),\r\n                userId: note.userId ?? note.UserId ?? 0,\r\n                isPublic: note.isPublic ?? note.IsPublic ?? false,\r\n                user: note.user ?? note.User\r\n            }));\r\n\r\n            console.log('Setting notes state with:', formattedMyNotes);\r\n            setNotes(formattedMyNotes);\r\n            setSharedNotes(Array.isArray(shared) ? shared : []);\r\n\r\n        } catch (err) {\r\n            console.error('Error loading notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCreateNote = () => {\r\n        setSelectedNote(undefined);\r\n        setIsCreating(true);\r\n        setIsNoteModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        console.log('Modal close triggered');\r\n        setIsNoteModalOpen(false);\r\n        setIsCreating(false);\r\n        setSelectedNote(undefined);\r\n    };\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        console.log('Note selected:', note);\r\n        setSelectedNote(note);\r\n        setIsNoteModalOpen(true);\r\n        console.log('Modal opened');\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            console.log('Saving note:', noteData);\r\n            if (noteData.id) {\r\n                // Updating existing note\r\n                await api.updateNote(noteData.id, noteData);\r\n            } else {\r\n                // Creating new note\r\n                await api.createNote(noteData);\r\n            }\r\n            await loadAllNotes();\r\n            setSelectedNote(undefined);\r\n            setIsCreating(false);\r\n            console.log('Note saved successfully');\r\n            setIsNoteModalOpen(false);\r\n        } catch (err) {\r\n            console.error('Failed to save note:', err);\r\n            setError('Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.makeNotePublic(noteId);\r\n            \r\n            // Reload both regular and shared notes\r\n            await loadAllNotes();\r\n            \r\n            // Update the selected note if it was made public\r\n            if (selectedNote?.id === noteId) {\r\n                const apiNote = await api.getNotes().then(notes => \r\n                    notes.find(n => n.id === noteId || n.Id === noteId)\r\n                );\r\n\r\n                if (apiNote) {\r\n                    // Convert API response to Note format\r\n                    const updatedNote: Note = {\r\n                        id: apiNote.id ?? apiNote.Id ?? 0,\r\n                        title: apiNote.title ?? apiNote.Title ?? '',\r\n                        content: apiNote.content ?? apiNote.Content ?? '',\r\n                        category: apiNote.category ?? apiNote.Category ?? '',\r\n                        createdAt: new Date(apiNote.createdAt ?? apiNote.CreatedAt ?? ''),\r\n                        updatedAt: new Date(apiNote.updatedAt ?? apiNote.UpdatedAt ?? ''),\r\n                        userId: apiNote.userId ?? apiNote.UserId ?? 0,\r\n                        isPublic: apiNote.isPublic ?? apiNote.IsPublic ?? false,\r\n                        user: apiNote.user ?? apiNote.User\r\n                    };\r\n                    setSelectedNote(updatedNote);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to make note public');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notesToSort: Note[]): Note[] => {\r\n        return [...notesToSort].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    return a.category.localeCompare(b.category);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filteredAndSortedNotes = sortNotes(\r\n        notes.filter(note => {\r\n            // First filter by user\r\n            if (!user) return false;\r\n            const userId = user.id ?? user.Id ?? 0;\r\n            const noteUserId = note.userId;\r\n            if (userId !== noteUserId) return false;\r\n            \r\n            // Then filter by search and category\r\n            if (!note?.title) return false;\r\n            \r\n            const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                                note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n            const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n            return matchesSearch && matchesCategory;\r\n        })\r\n    );\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredAndSortedNotes);\r\n    }, [notes, filteredAndSortedNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    // Add useEffect to monitor sharedNotes changes\r\n    useEffect(() => {\r\n        console.log('Shared notes updated:', sharedNotes);\r\n    }, [sharedNotes]);\r\n\r\n    const handleLogout = () => {\r\n        // Clear UI state\r\n        setSelectedNote(undefined);\r\n        setSearchTerm('');\r\n        setSelectedCategory('');\r\n        setSortBy('date-desc');\r\n        // Don't clear notes here, they'll be reloaded on next login\r\n        logout();\r\n    };\r\n\r\n    const handleShare = (noteId: number) => {\r\n        setShareDialogNoteId(noteId);\r\n    };\r\n\r\n    const handleShareComplete = async () => {\r\n        await loadAllNotes(); // Reload notes to update the UI\r\n        setShareDialogNoteId(null);\r\n    };\r\n\r\n    const loadPublicNotes = async () => {\r\n        try {\r\n            console.log('Loading public notes...');\r\n            const response = await api.getPublicNotes();\r\n            console.log('Public notes received:', response);\r\n            setPublicNotes(response);\r\n        } catch (err) {\r\n            console.error('Failed to load public notes:', err);\r\n            setError('Failed to load public notes');\r\n        }\r\n    };\r\n\r\n    const loadSharedWithMeNotes = async () => {\r\n        try {\r\n            console.log('Loading shared notes...');\r\n            setIsLoading(true);\r\n            const shared = await api.getSharedWithMeNotes();\r\n            console.log('Shared notes received:', shared);\r\n            if (Array.isArray(shared)) {\r\n                setSharedWithMeNotes(shared);\r\n            } else {\r\n                console.error('Received invalid shared notes data:', shared);\r\n                setError('Invalid shared notes data received');\r\n            }\r\n        } catch (err) {\r\n            console.error('Failed to load shared notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load shared notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('Current view:', currentView);\r\n            switch (currentView) {\r\n                case 'my-notes':\r\n                    loadAllNotes();\r\n                    break;\r\n                case 'shared-notes':\r\n                    loadSharedWithMeNotes();\r\n                    break;\r\n                case 'public-notes':\r\n                    loadPublicNotes();\r\n                    break;\r\n            }\r\n        }\r\n    }, [currentView, user]);\r\n\r\n    // Update setCurrentView to also update the URL\r\n    const handleViewChange = (view: ViewType) => {\r\n        setCurrentView(view);\r\n        switch (view) {\r\n            case 'my-notes':\r\n                navigate('/notes');\r\n                break;\r\n            case 'shared-notes':\r\n                navigate('/notes/shared');\r\n                break;\r\n            case 'public-notes':\r\n                navigate('/notes/public');\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Add effect to sync URL with current view\r\n    useEffect(() => {\r\n        const path = location.pathname;\r\n        if (path === '/notes/public' && currentView !== 'public-notes') {\r\n            setCurrentView('public-notes');\r\n        } else if (path === '/notes/shared' && currentView !== 'shared-notes') {\r\n            setCurrentView('shared-notes');\r\n        } else if (path === '/notes' && currentView !== 'my-notes') {\r\n            setCurrentView('my-notes');\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    if (!user) {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1>Notepad+</h1>\r\n                </header>\r\n                <main className=\"auth-container\">\r\n                    {showRegister ? (\r\n                        <>\r\n                            <Register />\r\n                            <p>\r\n                                Already have an account?{' '}\r\n                                <button onClick={() => setShowRegister(false)}>\r\n                                    Login\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Login />\r\n                            <p>\r\n                                Don't have an account?{' '}\r\n                                <button onClick={() => setShowRegister(true)}>\r\n                                    Register\r\n                                </button>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Notepad+</h1>\r\n                <div className=\"user-info\">\r\n                    <span>Welcome, {user?.username || user?.Username}!</span>\r\n                    <button className=\"logout-button\" onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"App-layout\">\r\n                <nav className=\"sidebar\">\r\n                    <button \r\n                        className=\"create-note-button sidebar-create\"\r\n                        onClick={handleCreateNote}\r\n                    >\r\n                        Create New Note\r\n                    </button>\r\n                    <div className=\"nav-section\">\r\n                        <div \r\n                            className={`nav-item ${currentView === 'my-notes' ? 'active' : ''}`}\r\n                            onClick={() => handleViewChange('my-notes')}\r\n                        >\r\n                            <span className=\"nav-icon\">📁</span>\r\n                            My Notes\r\n                        </div>\r\n                        <div \r\n                            className={`nav-item ${currentView === 'shared-notes' ? 'active' : ''}`}\r\n                            onClick={() => handleViewChange('shared-notes')}\r\n                        >\r\n                            <span className=\"nav-icon\">🔄</span>\r\n                            Notes Shared With Me\r\n                        </div>\r\n                        <div \r\n                            className={`nav-item ${currentView === 'public-notes' ? 'active' : ''}`}\r\n                            onClick={() => handleViewChange('public-notes')}\r\n                        >\r\n                            <span className=\"nav-icon\">🌐</span>\r\n                            Public Notes\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n\r\n                <main className=\"main-content\">\r\n                    <div className=\"search-filters\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search notes...\"\r\n                            value={searchTerm}\r\n                            onChange={(e) => setSearchTerm(e.target.value)}\r\n                            className=\"search-input\"\r\n                        />\r\n                        <select\r\n                            value={selectedCategory}\r\n                            onChange={(e) => setSelectedCategory(e.target.value)}\r\n                            className=\"category-filter\"\r\n                        >\r\n                            {renderCategoryOptions()}\r\n                        </select>\r\n                        <select\r\n                            value={sortBy}\r\n                            onChange={(e) => setSortBy(e.target.value as SortOption)}\r\n                            className=\"sort-select\"\r\n                        >\r\n                            {renderSortOptions()}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"notes-container\">\r\n                        {currentView === 'my-notes' && (\r\n                            <NoteList \r\n                                notes={filteredAndSortedNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={handleNoteSelect}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                            />\r\n                        )}\r\n                        {currentView === 'shared-notes' && (\r\n                            <NoteList \r\n                                notes={sharedWithMeNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={handleNoteSelect}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                                isLoading={isLoading}\r\n                                error={error}\r\n                            />\r\n                        )}\r\n                        {currentView === 'public-notes' && (\r\n                            <NoteList \r\n                                notes={publicNotes}\r\n                                selectedNote={selectedNote}\r\n                                onNoteSelect={handleNoteSelect}\r\n                                onDeleteNote={handleDeleteNote}\r\n                                onMakePublic={handleMakePublic}\r\n                                onShare={handleShare}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </main>\r\n            </div>\r\n\r\n            <Modal \r\n                isOpen={isNoteModalOpen}\r\n                onClose={handleCloseModal}\r\n                title={isCreating ? 'Create New Note' : 'Edit Note'}\r\n            >\r\n                <NoteEditor \r\n                    note={selectedNote}\r\n                    onSave={async (note) => {\r\n                        console.log('Save triggered from NoteEditor');\r\n                        await handleSaveNote(note);\r\n                    }}\r\n                    onCancel={() => {\r\n                        console.log('Cancel triggered from NoteEditor');\r\n                        handleCloseModal();\r\n                    }}\r\n                />\r\n            </Modal>\r\n\r\n            {shareDialogNoteId && (\r\n                <ShareNoteDialog\r\n                    noteId={shareDialogNoteId}\r\n                    onClose={() => setShareDialogNoteId(null)}\r\n                    onShare={handleShareComplete}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/*\" element={<AppContent />} />\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}