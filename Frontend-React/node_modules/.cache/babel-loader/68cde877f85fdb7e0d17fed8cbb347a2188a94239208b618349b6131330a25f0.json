{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Adăugăm useEffect\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteEditor from './components/NoteEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState(() => {\n    // Încărcăm notițele din localStorage la inițializare\n    const savedNotes = localStorage.getItem('notes');\n    return savedNotes ? JSON.parse(savedNotes) : [];\n  });\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  // Salvăm notițele în localStorage de fiecare dată când se modifică\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n  const handleSaveNote = noteData => {\n    if (selectedNote) {\n      // Actualizare notă existentă\n      const updatedNotes = notes.map(note => note.id === selectedNote.id ? {\n        ...note,\n        ...noteData,\n        updatedAt: new Date()\n      } : note);\n      setNotes(updatedNotes);\n    } else {\n      // Creare notă nouă\n      const newNote = {\n        id: Date.now(),\n        title: noteData.title || '',\n        content: noteData.content || '',\n        category: noteData.category || '',\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n      setNotes([...notes, newNote]);\n    }\n    setSelectedNote(undefined);\n  };\n  const handleDeleteNote = noteId => {\n    setNotes(notes.filter(note => note.id !== noteId));\n    if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n      setSelectedNote(undefined);\n    }\n  };\n\n  // Filtrarea notițelor în funcție de căutare și categorie\n  const filteredNotes = notes.filter(note => {\n    const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !selectedCategory || note.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  // Obținem lista unică de categorii\n  const categories = Array.from(new Set(notes.map(note => note.category)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notepad+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Caut\\u0103 noti\\u021Be...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"category-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Toate categoriile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(NoteList, {\n        notes: filteredNotes,\n        onNoteSelect: setSelectedNote,\n        onDeleteNote: handleDeleteNote,\n        selectedNote: selectedNote // Adăugăm această proprietate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NoteEditor, {\n        note: selectedNote,\n        onSave: handleSaveNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"G9zi+xA0mkkqWhIuuwElNeovxws=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NoteList","NoteEditor","jsxDEV","_jsxDEV","App","_s","notes","setNotes","savedNotes","localStorage","getItem","JSON","parse","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","setItem","stringify","handleSaveNote","noteData","updatedNotes","map","note","id","updatedAt","Date","newNote","now","title","content","category","createdAt","handleDeleteNote","noteId","filter","filteredNotes","matchesSearch","toLowerCase","includes","matchesCategory","categories","Array","from","Set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onNoteSelect","onDeleteNote","onSave","_c","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';  // Adăugăm useEffect\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport { Note } from './types/Note';\r\n\r\nfunction App() {\r\n    const [notes, setNotes] = useState<Note[]>(() => {\r\n        // Încărcăm notițele din localStorage la inițializare\r\n        const savedNotes = localStorage.getItem('notes');\r\n        return savedNotes ? JSON.parse(savedNotes) : [];\r\n    });\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n\r\n    // Salvăm notițele în localStorage de fiecare dată când se modifică\r\n    useEffect(() => {\r\n        localStorage.setItem('notes', JSON.stringify(notes));\r\n    }, [notes]);\r\n\r\n    const handleSaveNote = (noteData: Partial<Note>) => {\r\n        if (selectedNote) {\r\n            // Actualizare notă existentă\r\n            const updatedNotes = notes.map(note =>\r\n                note.id === selectedNote.id\r\n                    ? { ...note, ...noteData, updatedAt: new Date() }\r\n                    : note\r\n            );\r\n            setNotes(updatedNotes);\r\n        } else {\r\n            // Creare notă nouă\r\n            const newNote: Note = {\r\n                id: Date.now(),\r\n                title: noteData.title || '',\r\n                content: noteData.content || '',\r\n                category: noteData.category || '',\r\n                createdAt: new Date(),\r\n                updatedAt: new Date(),\r\n            };\r\n            setNotes([...notes, newNote]);\r\n        }\r\n        setSelectedNote(undefined);\r\n    };\r\n\r\n    const handleDeleteNote = (noteId: number) => {\r\n        setNotes(notes.filter(note => note.id !== noteId));\r\n        if (selectedNote?.id === noteId) {\r\n            setSelectedNote(undefined);\r\n        }\r\n    };\r\n\r\n    // Filtrarea notițelor în funcție de căutare și categorie\r\n    const filteredNotes = notes.filter(note => {\r\n        const matchesSearch = note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                            note.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n        const matchesCategory = !selectedCategory || note.category === selectedCategory;\r\n        return matchesSearch && matchesCategory;\r\n    });\r\n\r\n    // Obținem lista unică de categorii\r\n    const categories = Array.from(new Set(notes.map(note => note.category)));\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Notepad+</h1>\r\n            </header>\r\n            <div className=\"search-filters\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Caută notițe...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-input\"\r\n                />\r\n                <select\r\n                    value={selectedCategory}\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                    className=\"category-filter\"\r\n                >\r\n                    <option value=\"\">Toate categoriile</option>\r\n                    {categories.map(category => (\r\n                        <option key={category} value={category}>\r\n                            {category}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <main className=\"App-main\">\r\n            <NoteList \r\n    notes={filteredNotes} \r\n    onNoteSelect={setSelectedNote}\r\n    onDeleteNote={handleDeleteNote}\r\n    selectedNote={selectedNote}  // Adăugăm această proprietate\r\n/>\r\n                <NoteEditor \r\n                    note={selectedNote}\r\n                    onSave={handleSaveNote}\r\n                />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}