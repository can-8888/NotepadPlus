{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\notepad-plus\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [user, setUser] = useState(() => {\n    try {\n      const storedUser = localStorage.getItem('user');\n      const storedToken = localStorage.getItem('token');\n      if (!storedUser || !storedToken) {\n        return null;\n      }\n      return JSON.parse(storedUser);\n    } catch {\n      return null;\n    }\n  });\n  useEffect(() => {\n    setIsInitialized(true);\n  }, []);\n  if (!isInitialized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  const [token, setToken] = useState(() => {\n    try {\n      const storedToken = localStorage.getItem('token');\n      console.log('Stored token:', storedToken ? '[PRESENT]' : '[NONE]'); // Debug log\n      return storedToken;\n    } catch (error) {\n      console.error('Error retrieving token:', error);\n      return null;\n    }\n  });\n  useEffect(() => {\n    // Set up axios interceptor with current token\n    const interceptor = axios.interceptors.request.use(config => {\n      if (token && config.headers) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [token]);\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [user]);\n  const login = async (username, password) => {\n    try {\n      const response = await api.login({\n        username,\n        password\n      });\n      console.log('Login response:', response); // Debug log\n\n      if (!response.user || !response.token) {\n        throw new Error('Invalid login response format');\n      }\n      setUser(response.user);\n      setToken(response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      localStorage.setItem('token', response.token);\n    } catch (error) {\n      console.error('Login failed:', error);\n      // Clean up any partial data\n      setUser(null);\n      setToken(null);\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      throw error;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const userData = await api.register({\n        username,\n        email,\n        password\n      });\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"ox7gLB2Zygsj+dTP7JmOuB3eVLw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isInitialized","setIsInitialized","user","setUser","storedUser","localStorage","getItem","storedToken","JSON","parse","fileName","_jsxFileName","lineNumber","columnNumber","token","setToken","console","log","error","interceptor","interceptors","request","use","config","headers","Promise","reject","eject","setItem","stringify","removeItem","login","username","password","response","Error","register","email","userData","logout","Provider","value","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["D:/_master/v5/notepad-plus/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User } from '../types/Note';\r\nimport { api } from '../services/api';\r\nimport axios from 'axios';\r\n\r\ninterface AuthContextType {\r\n    user: User | null;\r\n    token: string | null;\r\n    login: (username: string, password: string) => Promise<void>;\r\n    logout: () => void;\r\n    register: (username: string, email: string, password: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [isInitialized, setIsInitialized] = useState(false);\r\n    const [user, setUser] = useState<User | null>(() => {\r\n        try {\r\n            const storedUser = localStorage.getItem('user');\r\n            const storedToken = localStorage.getItem('token');\r\n            \r\n            if (!storedUser || !storedToken) {\r\n                return null;\r\n            }\r\n            \r\n            return JSON.parse(storedUser);\r\n        } catch {\r\n            return null;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setIsInitialized(true);\r\n    }, []);\r\n\r\n    if (!isInitialized) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const [token, setToken] = useState<string | null>(() => {\r\n        try {\r\n            const storedToken = localStorage.getItem('token');\r\n            console.log('Stored token:', storedToken ? '[PRESENT]' : '[NONE]'); // Debug log\r\n            return storedToken;\r\n        } catch (error) {\r\n            console.error('Error retrieving token:', error);\r\n            return null;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Set up axios interceptor with current token\r\n        const interceptor = axios.interceptors.request.use(\r\n            (config) => {\r\n                if (token && config.headers) {\r\n                    config.headers['Authorization'] = `Bearer ${token}`;\r\n                }\r\n                return config;\r\n            },\r\n            (error) => {\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            axios.interceptors.request.eject(interceptor);\r\n        };\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n        } else {\r\n            localStorage.removeItem('user');\r\n        }\r\n    }, [user]);\r\n\r\n    const login = async (username: string, password: string) => {\r\n        try {\r\n            const response = await api.login({ username, password });\r\n            console.log('Login response:', response); // Debug log\r\n            \r\n            if (!response.user || !response.token) {\r\n                throw new Error('Invalid login response format');\r\n            }\r\n            \r\n            setUser(response.user);\r\n            setToken(response.token);\r\n            localStorage.setItem('user', JSON.stringify(response.user));\r\n            localStorage.setItem('token', response.token);\r\n        } catch (error) {\r\n            console.error('Login failed:', error);\r\n            // Clean up any partial data\r\n            setUser(null);\r\n            setToken(null);\r\n            localStorage.removeItem('user');\r\n            localStorage.removeItem('token');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (username: string, email: string, password: string) => {\r\n        try {\r\n            const userData = await api.register({ username, email, password });\r\n            setUser(userData);\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n        } catch (error) {\r\n            console.error('Registration failed:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        setToken(null);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, login, logout, register }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}