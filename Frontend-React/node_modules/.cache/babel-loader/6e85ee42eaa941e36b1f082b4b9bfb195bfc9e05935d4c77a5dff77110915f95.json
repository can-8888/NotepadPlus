{"ast":null,"code":"var _jsxFileName = \"D:\\\\_master\\\\v5\\\\NotepadPlus\\\\Frontend-React\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport { useAuth } from './contexts/AuthContext';\nimport { api } from './services/api';\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport NotesPage from './pages/NotesPage';\nimport Sidebar from './components/Sidebar';\nimport DrivePage from './pages/DrivePage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport NotificationBell from './components/NotificationBell';\nimport { signalRService } from './services/signalRService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Add this near the top of the file with other components\nconst AuthRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const location = useLocation();\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/notes\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n// Add this new Layout component\n_s(AuthRoute, \"cTflZxqU4RCGHztF80S0D55o9CQ=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = AuthRoute;\nconst Layout = ({\n  children\n}) => {\n  _s2();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notepad+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(NotificationBell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"welcome-text\",\n            children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout-button\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-layout\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s2(Layout, \"owExUWFylk0vVlQUKU4QcBpCg7Y=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c2 = Layout;\nfunction App() {\n  _s3();\n  const {\n    user,\n    isInitialized\n  } = useAuth();\n  const [showRegister, setShowRegister] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [sharedNotes, setSharedNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sortBy, setSortBy] = useState('date-desc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [shareDialogNoteId, setShareDialogNoteId] = useState(null);\n  const [currentView, setCurrentView] = useState('my-notes');\n  const [publicNotes, setPublicNotes] = useState([]);\n  const [sharedWithMeNotes, setSharedWithMeNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (user) {\n      console.log('User logged in, loading notes...'); // Debug log\n      loadAllNotes();\n    }\n  }, [user]); // Only depend on user\n\n  const loadAllNotes = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const notesData = await api.getNotes();\n      setNotes(notesData || []);\n    } catch (err) {\n      var _err$response;\n      // Type as any for now\n      if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        // Handle unauthorized error\n        navigate('/login');\n      } else {\n        setError(err instanceof Error ? err.message : 'Failed to load notes');\n        console.error('Error loading notes:', err);\n      }\n      setNotes([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteNote = async noteId => {\n    try {\n      setError(null);\n      await api.deleteNote(noteId);\n      setNotes(notes.filter(note => note.id !== noteId));\n      if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n        setSelectedNote(undefined);\n      }\n    } catch (err) {\n      setError('Failed to delete note');\n      console.error(err);\n    }\n  };\n  const handleCloseModal = () => {\n    console.log('Modal close triggered');\n    setSelectedNote(undefined);\n  };\n  const handleNoteSelect = note => {\n    console.log('Note selected:', note);\n    setSelectedNote(note);\n    console.log('Modal opened');\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      console.log('Saving note:', noteData);\n      if (noteData.id) {\n        // Updating existing note\n        await api.updateNote(noteData.id, noteData);\n      } else {\n        // Creating new note\n        await api.createNote(noteData);\n      }\n      await loadAllNotes();\n      setSelectedNote(undefined);\n      console.log('Note saved successfully');\n    } catch (err) {\n      console.error('Failed to save note:', err);\n      setError('Failed to save note');\n    }\n  };\n  const handleMakePublic = async noteId => {\n    try {\n      console.log('handleMakePublic called with noteId:', noteId);\n      if (!noteId) {\n        console.error('Invalid note ID:', noteId);\n        return;\n      }\n      const updatedNote = await api.makeNotePublic(noteId);\n      console.log('Note successfully made public:', updatedNote);\n\n      // Update both notes lists\n      setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n      setPublicNotes(prevPublicNotes => [...prevPublicNotes, updatedNote]);\n\n      // Show success message\n      setMessage({\n        type: 'success',\n        text: 'Note is now public'\n      });\n\n      // Refresh lists\n      await loadAllNotes();\n      await loadPublicNotes();\n    } catch (error) {\n      console.error('Error making note public:', error);\n      setError(error instanceof Error ? error.message : 'Failed to make note public');\n    }\n  };\n  const sortNotes = notes => {\n    return [...notes].sort((a, b) => {\n      switch (sortBy) {\n        case 'date-desc':\n          return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n        case 'date-asc':\n          return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          // Handle undefined categories\n          const categoryA = a.category || '';\n          const categoryB = b.category || '';\n          return categoryA.localeCompare(categoryB);\n        default:\n          return 0;\n      }\n    });\n  };\n  const filterNotes = useCallback(notesToFilter => {\n    if (!notesToFilter) return [];\n    let filtered = [...notesToFilter];\n\n    // Apply search filter\n    if (searchTerm) {\n      filtered = filtered.filter(note => note.title.toLowerCase().includes(searchTerm.toLowerCase()) || note.content.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // Apply category filter\n    if (selectedCategory) {\n      filtered = filtered.filter(note => note.category === selectedCategory);\n    }\n\n    // Apply sorting\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'date-asc':\n          return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n        case 'date-desc':\n          return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n        case 'title-asc':\n          return a.title.localeCompare(b.title);\n        case 'title-desc':\n          return b.title.localeCompare(a.title);\n        case 'title':\n          return a.title.localeCompare(b.title);\n        case 'category':\n          return (a.category || '').localeCompare(b.category || '');\n        default:\n          return 0;\n      }\n    });\n    return filtered;\n  }, [searchTerm, selectedCategory, sortBy]);\n  const filteredNotes = filterNotes(notes);\n  const renderSortOptions = () => {\n    const options = [{\n      value: 'date-desc',\n      label: 'Newest First'\n    }, {\n      value: 'date-asc',\n      label: 'Oldest First'\n    }, {\n      value: 'title',\n      label: 'Title'\n    }, {\n      value: 'category',\n      label: 'Category'\n    }];\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this));\n  };\n  const renderCategoryOptions = () => {\n    const categories = Array.from(new Set(notes.map(note => note.category))).filter(category => category);\n    return [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All Categories\"\n    }, \"all\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), ...categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }, this))];\n  };\n\n  // Add debug logging for filtered notes\n  useEffect(() => {\n    console.log('Current notes:', notes);\n    console.log('Filtered notes:', filteredNotes);\n  }, [notes, filteredNotes]);\n  useEffect(() => {\n    console.log('Notes state updated:', notes);\n  }, [notes]);\n\n  // Add useEffect to monitor sharedNotes changes\n  useEffect(() => {\n    console.log('Shared notes updated:', sharedNotes);\n  }, [sharedNotes]);\n  const handleShare = noteId => {\n    setShareDialogNoteId(noteId);\n  };\n  const handleShareComplete = async () => {\n    await loadAllNotes(); // Reload notes to update the UI\n    setShareDialogNoteId(null);\n  };\n  const loadPublicNotes = async () => {\n    try {\n      console.log('Loading public notes...');\n      const publicNotes = await api.getPublicNotes();\n      console.log('Public notes received:', publicNotes);\n      setPublicNotes(publicNotes);\n    } catch (err) {\n      console.error('Error loading public notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load public notes');\n    }\n  };\n  const loadSharedNotes = async () => {\n    try {\n      console.log('Loading shared notes...');\n      setIsLoading(true);\n      const shared = await api.getSharedNotes();\n      console.log('Shared notes received:', shared);\n      if (Array.isArray(shared)) {\n        setSharedWithMeNotes(shared);\n      }\n    } catch (err) {\n      console.error('Error loading shared notes:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load shared notes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      console.log('Current view:', currentView);\n      switch (currentView) {\n        case 'my-notes':\n          loadAllNotes();\n          break;\n        case 'shared-notes':\n          loadSharedNotes();\n          break;\n        case 'public-notes':\n          loadPublicNotes();\n          break;\n      }\n    }\n  }, [currentView, user]);\n\n  // Update setCurrentView to also update the URL\n  const handleViewChange = view => {\n    setCurrentView(view);\n    switch (view) {\n      case 'my-notes':\n        navigate('/notes');\n        break;\n      case 'shared-notes':\n        navigate('/shared-notes');\n        break;\n      case 'public-notes':\n        navigate('/public-notes');\n        break;\n    }\n  };\n\n  // Add effect to sync URL with current view\n  useEffect(() => {\n    const path = location.pathname;\n    if (path === '/public-notes' && currentView !== 'public-notes') {\n      setCurrentView('public-notes');\n    } else if (path === '/shared-notes' && currentView !== 'shared-notes') {\n      setCurrentView('shared-notes');\n    } else if (path === '/notes' && currentView !== 'my-notes') {\n      setCurrentView('my-notes');\n    }\n  }, [location.pathname]);\n  const handleShareNote = async (noteId, collaboratorId) => {\n    try {\n      const updatedNote = await api.shareNote(noteId, collaboratorId);\n\n      // Update the notes list with the updated note\n      setNotes(notes.map(note => note.id === noteId ? updatedNote : note));\n\n      // Show success message\n      setMessage({\n        type: 'success',\n        text: 'Note shared successfully'\n      });\n    } catch (error) {\n      console.error('Error sharing note:', error);\n      setMessage({\n        type: 'error',\n        text: error instanceof Error ? error.message : 'Failed to share note'\n      });\n    }\n  };\n  useEffect(() => {\n    let mounted = true;\n    const initializeSignalR = async () => {\n      if (user) {\n        // Only connect if user is logged in\n        await signalRService.startConnection();\n      }\n    };\n    initializeSignalR();\n    return () => {\n      mounted = false;\n      signalRService.stopConnection();\n    };\n  }, [user]); // Add user as dependency to reconnect when user changes\n\n  // Show loading state while auth is initializing\n  if (!isInitialized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If not authenticated, only render auth routes\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Rest of your render logic for authenticated users\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/notes\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notes\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(NotesPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notes/new\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(NotesPage, {\n            isCreating: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notes/shared\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(NotesPage, {\n            type: \"shared\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notes/public\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(NotesPage, {\n            type: \"public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/drive\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(DrivePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/drive/:folderName\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(DrivePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 9\n  }, this);\n}\n_s3(App, \"ODk2tzohv0MXBacdAyOTqI15tsM=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AuthRoute\");\n$RefreshReg$(_c2, \"Layout\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","api","Routes","Route","Navigate","useNavigate","useLocation","NotesPage","Sidebar","DrivePage","LoginPage","RegisterPage","NotificationBell","signalRService","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthRoute","children","_s","user","location","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","Layout","_s2","logout","navigate","handleLogout","className","username","onClick","_c2","App","_s3","isInitialized","showRegister","setShowRegister","notes","setNotes","sharedNotes","setSharedNotes","selectedNote","setSelectedNote","undefined","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","isLoading","setIsLoading","error","setError","shareDialogNoteId","setShareDialogNoteId","currentView","setCurrentView","publicNotes","setPublicNotes","sharedWithMeNotes","setSharedWithMeNotes","message","setMessage","console","log","loadAllNotes","notesData","getNotes","err","_err$response","response","status","Error","handleDeleteNote","noteId","deleteNote","filter","note","id","handleCloseModal","handleNoteSelect","handleSaveNote","noteData","updateNote","createNote","handleMakePublic","updatedNote","makeNotePublic","prevNotes","prevPublicNotes","type","text","loadPublicNotes","sortNotes","sort","a","b","Date","createdAt","getTime","title","localeCompare","categoryA","category","categoryB","filterNotes","notesToFilter","filtered","toLowerCase","includes","content","filteredNotes","renderSortOptions","options","value","label","map","option","renderCategoryOptions","categories","Array","Set","handleShare","handleShareComplete","getPublicNotes","loadSharedNotes","shared","getSharedNotes","isArray","handleViewChange","view","path","pathname","handleShareNote","collaboratorId","shareNote","mounted","initializeSignalR","startConnection","stopConnection","element","isCreating","_c3","$RefreshReg$"],"sources":["D:/_master/v5/NotepadPlus/Frontend-React/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport NoteEditor from './components/NoteEditor';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport { Note, NoteApiResponse, NoteStatus } from './types/Note';\r\nimport { api, getCurrentUser } from './services/api';\r\nimport { ShareNoteDialog } from './components/ShareNoteDialog';\r\nimport Modal from './components/Modal';\r\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom';\r\nimport NotesPage from './pages/NotesPage';\r\nimport Sidebar from './components/Sidebar';\r\nimport DrivePage from './pages/DrivePage';\r\nimport axios from 'axios';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport NotificationBell from './components/NotificationBell';\r\nimport { signalRService } from './services/signalRService';\r\n\r\ntype SortOption = 'date-desc' | 'date-asc' | 'title-asc' | 'title-desc' | 'title' | 'category';\r\ntype ViewType = 'my-notes' | 'shared-notes' | 'public-notes';\r\n\r\n// Add this near the top of the file with other components\r\nconst AuthRoute = ({ children }: { children: React.ReactNode }) => {\r\n    const { user } = useAuth();\r\n    const location = useLocation();\r\n\r\n    if (user) {\r\n        return <Navigate to=\"/notes\" state={{ from: location }} replace />;\r\n    }\r\n\r\n    return <>{children}</>;\r\n};\r\n\r\n// Add this new Layout component\r\nconst Layout = ({ children }: { children: React.ReactNode }) => {\r\n    const { user, logout } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        navigate('/login');\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <header className=\"app-header\">\r\n                <h1>Notepad+</h1>\r\n                <div className=\"header-right\">\r\n                    <NotificationBell />\r\n                    <div className=\"user-info\">\r\n                        <span className=\"welcome-text\">Welcome, {user?.username}!</span>\r\n                        <button className=\"logout-button\" onClick={handleLogout}>\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <div className=\"app-layout\">\r\n                <Sidebar />\r\n                <main className=\"main-content\">\r\n                    {children}\r\n                </main>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction App() {\r\n    const { user, isInitialized } = useAuth();\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [sharedNotes, setSharedNotes] = useState<Note[]>([]);\r\n    const [selectedNote, setSelectedNote] = useState<Note | undefined>(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n    const [sortBy, setSortBy] = useState<SortOption>('date-desc');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [shareDialogNoteId, setShareDialogNoteId] = useState<number | null>(null);\r\n    const [currentView, setCurrentView] = useState<ViewType>('my-notes');\r\n    const [publicNotes, setPublicNotes] = useState<Note[]>([]);\r\n    const [sharedWithMeNotes, setSharedWithMeNotes] = useState<Note[]>([]);\r\n    const [message, setMessage] = useState<{ type: string; text: string } | null>(null);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('User logged in, loading notes...'); // Debug log\r\n            loadAllNotes();\r\n        }\r\n    }, [user]); // Only depend on user\r\n\r\n    const loadAllNotes = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            const notesData = await api.getNotes();\r\n            setNotes(notesData || []);\r\n        } catch (err: any) { // Type as any for now\r\n            if (err?.response?.status === 401) {\r\n                // Handle unauthorized error\r\n                navigate('/login');\r\n            } else {\r\n                setError(err instanceof Error ? err.message : 'Failed to load notes');\r\n                console.error('Error loading notes:', err);\r\n            }\r\n            setNotes([]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteNote = async (noteId: number) => {\r\n        try {\r\n            setError(null);\r\n            await api.deleteNote(noteId);\r\n            setNotes(notes.filter(note => note.id !== noteId));\r\n            if (selectedNote?.id === noteId) {\r\n                setSelectedNote(undefined);\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete note');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        console.log('Modal close triggered');\r\n        setSelectedNote(undefined);\r\n    };\r\n\r\n    const handleNoteSelect = (note: Note) => {\r\n        console.log('Note selected:', note);\r\n        setSelectedNote(note);\r\n        console.log('Modal opened');\r\n    };\r\n\r\n    const handleSaveNote = async (noteData: Partial<Note>) => {\r\n        try {\r\n            console.log('Saving note:', noteData);\r\n            if (noteData.id) {\r\n                // Updating existing note\r\n                await api.updateNote(noteData.id, noteData);\r\n            } else {\r\n                // Creating new note\r\n                await api.createNote(noteData);\r\n            }\r\n            await loadAllNotes();\r\n            setSelectedNote(undefined);\r\n            console.log('Note saved successfully');\r\n        } catch (err) {\r\n            console.error('Failed to save note:', err);\r\n            setError('Failed to save note');\r\n        }\r\n    };\r\n\r\n    const handleMakePublic = async (noteId: number) => {\r\n        try {\r\n            console.log('handleMakePublic called with noteId:', noteId);\r\n            if (!noteId) {\r\n                console.error('Invalid note ID:', noteId);\r\n                return;\r\n            }\r\n\r\n            const updatedNote: Note = await api.makeNotePublic(noteId);\r\n            console.log('Note successfully made public:', updatedNote);\r\n\r\n            // Update both notes lists\r\n            setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\r\n            setPublicNotes(prevPublicNotes => [...prevPublicNotes, updatedNote]);\r\n\r\n            // Show success message\r\n            setMessage({ type: 'success', text: 'Note is now public' });\r\n\r\n            // Refresh lists\r\n            await loadAllNotes();\r\n            await loadPublicNotes();\r\n        } catch (error) {\r\n            console.error('Error making note public:', error);\r\n            setError(error instanceof Error ? error.message : 'Failed to make note public');\r\n        }\r\n    };\r\n\r\n    const sortNotes = (notes: Note[]): Note[] => {\r\n        return [...notes].sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-desc':\r\n                    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n                case 'date-asc':\r\n                    return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    // Handle undefined categories\r\n                    const categoryA = a.category || '';\r\n                    const categoryB = b.category || '';\r\n                    return categoryA.localeCompare(categoryB);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    };\r\n\r\n    const filterNotes = useCallback((notesToFilter: Note[]) => {\r\n        if (!notesToFilter) return [];\r\n        \r\n        let filtered = [...notesToFilter];\r\n\r\n        // Apply search filter\r\n        if (searchTerm) {\r\n            filtered = filtered.filter(note =>\r\n                note.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                note.content.toLowerCase().includes(searchTerm.toLowerCase())\r\n            );\r\n        }\r\n\r\n        // Apply category filter\r\n        if (selectedCategory) {\r\n            filtered = filtered.filter(note => note.category === selectedCategory);\r\n        }\r\n\r\n        // Apply sorting\r\n        filtered.sort((a, b) => {\r\n            switch (sortBy) {\r\n                case 'date-asc':\r\n                    return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\r\n                case 'date-desc':\r\n                    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n                case 'title-asc':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'title-desc':\r\n                    return b.title.localeCompare(a.title);\r\n                case 'title':\r\n                    return a.title.localeCompare(b.title);\r\n                case 'category':\r\n                    return (a.category || '').localeCompare(b.category || '');\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n\r\n        return filtered;\r\n    }, [searchTerm, selectedCategory, sortBy]);\r\n\r\n    const filteredNotes = filterNotes(notes);\r\n\r\n    const renderSortOptions = () => {\r\n        const options = [\r\n            { value: 'date-desc', label: 'Newest First' },\r\n            { value: 'date-asc', label: 'Oldest First' },\r\n            { value: 'title', label: 'Title' },\r\n            { value: 'category', label: 'Category' }\r\n        ];\r\n\r\n        return options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n                {option.label}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    const renderCategoryOptions = () => {\r\n        const categories = Array.from(new Set(notes.map(note => note.category)))\r\n            .filter(category => category);\r\n\r\n        return [\r\n            <option key=\"all\" value=\"\">All Categories</option>,\r\n            ...categories.map(category => (\r\n                <option key={category} value={category}>\r\n                    {category}\r\n                </option>\r\n            ))\r\n        ];\r\n    };\r\n\r\n    // Add debug logging for filtered notes\r\n    useEffect(() => {\r\n        console.log('Current notes:', notes);\r\n        console.log('Filtered notes:', filteredNotes);\r\n    }, [notes, filteredNotes]);\r\n\r\n    useEffect(() => {\r\n        console.log('Notes state updated:', notes);\r\n    }, [notes]);\r\n\r\n    // Add useEffect to monitor sharedNotes changes\r\n    useEffect(() => {\r\n        console.log('Shared notes updated:', sharedNotes);\r\n    }, [sharedNotes]);\r\n\r\n    const handleShare = (noteId: number) => {\r\n        setShareDialogNoteId(noteId);\r\n    };\r\n\r\n    const handleShareComplete = async () => {\r\n        await loadAllNotes(); // Reload notes to update the UI\r\n        setShareDialogNoteId(null);\r\n    };\r\n\r\n    const loadPublicNotes = async () => {\r\n        try {\r\n            console.log('Loading public notes...');\r\n            const publicNotes = await api.getPublicNotes();\r\n            console.log('Public notes received:', publicNotes);\r\n            setPublicNotes(publicNotes);\r\n        } catch (err) {\r\n            console.error('Error loading public notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load public notes');\r\n        }\r\n    };\r\n\r\n    const loadSharedNotes = async () => {\r\n        try {\r\n            console.log('Loading shared notes...');\r\n            setIsLoading(true);\r\n            const shared = await api.getSharedNotes();\r\n            console.log('Shared notes received:', shared);\r\n            if (Array.isArray(shared)) {\r\n                setSharedWithMeNotes(shared);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error loading shared notes:', err);\r\n            setError(err instanceof Error ? err.message : 'Failed to load shared notes');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            console.log('Current view:', currentView);\r\n            switch (currentView) {\r\n                case 'my-notes':\r\n                    loadAllNotes();\r\n                    break;\r\n                case 'shared-notes':\r\n                    loadSharedNotes();\r\n                    break;\r\n                case 'public-notes':\r\n                    loadPublicNotes();\r\n                    break;\r\n            }\r\n        }\r\n    }, [currentView, user]);\r\n\r\n    // Update setCurrentView to also update the URL\r\n    const handleViewChange = (view: ViewType) => {\r\n        setCurrentView(view);\r\n        switch (view) {\r\n            case 'my-notes':\r\n                navigate('/notes');\r\n                break;\r\n            case 'shared-notes':\r\n                navigate('/shared-notes');\r\n                break;\r\n            case 'public-notes':\r\n                navigate('/public-notes');\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Add effect to sync URL with current view\r\n    useEffect(() => {\r\n        const path = location.pathname;\r\n        if (path === '/public-notes' && currentView !== 'public-notes') {\r\n            setCurrentView('public-notes');\r\n        } else if (path === '/shared-notes' && currentView !== 'shared-notes') {\r\n            setCurrentView('shared-notes');\r\n        } else if (path === '/notes' && currentView !== 'my-notes') {\r\n            setCurrentView('my-notes');\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    const handleShareNote = async (noteId: number, collaboratorId: number) => {\r\n        try {\r\n            const updatedNote = await api.shareNote(noteId, collaboratorId);\r\n            \r\n            // Update the notes list with the updated note\r\n            setNotes(notes.map(note => \r\n                note.id === noteId ? updatedNote : note\r\n            ));\r\n            \r\n            // Show success message\r\n            setMessage({ type: 'success', text: 'Note shared successfully' });\r\n        } catch (error) {\r\n            console.error('Error sharing note:', error);\r\n            setMessage({ type: 'error', text: error instanceof Error ? error.message : 'Failed to share note' });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        const initializeSignalR = async () => {\r\n            if (user) {  // Only connect if user is logged in\r\n                await signalRService.startConnection();\r\n            }\r\n        };\r\n\r\n        initializeSignalR();\r\n\r\n        return () => {\r\n            mounted = false;\r\n            signalRService.stopConnection();\r\n        };\r\n    }, [user]); // Add user as dependency to reconnect when user changes\r\n\r\n    // Show loading state while auth is initializing\r\n    if (!isInitialized) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // If not authenticated, only render auth routes\r\n    if (!user) {\r\n        return (\r\n            <Routes>\r\n                <Route path=\"/login\" element={<LoginPage />} />\r\n                <Route path=\"/register\" element={<RegisterPage />} />\r\n                <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\r\n            </Routes>\r\n        );\r\n    }\r\n\r\n    // Rest of your render logic for authenticated users\r\n    return (\r\n        <div className=\"App\">\r\n            <Routes>\r\n                {/* Protected routes */}\r\n                <Route path=\"/\" element={\r\n                    <Layout>\r\n                        <Navigate to=\"/notes\" replace />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/notes\" element={\r\n                    <Layout>\r\n                        <NotesPage />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/notes/new\" element={\r\n                    <Layout>\r\n                        <NotesPage isCreating={true} />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/notes/shared\" element={\r\n                    <Layout>\r\n                        <NotesPage type=\"shared\" />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/notes/public\" element={\r\n                    <Layout>\r\n                        <NotesPage type=\"public\" />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/drive\" element={\r\n                    <Layout>\r\n                        <DrivePage />\r\n                    </Layout>\r\n                } />\r\n                <Route path=\"/drive/:folderName\" element={\r\n                    <Layout>\r\n                        <DrivePage />\r\n                    </Layout>\r\n                } />\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}